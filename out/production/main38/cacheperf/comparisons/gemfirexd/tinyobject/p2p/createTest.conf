include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/cacheperf/comparisons/gemfirexd/tinyobject/p2p/configure${api}.inc;
include $JTESTS/cacheperf/comparisons/gemfirexd/statspecs/histogram.inc;

hydra.Prms-testDescription = "Peer servers create data using the tiny object schema.";

THREADGROUP locator
  totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                     * ${locatorThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"locator\", ${locatorHosts}, true)" ncf;
THREADGROUP clientserver
  totalThreads = fcn ${clientserverHosts} * ${clientserverVMsPerHost}
                                    * ${clientserverThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"clientserver\", ${clientserverHosts}, true)" ncf;

hydra.Prms-totalTaskTimeSec = 3600000; // time-based workload
hydra.Prms-maxResultWaitSec = 600;

//------------------------------------------------------------------------------
// General
//------------------------------------------------------------------------------

hydra.VmPrms-extraVMArgs =
  fcn "hydra.TestConfigFcns.duplicate
       (\"-Xms256m -Xmx256m\", ${locatorHosts}, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate
       (\"-Xms${heapMB}m -Xmx${heapMB}m\", ${clientserverHosts}, true)" ncf
  ;
hydra.VmPrms-extraVMArgs +=
  -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+DisableExplicitGC
  ;

//------------------------------------------------------------------------------
// Tasks
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startFabricServerTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectPeerClientTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = openStatisticsTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createQueryDataContainersTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createQueryDataRegionsTask
          threadGroups = clientserver
          objects.query.tinyobject.TinyObjectPrms-tinyObjectRegionConfig =
                                                    TINYOBJECT
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = measureEmptyTableMemoryUsageTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createIndexesTask
          threadGroups = clientserver
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = preparedCreateQueryDataTask
          batch
          cacheperf.CachePerfPrms-keyAllocation = ownKeysChunked
          cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimIterations
          cacheperf.CachePerfPrms-warmupTerminatorFrequency = 1 iterations
          cacheperf.CachePerfPrms-trimIterations = 0
          cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          cacheperf.CachePerfPrms-taskTerminatorFrequency = 1 iterations
          threadGroups = clientserver
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = measureLoadedTableMemoryUsageTask
          threadGroups = clientserver
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = deleteQueryDataContainersTask
          threadGroups = clientserver
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = closeStatisticsTask
          threadGroups = clientserver
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = clientserver
          ;

//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-batchTerminatorMethod     = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-batchSeconds              = 300;
cacheperf.CachePerfPrms-warmupTerminatorMethod    = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-trimSeconds               = 120;
cacheperf.CachePerfPrms-taskTerminatorMethod      = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 10 seconds;
cacheperf.CachePerfPrms-workSeconds               = 300;

//------------------------------------------------------------------------------
// Schema
//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-maxKeys = fcn ${numTinyObjectsPerServer} * ${clientserverHosts} * ${clientserverVMsPerHost} ncf;

objects.query.QueryPrms-api = ${api};
objects.query.QueryPrms-objectType = objects.query.tinyobject.TinyObject;
objects.query.QueryPrms-logQueries = ${logQueries};
objects.query.QueryPrms-logUpdates = ${logQueries};
objects.query.QueryPrms-logQueryResultSize = ${logResultSetSize};
objects.query.QueryPrms-validateResults = ${validateResults};

objects.query.tinyobject.TinyObjectPrms-indexTypes = none;
objects.query.tinyobject.TinyObjectPrms-numTinyObjects = fcn ${numTinyObjectsPerServer} * ${clientserverHosts} * ${clientserverVMsPerHost} ncf;
objects.query.tinyobject.TinyObjectPrms-queryType = randomEqualityOnTinyObjectId;
objects.query.tinyobject.TinyObjectPrms-resultSetSize = ${resultSetSize};

objects.query.tinyobject.TinyObjectPrms-tinyObjectCreateTableIndexes = primaryKeyIndexOnTinyObjectId;
objects.query.tinyobject.TinyObjectPrms-tinyObjectDataPolicy = PARTITION;
objects.query.tinyobject.TinyObjectPrms-tinyObjectPartitionColumn = id;
objects.query.tinyobject.TinyObjectPrms-tinyObjectPartitionRedundancy = ${redundantCopies};
objects.query.tinyobject.TinyObjectPrms-tinyObjectPartitionTotalNumBuckets = fcn ${bucketsPerServer} * ${clientserverHosts} * ${clientserverVMsPerHost} ncf;
objects.query.tinyobject.TinyObjectPrms-tinyObjectPartitionType = PartitionByPK;

//------------------------------------------------------------------------------
// Performance
//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-keyAllocationChunkSize = 1;
cacheperf.comparisons.gemfirexd.QueryPerfPrms-txIsolation = ${txIsolation};

perffmwk.HistogramStatsPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/gemfirexd/statspecs/createHistogram.spec;
perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/gemfirexd/statspecs/create.spec;
