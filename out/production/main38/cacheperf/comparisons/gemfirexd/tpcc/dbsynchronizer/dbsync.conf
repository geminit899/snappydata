include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/gemfirexd/performance.inc;
include $JTESTS/cacheperf/comparisons/gemfirexd/tpcc/dbsynchronizer/topology_dbsync.inc;
include $JTESTS/cacheperf/comparisons/gemfirexd/tpcc/dbsynchronizer/configure${dbapi}.inc;

hydra.Prms-testDescription = "TPCC benchmark using thin clients and dbsynchronizer to ${dbapi}";

hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-totalTaskTimeSec = 3600000; // time-based workload
//hydra.Prms-clientShutdownHook = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
//                                dumpBucketsHook;

cacheperf.CachePerfPrms-batchSeconds              = 300;
cacheperf.CachePerfPrms-batchTerminatorMethod     = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-trimSeconds               = ${trimSeconds};
cacheperf.CachePerfPrms-warmupTerminatorMethod    = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-workSeconds               = ${workSeconds};
cacheperf.CachePerfPrms-taskTerminatorMethod      = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 10 seconds;

cacheperf.CachePerfPrms-maxKeys = 1; // not used

objects.query.QueryPrms-api = ${api};
objects.query.QueryPrms-logQueries = ${logQueries};

cacheperf.comparisons.gemfirexd.QueryPerfPrms-dbapi = ${dbapi};
cacheperf.comparisons.gemfirexd.QueryPerfPrms-dbSynchronizerName = tpccsync;
cacheperf.comparisons.gemfirexd.QueryPerfPrms-dbSynchronizerConfig = "enablepersistence TRUE diskstorename DBSYNC";
cacheperf.comparisons.gemfirexd.QueryPerfPrms-dbSynchronizerServerGroups = dbsync;
cacheperf.comparisons.gemfirexd.QueryPerfPrms-txIsolation = ${txIsolation};

cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-numWarehouses = ${numWarehouses};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-numItems = ${numItems};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-numDistrictsPerWarehouse = ${numDistrictsPerWarehouse};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-numCustomersPerDistrict = ${numCustomersPerDistrict};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-diskStoreFileNum  = ${diskStoreFileNum};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-tableFileNum  = ${tableFileNum};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-indexFileNum  = ${indexFileNum};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-createIndexes = ${createIndexes};
cacheperf.comparisons.gemfirexd.tpcc.TPCCPrms-timeStmts = true;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/gemfirexd/tpcc/tpcc.spec;

//------------------------------------------------------------------------------
// generic startup
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = initializeBlackboardTask
          threadGroups = client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = readBlackboardTask
          threadGroups = client
          ;

//------------------------------------------------------------------------------
// create schema and tables in backend database
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectThinClientTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = openStatisticsTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = dropTablesTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = createTablesTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = closeConnectionTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;

//------------------------------------------------------------------------------
// initialize locator
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startLocatorTask
          threadGroups = locator
          ;

//------------------------------------------------------------------------------
// initialize datahosts
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startFabricServerTask
          threadGroups = dbsync, prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = openStatisticsTask
          threadGroups = dbsync, prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectPeerClientTask
          threadGroups = dbsync, prdata
          ;

//------------------------------------------------------------------------------
// initialize dbsynchronizer
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = createDiskStoresTask
          threadGroups = dbsync
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createAndStartDBSynchronizerTask
          threadGroups = dbsync
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = closeConnectionTask
          threadGroups = dbsync
          ;

//------------------------------------------------------------------------------
// initialize tables
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = createTablesTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = createIndexesOnTablesTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createBucketsTask
          threadGroups = prdata
          ;
//INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
//          taskMethod = rebalanceBucketsTask
//          threadGroups = prdata
//          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = printBucketListTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = setPrimaryBucketListTask
          threadGroups = prdata
          ;
//INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
//          taskMethod = dumpBucketsTask
//          threadGroups = prdata
//          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = checkBucketsTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadWarehouseDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadItemDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadStockDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadDistrictDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadCustomerDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = loadOrderDataTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = checkDataLoadTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = closeConnectionTask
          threadGroups = prdata
          ;

//------------------------------------------------------------------------------
// initialize client/server
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startNetworkServerTask
          threadGroups = prdata
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectThinClientTask
          threadGroups = client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = openStatisticsTask
          threadGroups = client
          ;

//------------------------------------------------------------------------------
// main workload
//------------------------------------------------------------------------------

TASK      taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = executeTPCCTransactionsTask
          cacheperf.comparisons.gemfirexd.QueryPerfPrms-queryPlanFrequency = ${queryPlanFrequency}
          threadGroups = client
          ;

//------------------------------------------------------------------------------
// wrap up
//------------------------------------------------------------------------------

CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = waitForAsyncEventQueuesToDrainTask
          threadGroups = dbsync
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = client, prdata
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = reportExtendedTrimIntervalsTask
          threadGroups = dbsync
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = dumpQueryPlansTask
          threadGroups = prdata
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = checkDataLoadTask
          threadGroups = prdata
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = dropTablesTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = closeStatisticsTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = closeStatisticsTask
          threadGroups = dbsync, prdata, locator
          ;

//------------------------------------------------------------------------------
// drop schema and tables in backend database
//------------------------------------------------------------------------------

CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectThinClientTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = validateWhseTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi}
          objects.query.QueryPrms-logQueries = true
          objects.query.QueryPrms-logQueryResults = true
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.tpcc.TPCCClient
          taskMethod = dropTablesTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = closeConnectionTask
          threadGroups = db
          objects.query.QueryPrms-api = ${dbapi};
          ;
