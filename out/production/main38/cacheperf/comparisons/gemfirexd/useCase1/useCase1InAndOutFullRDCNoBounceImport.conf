include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/gemfirexd/performance.inc;

hydra.Prms-testDescription = "UseCase1 benchmark using thin clients";
hydra.Prms-testTopology = "There are 2 sites (1 ETL and 1 ME) with 2 zones each. Each zone is on its own hosts and has 4 data nodes, with 1 in each zone being a gateway sender/receiver, and a locator. All senders and receivers host all data.";

hydra.Prms-totalTaskTimeSec = 3600000; // time-based workload
hydra.Prms-maxResultWaitSec = fcn ${workSeconds} + 300 ncf;
hydra.Prms-manageLocatorAgents = false;
hydra.Prms-disableCreateBucketRandomness = false; // override setting in performance.inc

//------------------------------------------------------------------------------
//  HOSTS
//------------------------------------------------------------------------------

hydra.HostPrms-names =
  host_traffic_cop

  host_merdc_ds_11_z1   host_merdc_ds_11_z2
  host_etlrdc_ds_12_z1  host_etlrdc_ds_12_z2

  host_inclient_ds_11  host_outclient_ds_11
  host_etlclient_ds_12
  ;

//------------------------------------------------------------------------------
//  VMS
//------------------------------------------------------------------------------

hydra.VmPrms-names =
  vm_traffic_cop

  vm_locator_merdc_ds_11_z1   vm_locator_merdc_ds_11_z2
  vm_locator_etlrdc_ds_12_z1  vm_locator_etlrdc_ds_12_z2

  vm_data_merdc_ds_11_z1   vm_data_merdc_ds_11_z2
  vm_data_etlrdc_ds_12_z1  vm_data_etlrdc_ds_12_z2

  vm_data_gate_merdc_ds_11_z1   vm_data_gate_merdc_ds_11_z2
  vm_data_gate_etlrdc_ds_12_z1  vm_data_gate_etlrdc_ds_12_z2

  vm_inclient_ds_11  vm_outclient_ds_11
  vm_etlclient_ds_12
  ;
hydra.VmPrms-hostNames =
  host_traffic_cop

  host_merdc_ds_11_z1   host_merdc_ds_11_z2
  host_etlrdc_ds_12_z1  host_etlrdc_ds_12_z2

  host_merdc_ds_11_z1   host_merdc_ds_11_z2
  host_etlrdc_ds_12_z1  host_etlrdc_ds_12_z2

  host_merdc_ds_11_z1   host_merdc_ds_11_z2
  host_etlrdc_ds_12_z1  host_etlrdc_ds_12_z2

  host_inclient_ds_11  host_outclient_ds_11
  host_etlclient_ds_12
  ;
hydra.VmPrms-extraVMArgs =
  fcn "hydra.TestConfigFcns.duplicate // traffic_cop
       (\"-Xms256m -Xmx256m\", 1, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate // locator
       (\"-Xms256m -Xmx256m\", 4, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicateString // data
       (\"-Xms${serverHeapGB}g -Xmx${serverHeapGB}g -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=33 -Xmn512m\", 4, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicateString // data_gate
       (\"-Xms${serverHeapGB}g -Xmx${serverHeapGB}g -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=33 -Xmn512m\", 4, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate // client
       (\"-Xms${inclientHeapMB}m -Xmx${inclientHeapMB}m\", 1, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate // client
       (\"-Xms${outclientHeapMB}m -Xmx${outclientHeapMB}m\", 1, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate // client
       (\"-Xms${etlclientHeapMB}m -Xmx${etlclientHeapMB}m\", 1, true)" ncf
  ;

//------------------------------------------------------------------------------
//  CLIENTS
//------------------------------------------------------------------------------

// each hydra client JVM is named for its role in the site, the type of site,
// the distributed system, and the zone

hydra.ClientPrms-names =
  traffic_cop

  locator_merdc_ds_11_z1   locator_merdc_ds_11_z2
  locator_etlrdc_ds_12_z1  locator_etlrdc_ds_12_z2

  data_merdc_ds_11_z1   data_merdc_ds_11_z2
  data_etlrdc_ds_12_z1  data_etlrdc_ds_12_z2

  data_gate_merdc_ds_11_z1   data_gate_merdc_ds_11_z2
  data_gate_etlrdc_ds_12_z1  data_gate_etlrdc_ds_12_z2

  inclient_ds_11  outclient_ds_11
  etlclient_ds_12
  ;

hydra.ClientPrms-vmNames =
  vm_traffic_cop

  vm_locator_merdc_ds_11_z1   vm_locator_merdc_ds_11_z2
  vm_locator_etlrdc_ds_12_z1  vm_locator_etlrdc_ds_12_z2

  vm_data_merdc_ds_11_z1   vm_data_merdc_ds_11_z2
  vm_data_etlrdc_ds_12_z1  vm_data_etlrdc_ds_12_z2

  vm_data_gate_merdc_ds_11_z1   vm_data_gate_merdc_ds_11_z2
  vm_data_gate_etlrdc_ds_12_z1  vm_data_gate_etlrdc_ds_12_z2

  vm_inclient_ds_11  vm_outclient_ds_11
  vm_etlclient_ds_12
  ;
hydra.ClientPrms-vmQuantities =
  1       // traffic_cop
  1 1 1 1 // locator
  3 3 3 3 // data
  1 1 1 1 // data_gate
  ${clientVMs} ${clientVMs} // client
  ${clientVMs} // client
  ;
hydra.ClientPrms-vmThreads =
  1       // traffic_cop
  1 1 1 1 // locator
  1 1 1 1 // data
  1 1 1 1 // data_gate
  ${meClientThreads} ${meClientThreads} // client
  ${etlClientThreads} // client
  ;
cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-numClients = fcn ${clientVMs} * ${etlClientThreads} + 2 * ${clientVMs} * ${meClientThreads} ncf;
cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-numETLLoadClients = fcn ${clientVMs} * ${etlClientThreads} ncf;
cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-numETLGatewayServers = 2;
cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-numServersPerShutDownAll = 4;

THREADGROUP traffic_cop
  totalThreads = 1
  clientNames =  traffic_cop;
THREADGROUP locator
  totalThreads = 4
  clientNames  = locator_merdc_ds_11_z1,   locator_merdc_ds_11_z2,
                 locator_etlrdc_ds_12_z1,  locator_etlrdc_ds_12_z2;
THREADGROUP server_ds_11
  totalThreads = 6
  clientNames =  data_merdc_ds_11_z1,      data_merdc_ds_11_z2;
THREADGROUP servergate_ds_11
  totalThreads = 2
  clientNames =  data_gate_merdc_ds_11_z1, data_gate_merdc_ds_11_z2;
THREADGROUP server_ds_12
  totalThreads = 6
  clientNames =  data_etlrdc_ds_12_z1,      data_etlrdc_ds_12_z2;
THREADGROUP servergate_ds_12
  totalThreads = 2
  clientNames =  data_gate_etlrdc_ds_12_z1, data_gate_etlrdc_ds_12_z2;
THREADGROUP inclient_ds_11
  totalThreads = fcn ${clientVMs} * ${meClientThreads} ncf
  clientNames =  inclient_ds_11;
THREADGROUP outclient_ds_11
  totalThreads = fcn ${clientVMs} * ${meClientThreads} ncf
  clientNames =  outclient_ds_11;
THREADGROUP etlclient_ds_12
  totalThreads = fcn ${clientVMs} * ${etlClientThreads} ncf
  clientNames =  etlclient_ds_12;

//------------------------------------------------------------------------------
//  THIN CLIENTS (give loners the same logical names used in statspecs)
//------------------------------------------------------------------------------

hydra.gemfirexd.LonerPrms-names = traffic_cop inclient outclient etlclient;
hydra.gemfirexd.LonerPrms-clientNames =
  traffic_cop, inclient_ds_11, outclient_ds_11, etlclient_ds_12
  ;

hydra.gemfirexd.ThinClientPrms-names = client;
hydra.gemfirexd.ThinClientPrms-clientNames =
  inclient_ds_11 outclient_ds_11
  etlclient_ds_12
  ;
//hydra.gemfirexd.ThinClientPrms-singleHopEnabled = true;
//hydra.gemfirexd.ThinClientPrms-singleHopMaxConnections = 20;

//------------------------------------------------------------------------------
//  FABRIC SERVERS
//------------------------------------------------------------------------------

hydra.gemfirexd.FabricServerPrms-names =
  locator_merdc_ds_11_z1  locator_merdc_ds_11_z2
  locator_etlrdc_ds_12_z1 locator_etlrdc_ds_12_z2

  data_merdc_ds_11_z1  data_merdc_ds_11_z2
  data_etlrdc_ds_12_z1 data_etlrdc_ds_12_z2

  data_gate_merdc_ds_11_z1  data_gate_merdc_ds_11_z2
  data_gate_etlrdc_ds_12_z1 data_gate_etlrdc_ds_12_z2
  ;
hydra.gemfirexd.FabricServerPrms-clientNames =
  locator_merdc_ds_11_z1,  locator_merdc_ds_11_z2,
  locator_etlrdc_ds_12_z1, locator_etlrdc_ds_12_z2,

  data_merdc_ds_11_z1,  data_merdc_ds_11_z2,
  data_etlrdc_ds_12_z1, data_etlrdc_ds_12_z2,

  data_gate_merdc_ds_11_z1,  data_gate_merdc_ds_11_z2,
  data_gate_etlrdc_ds_12_z1, data_gate_etlrdc_ds_12_z2
  ;
hydra.gemfirexd.FabricServerPrms-conserveSockets = false
  ;
hydra.gemfirexd.FabricServerPrms-distributedSystem =
  ds_11 ds_11 ds_12 ds_12 // locator
  ds_11 ds_11 ds_12 ds_12 // data
  ds_11 ds_11 ds_12 ds_12 // data_gate
  ;
hydra.gemfirexd.FabricServerPrms-hostData =
  false false false false // locator
  true  true  true  true  // data
  true  true  true  true  // data_gate
  ;
hydra.gemfirexd.FabricServerPrms-persistDD = true
  ;
hydra.gemfirexd.FabricServerPrms-persistQueues = true
  ;
hydra.gemfirexd.FabricServerPrms-persistTables =
  false false false false // locator
  true  true  true  true  // data
  true  true  true  true  // data_gate
  ;
hydra.gemfirexd.FabricServerPrms-redundancyZone =
  z1 z2 z1 z2 // locator
  z1 z2 z1 z2 // data
  z1 z2 z1 z2 // data_gate
  ;
hydra.gemfirexd.FabricServerPrms-remoteDistributedSystems =
  ds_12,       ds_12,        // locator_merdc_ds_11
  ds_11 ds_14, ds_11 ds_14,  // locator_etlrdc_ds_12
  none                       // data and data_gate
  ;
hydra.gemfirexd.FabricServerPrms-serverGroups =
  none, none, none, none, // locator
  none, none, none, none, // data
  channeldatagrp, channeldatagrp, channeldatagrp, channeldatagrp // data_gate
  ;
hydra.gemfirexd.FabricServerPrms-tableDefaultPartitioned = false
  ;

//------------------------------------------------------------------------------
//  SERVERS
//------------------------------------------------------------------------------

hydra.gemfirexd.NetworkServerPrms-names = network;

hydra.gemfirexd.GfxdConfigPrms-networkServerConfig = network;

//------------------------------------------------------------------------------
//  WORKLOAD
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = connectLonerTask
          threadGroups = traffic_cop
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = openStatisticsTask
          threadGroups = traffic_cop
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = postClientVmInfoTask
          threadGroups = server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startFabricServerTask
          threadGroups = server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          runMode = always
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startNetworkServerTask
          threadGroups = server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          runMode = always
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = connectUseCase1ThinWanClientTask
          threadGroups = inclient_ds_11, outclient_ds_11, etlclient_ds_12
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = openStatisticsTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = openStatisticsTask
          threadGroups = server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          runMode = always
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = openStatisticsTask
          threadGroups = inclient_ds_11, outclient_ds_11, etlclient_ds_12
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = executeDDLTask
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-ddlFile = ${ddlSchemaFile}
          threadGroups = inclient_ds_11, outclient_ds_11
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = setHeapPercentageTask
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-heapPercentage = ${heapPercentage}
          threadGroups = inclient_ds_11, outclient_ds_11
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = executeDDLTask
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-ddlFile = ${ddlSchemaFile}
          threadGroups = etlclient_ds_12
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = importTablesTask
          threadGroups = inclient_ds_11, outclient_ds_11
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-importTableDir = ${importTableDir}
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-importTables =
                    SECM_LOCATION
                    SECM_BACKOFFICE_ONBOARDED
                    SECM_CHANNEL_ONBOARDED
                    SECM_KEY_LIST
                    SECM_PREMATCH_TRANSFORMATION
                    SECM_MATCHING_KEY_INFO
                    SECM_TXN_MANAGEMENT
                    SECM_CATEGORIZATION
                    SECM_PARSER_CONFIGURATION
                    SECM_BO_MESSAGE_TAG_MAPPING
                    SECM_PROCESS_CONFIG
                    SECM_MQ_MGR
                    SECM_MQ
                    SECM_MQ_BO_MAP
                    SECM_OFAC_MQ_ROUTING
                    QRTZ_LOCKS
                    SECM_COUNTRY
                    SECM_ERROR_CODES
                    SECM_ERROR_MAIL_CONFIG
                    SECM_ERROR_MESSAGE
                    SEC_CHANNEL_DATA
                    ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = executeDDLTask
          threadGroups = inclient_ds_11, outclient_ds_11
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-ddlFile = ${ddlGatewayFile11}
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = executeDDLTask
          threadGroups = etlclient_ds_12
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-ddlFile = ${ddlGatewayFile12}
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = executeDDLTask
          threadGroups = inclient_ds_11, outclient_ds_11
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-ddlFile = ${ddlMatchStoredProcFile11}
          ;
TASK      taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = trafficCopNoBounceTask
          threadGroups = traffic_cop
          cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-trafficCopSleepSec = ${workSeconds}
          ;
TASK      taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = useCase1InboundWorkloadTask
          threadGroups = inclient_ds_11
          //cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-workloadThrottleMs = range 1 10 egnar
          cacheperf.CachePerfPrms-batchSeconds = 15
          cacheperf.CachePerfPrms-keyAllocation = ownKeys
          ;
TASK      taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = useCase1OutboundWorkloadTask
          threadGroups = outclient_ds_11
          //cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-workloadThrottleMs = range 1 10 egnar
          cacheperf.CachePerfPrms-batchSeconds = 15
          cacheperf.CachePerfPrms-keyAllocation = ownKeys
          ;
TASK      taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = generateMoreDataTask
          threadGroups = etlclient_ds_12
          cacheperf.CachePerfPrms-batchSeconds = 15
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = traffic_cop,
                         inclient_ds_11, outclient_ds_11,
                         etlclient_ds_12,
                         server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = dumpQueryPlansTask
          threadGroups = server_ds_11
          //threadGroups = server_ds_11, server_ds_12
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = closeStatisticsTask
          threadGroups = inclient_ds_11, outclient_ds_11, etlclient_ds_12
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = closeStatisticsTask
          threadGroups = server_ds_11, server_ds_12, servergate_ds_11, servergate_ds_12
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase1.UseCase1Client
          taskMethod = closeStatisticsTask
          threadGroups = traffic_cop
          ;

//cacheperf.CachePerfPrms-batchSeconds = 10; // not used
//cacheperf.CachePerfPrms-trimSeconds = 30; // not used
//cacheperf.CachePerfPrms-workSeconds = 60; // not used

cacheperf.CachePerfPrms-maxKeys = 1000000000;
cacheperf.CachePerfPrms-numWanSites = 4; // not used

//------------------------------------------------------------------------------
//  ADDITIONAL CONFIGURATION
//------------------------------------------------------------------------------

objects.query.QueryPrms-api = ${api};
objects.query.QueryPrms-logQueries = ${logQueries};

cacheperf.comparisons.gemfirexd.QueryPerfPrms-txIsolation = ${txIsolation};

cacheperf.comparisons.gemfirexd.useCase1.UseCase1Prms-timeStmts = false;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf.comparisons.gemfirexd.useCase1/specs/useCase1.spec;
