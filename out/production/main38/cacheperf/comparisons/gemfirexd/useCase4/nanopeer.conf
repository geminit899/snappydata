include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/gemfirexd/topology_2_locator.inc;
include $JTESTS/hydraconfig/gemfirexd/performance.inc;
include $JTESTS/cacheperf/comparisons/gemfirexd/statspecs/histogram.inc;

hydra.Prms-testDescription = "Peer client version of useCase4 ${queryType} performance test. Account=${accounts} rows, AccountProfile=${accountprofiles} rows, Holding=${holdings} rows, Orders=${orders} rows, Quote=${quotes} rows.";

//------------------------------------------------------------------------------
// General
//------------------------------------------------------------------------------

hydra.VmPrms-extraVMArgs =
  fcn "hydra.TestConfigFcns.duplicate
       (\"-Xms256m -Xmx256m\", ${locatorHosts}, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate
       (\"-Xms${clientHeapMB}m -Xmx${clientHeapMB}m\",
                                    ${clientHosts}, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate
       (\"-Xmn${newSizeMB}m -Xms${serverHeapMB}m -Xmx${serverHeapMB}m\",
                                   ${serverHosts}, true)" ncf
  ;
hydra.VmPrms-extraVMArgs +=
  fcn "hydra.TestConfigFcns.duplicate
       (\"-XX:+DisableExplicitGC\", ${locatorHosts}, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicate
       (\"-XX:+DisableExplicitGC\", ${clientHosts}, true)" ncf
  ,
  fcn "hydra.TestConfigFcns.duplicateString
       (\"-XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+DisableExplicitGC\", ${serverHosts}, true)" ncf
  ;

//------------------------------------------------------------------------------
// GFXD
//------------------------------------------------------------------------------

hydra.gemfirexd.FabricServerPrms-names = locator client server;
hydra.gemfirexd.FabricServerPrms-clientNames =
  fcn "hydra.TestConfigFcns.generateNames(\"locator\", ${locatorHosts})" ncf
  ,
  fcn "hydra.TestConfigFcns.generateNames(\"client\", ${clientHosts})" ncf
  ,
  fcn "hydra.TestConfigFcns.generateNames(\"server\", ${serverHosts})" ncf
  ;
hydra.gemfirexd.FabricServerPrms-conserveSockets = false;
hydra.gemfirexd.FabricServerPrms-distributedSystem = ds;
hydra.gemfirexd.FabricServerPrms-hostData = false false true;
hydra.gemfirexd.FabricServerPrms-persistDD = false false true;
hydra.gemfirexd.FabricServerPrms-persistTables = false false true;

INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = createLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = startFabricServerTask
          threadGroups = server, client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = connectPeerClientTask
          threadGroups = client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = openStatisticsTask
          threadGroups = locator, server, client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = executeDDLTask
          threadGroups = client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = loadDataTask
          threadGroups = client
          ;
INITTASK  taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = initAccountsTask
          threadGroups = client
          ;
TASK      taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = runQueriesTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.QueryPerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = dropTablesTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = closeStatisticsTask
          threadGroups = client
          ;
CLOSETASK taskClass = cacheperf.comparisons.gemfirexd.useCase4.UseCase4Client
          taskMethod = closeStatisticsTask
          threadGroups = server
          ;

hydra.Prms-totalTaskTimeSec = 3600000; // time-based workload
hydra.Prms-maxResultWaitSec = 1800;

THREADGROUP locator
  totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost} * ${locatorThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames (\"locator\", ${locatorHosts}, true)"
                 ncf;
THREADGROUP client
  totalThreads = fcn ${clientHosts} * ${clientVMsPerHost} * ${clientThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"client\", ${clientHosts}, true)"
                 ncf;
THREADGROUP server
  totalThreads = fcn ${serverHosts} * ${serverVMsPerHost} * ${serverThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"server\", ${serverHosts}, true)"
                 ncf;

cacheperf.CachePerfPrms-batchSeconds              = fcn ${trimSeconds} + ${workSeconds} + 10 ncf;
cacheperf.CachePerfPrms-batchTerminatorMethod     = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-trimSeconds               = ${trimSeconds};
cacheperf.CachePerfPrms-warmupTerminatorMethod    = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 5 seconds;
cacheperf.CachePerfPrms-workSeconds               = ${workSeconds};
cacheperf.CachePerfPrms-taskTerminatorMethod      = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 5 seconds;

cacheperf.CachePerfPrms-maxKeys = 1; // not used

objects.query.QueryPrms-api = ${api};

cacheperf.comparisons.gemfirexd.QueryPerfPrms-txIsolation = ${txIsolation};

cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-queryType = ${queryType};

cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-ddlFileName =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/ddl/${ddlFileName};

cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-dataFileNameForAccount =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/data/ACCOUNT-${accounts}.dat;
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-dataFileNameForAccountProfile =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/data/ACCOUNTPROFILE-${accountprofiles}.dat;
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-dataFileNameForHolding =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/data/HOLDING-${holdings}.dat;
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-dataFileNameForOrders =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/data/ORDERS-${orders}.dat;
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-dataFileNameForQuote =
  $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/data/QUOTE-${quotes}.dat;

cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-rowsInAccount = ${accounts};
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-rowsInAccountProfile = ${accountprofiles};
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-rowsInHolding = ${holdings};
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-rowsInOrders = ${orders};
cacheperf.comparisons.gemfirexd.useCase4.UseCase4Prms-rowsInQuote = ${quotes};

perffmwk.HistogramStatsPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/histogram.spec;
perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/gemfirexd/useCase4/query.spec;
