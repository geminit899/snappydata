hydra.Prms-testDescription = "Basic Trigger Tests";

INCLUDE $JTESTS/sql/trigger/triggerCommon.conf;

hydra.Prms-serialExecution = true;
hydra.Prms-manageDerbyServer = true;             
	
INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_testInsertActions
	 threadGroups = ddlThread;

INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	
	 
INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_testDeleteAll
	 threadGroups = ddlThread;
	 		
CLOSETASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	
	
sql.trigger.TriggerPrms-audit = true;
sql.trigger.TriggerPrms-triggerStmts =
	//"CREATE TRIGGER after_stmt_trigger AFTER DELETE ON trade.customers REFERENCING OLD_TABLE AS OldTable FOR EACH STATEMENT INSERT INTO trade.customers_audit SELECT cid, cust_name, since, addr, tid FROM OldTable";
	// Check if the default to STATEMENT trigger works
	"CREATE TRIGGER after_stmt_trigger AFTER DELETE ON trade.customers REFERENCING OLD_TABLE AS OldTable INSERT INTO trade.customers_audit SELECT cid, cust_name, since, addr, tid FROM OldTable";
	
RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
