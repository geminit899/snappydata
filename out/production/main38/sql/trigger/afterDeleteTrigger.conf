hydra.Prms-testDescription = " Basic Trigger Tests ";

INCLUDE $JTESTS/sql/trigger/triggerCommon.conf;

hydra.Prms-serialExecution = true;
hydra.Prms-manageDerbyServer = true;

INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_testInsertActions
	 threadGroups = ddlThread;

INITTASK	taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	
	 	 
INITTASK	taskClass	= sql.trigger.TriggerTest taskMethod  = HydraTask_testDeleteActions
	 threadGroups = ddlThread;
	 
CLOSETASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	

sql.trigger.TriggerPrms-audit = true;
sql.trigger.TriggerPrms-triggerStmts =
	"CREATE TRIGGER after_insert_trigger AFTER INSERT ON trade.customers REFERENCING NEW AS NEW FOR EACH ROW INSERT INTO trade.customers_audit VALUES(NEW.cid,NEW.cust_name,NEW.since,NEW.addr,NEW.tid)"
	"CREATE TRIGGER after_delete_trigger AFTER DELETE ON trade.customers REFERENCING OLD AS DELETEDROW FOR EACH ROW DELETE FROM trade.customers_audit WHERE cid = DELETEDROW.cid";

RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
