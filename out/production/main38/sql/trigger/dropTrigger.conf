hydra.Prms-testDescription = " Basic Trigger Tests ";

INCLUDE $JTESTS/sql/trigger/triggerCommon.conf;

hydra.Prms-serialExecution = true;
hydra.Prms-manageDerbyServer = true;
	
INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_testInsertActions
	 threadGroups = ddlThread;

INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	
	 
INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_dropTriggers
	 threadGroups = ddlThread;

INITTASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_testInsertActions
	 threadGroups = ddlThread;
	 	 		
CLOSETASK     taskClass   = sql.trigger.TriggerTest taskMethod  = HydraTask_verifyTriggerResults
	 threadGroups = ddlThread;	
	
sql.trigger.TriggerPrms-audit = true;
sql.trigger.TriggerPrms-triggerStmts =
	"CREATE TRIGGER after_insert_trigger AFTER INSERT ON trade.customers REFERENCING NEW AS NEW FOR EACH ROW INSERT INTO trade.customers_audit VALUES(NEW.cid,NEW.cust_name,NEW.since,NEW.addr,NEW.tid)";
sql.trigger.TriggerPrms-dropTriggerStmts = 
	"DROP TRIGGER after_insert_trigger";

RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
