hydra.Prms-testDescription = "test gemfirexd tx using thin client driver";

include $JTESTS/sql/sqlTx/thinClient/repeatableRead/randomPartitionTablesRRTxClient.conf;

hydra.gemfirexd.GfxdHelperPrms-persistTables = true;
hydra.gemfirexd.FabricServerPrms-persistDD = true true false;

sql.SQLPrms-redundancyClause =
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1"
    " REDUNDANCY 1";
    
//tables are put into default store
sql.SQLPrms-gfePersistExtension = 
	" PERSISTENT " 
    " PERSISTENT "
	" PERSISTENT "
	" PERSISTENT "
	" PERSISTENT "  
	" PERSISTENT " 
	" PERSISTENT "
	" "
	" " ;

CLOSETASK taskClass   = sql.sqlTx.thinClient.repeatableRead.RRTxClientTest  
		  taskMethod  = HydraTask_stopFabricServer
          threadGroups = serverThreads;   

CLOSETASK taskClass   = sql.sqlTx.thinClient.repeatableRead.RRTxClientTest  
		  taskMethod  = HydraTask_startFabricServer
          threadGroups = serverThreads;           
		
CLOSETASK taskClass   = sql.sqlTx.thinClient.repeatableRead.RRTxClientTest 
		  taskMethod  = HydraTask_startNetworkServer
	 	  threadGroups =  serverThreads;    

CLOSETASK taskClass   = sql.sqlTx.thinClient.repeatableRead.RRTxClientTest 
		  taskMethod  = HydraTask_verifyResultSets
   		  threadGroups = ddlThread;   