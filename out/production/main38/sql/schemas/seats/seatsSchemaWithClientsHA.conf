include $JTESTS/sql/schemas/seats/seatsSchemaWithClients.conf;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;

INITTASK     taskClass   = util.PRObserver  taskMethod = initialize
             runMode = once
             threadGroups = server;

//INITTASK     taskClass   = util.StopStartVMs  taskMethod = StopStart_initTask;

INITTASK  taskClass = sql.schemas.SchemaTest taskMethod = HydraTask_createTableNumOfPRs
		  runMode = once
          threadGroups = ddlThread;

INITTASK  taskClass = sql.schemas.SchemaTest taskMethod = HydraTask_findNumOfPRs
		  runMode = once
          threadGroups = server;

INITTASK  taskClass = sql.schemas.SchemaTest taskMethod = HydraTask_setNumOfPRs
		  runMode = once
          threadGroups = ddlThread;

INITTASK  taskClass = sql.schemas.seats.SeatsTest taskMethod = HydraTask_addInitialData
          threadGroups = client, ddlThread;

TASK     taskClass   = sql.schemas.SchemaTest taskMethod  = HydraTask_cycleStoreVms
	     threadGroups = client, ddlThread;
	     
sql.SQLPrms-redundancyClause =
	" REDUNDANCY ${redundantCopies} " ;

sql.SQLPrms-cycleVMTarget = "${A}server";

hydra.VmPrms-extraVMArgs += "-XX:+UseParNewGC";
hydra.VmPrms-extraVMArgs += "-XX:+UseConcMarkSweepGC";
hydra.VmPrms-extraVMArgs += "-XX:CMSInitiatingOccupancyFraction=50";

sql.SQLPrms-waitTimeBeforeNextCycleVM=120; //how long to wait before nodes will be cycled.
