//------------------------------------------------------------------------------
// TEST CONFIG
//------------------------------------------------------------------------------
//
//	sql/hdfs/hdfsConcJoinTablesWithUniqHA.conf
//	    A=datastore datastoreHosts=4 datastoreVMsPerHost=1 datastoreThreadsPerVM=1
//	    B=accessor accessorHosts=2 accessorVMsPerHost=1 accessorThreadsPerVM=9
//	    locatorHosts = 1 locatorVMsPerHost =1 locatorThreadsPerVM = 1
//	    redundantCopies=1
//      testMultiTableJoin=false
//      testUniqueKeys=false   
//	    securities=trade.securities:random
//	    customers=trade.customers:random
//	    networth=trade.networth:random
//	    portfolio=trade.portfolio:random
//	    sellorders=trade.sellorders:random
//	    buyorders=trade.buyorders:random
//	    txhistory=trade.txhistory:random
//	    companies=trade.companies:random
//      trades=trade.trades:replicate
//      employees=emp.employees:replicate  
//
//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/sql/hdfs/hdfsConcJoinTablesWithUniq.conf;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription=" GemFireXD test to verify join queries on tables having HDFS, and HA for data nodes, operations from accessors.";
  
hydra.Prms-totalTaskTimeSec           = 300;
hydra.Prms-maxResultWaitSec           = 9000;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;

INITTASK taskClass = util.PRObserver  taskMethod = initialize
         runMode = once
         threadGroups = datastoreThreads;

INITTASK taskClass = util.StopStartVMs  taskMethod = StopStart_initTask;

TASK taskClass = sql.SQLTest taskMethod  = HydraTask_cycleStoreVms
     maxThreads = 1
     threadGroups = accessorThreads;
  