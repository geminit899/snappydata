THREADGROUP locator
    totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                       * ${locatorThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"locator\", ${locatorHosts}, true)"
                   ncf;
                       
INITTASK    taskClass     = util.StopStartVMs  taskMethod = StopStart_initTask
            runMode = always;

INITTASK taskClass = sql.sqlBridge.SQLBridgeTest taskMethod = createLocatorTask
         threadGroups = locator runMode = always;
         
INITTASK taskClass = sql.sqlBridge.SQLBridgeTest taskMethod = startAndConnectLocatorTask
         threadGroups = locator runMode = always;

INCLUDE $JTESTS/sql/sqlDisk/randomPartitionReplPersistTablesHA.conf;

INCLUDE $JTESTS/hydraconfig/topology_p2p_2_locator.inc;
hydra.GemFirePrms-roles =
fcn "hydra.TestConfigFcns.duplicate(\"none\", ${locatorHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"gemfirexd.datastore\", ${storeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"gemfirexd.accessor\", ${accessorHosts})" ncf; // setup accessor & dataStore
  
TASK          taskClass = sql.rollingUpgrade.SQLRollingUpgradeTest taskMethod = HydraTask_UpgradeLocators
              threadGroups = accessorThreads
              maxTimesToRun = 1;
TASK          taskClass = sql.SQLTest taskMethod = HydraTask_cycleAccessorVms
              threadGroups = locator
              startInterval = 240
              maxThreads = 1;
TASK          taskClass   = sql.SQLTest taskMethod  = HydraTask_cycleRemainingStoreVms
              maxThreads = 1
              startInterval = 240
              threadGroups = accessorThreads, ddlThread;
sql.rollingUpgrade.SQLRollingUpgradePrms-waitForLocatorUpgrade = true;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT FOENO;
INCLUDE $JTESTS/sql/rollingUpgrade/versionUpgrade.inc;

hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derby.jar";
hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbyclient.jar";
hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbytools.jar";
hydra.Prms-derbyServerClassPath     =   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbynet.jar";
hydra.Prms-extraDerbyServerVMArgs += " -Xmx1024m -Dderby.storage.pageCacheSize=32000 -Dderby.locks.waitTimeout=30 -Dderby.locks.deadlockTimeout=20 ";

sql.hdfs.HDFSTestPrms-useRandomConfig = false;
