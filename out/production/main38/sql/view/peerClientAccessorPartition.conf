hydra.Prms-testDescription = "test views with base tables not partitioned using peer client";

include $JTESTS/sql/view/peerClientAccessorCommon.inc; 
  
TASK    taskClass   = sql.view.ViewTest 
	taskMethod  = HydraTask_queryAndVerifyViewByPeers
	threadGroups = accessorThreads, ddlThread;
	
//sql hydra already sets the gemfirexd.table-default-partitioned to true, so need explicitly specify the created tables to be replicated
sql.SQLPrms-gfeDDLExtension =
	" replicate"
        " partition by range (cid) ( VALUES BETWEEN 0 AND 999, VALUES BETWEEN 1000 AND 1999, VALUES BETWEEN 2000 AND 2999, VALUES BETWEEN 3000 AND 3999, VALUES BETWEEN 4000 AND 100000) "
	" partition by range (cid) ( VALUES BETWEEN 0 AND 999, VALUES BETWEEN 1000 AND 1999, VALUES BETWEEN 2000 AND 2999, VALUES BETWEEN 3000 AND 3999, VALUES BETWEEN 4000 AND 100000) colocate with (trade.customers) " 
	" "
	" "
	" "
	" "
	" replicate"
	" partition by range (cid) ( VALUES BETWEEN 0 AND 999, VALUES BETWEEN 1000 AND 1999, VALUES BETWEEN 2000 AND 2999, VALUES BETWEEN 3000 AND 3999, VALUES BETWEEN 4000 AND 100000) colocate with (trade.customers) "
	;

//The definition of the views
//create view trade.securities_vw (sec_id, symbol, exchange) as select sec_id, symbol, exchange from trade.securities;
//create view trade.cust_networth_vw (cid, cust_name, cash, securities) as select t1.cid, t1.cust_name, t2.cash, t2.securities from trade.customers t1, trade.networth t2 where t1.cid=t2.cid;
//create view trade.cust_emp_vw (cid, name, eid, ssn) as select t1.cid, t1.cust_name, t2.eid, t2.ssn from trade.customers t1, emp.employees t2 where t1.cust_name = t2.emp_name;
//create view trade.buy_history_vw (oid, cid, qty, ordertime, price) as select t1.oid, t1.cid, t1.qty, t1.ordertime, t2.price from trade.buyorders t1, trade.txhistory t2 where t1.ordertime = t2.ordertime and t2.type = 'buy';
//create view trade.emp_trade_vw (eid, name, tradedate) as select t1.eid, t1.emp_name, t2.tradedate from emp.employees t1, trade.trades t2 where t1.eid = t2.eid;
//create view trade.cust_trade_vw (cid, name, tradedate) as select t1.cid, t1.cust_name, t2.tradedate from trade.customers t1, trade.trades t2 where t1.cid = t2.cid;
//create view trade.cust_count_since2010_vw (since_date, cust_count) as select since, count(*) from trade.customers group by since having since > '2010-01-01';
//create view trade.cust_networth_trade_vw (cid, name, cash, tradedate) as select v1.cid, v1.name, v1.tradedate, t1.cash from trade.cust_trade_vw v1, trade.networth t1 where v1.cid = t1.cid;
//create view trade.cust_networth_trade_alltables_vw (cid, name, cash, tradedate) as select t1.cid, t1.cust_name, t2.cash, t3.tradedate from trade.customers t1, trade.networth t2, trade.trades t3 where t1.cid = t2.cid and t2.cid = t3.cid;
//create view trade.cust_tradeCount_with5KNetworth_vw (cid, name, cash, trade_count) as select t1.cid, t1.cust_name, t2.cash, count(t3.tradedate) from trade.customers t1, trade.networth t2, trade.trades t3 where t1.cid = t2.cid and t2.cid = t3.cid group by t1.cid, t1.cust_name, t2.cash having t2.cash > 5000;

sql.view.ViewPrms-queryViewsStatements = 
        "select * from trade.securities_vw"   						//query a simple view
        "select * from trade.securities_vw where symbol = 'VMW'"  			//query a simple view using where
        "select * from trade.cust_networth_vw"  					//query a joined view
        "select * from trade.cust_networth_vw where cid in (1001, 2003, 3005, 4007)" 	//query a joined view using joined column in where
        "select * from trade.cust_networth_vw where cust_name = 'Gfxdtest1'" 		//query a joined view using non-joined column in where
        "select * from trade.cust_trade_vw"						
        "select * from trade.emp_trade_vw"   						//query a joined view with base tables from different schemas     
        "select * from trade.cust_emp_vw"						//query a joined view with base tables from different schemas 
        "select * from trade.cust_emp_vw where name in ('Gfxdtest1', 'Gfxdtest3', 'Gfxdtest5')"  //query a joined view with base tables from different schemas using joined column in where
        "select * from trade.cust_emp_vw where ssn > '222334444'"                       //query a joined view with base tables from different schemas using non-joined column in where
        //"select * from trade.buy_history_vw"                                          //query a joined view (joined by non-paritioned column, and would not work to partitioned tables)
        //"select * from trade.buy_history_vw where ordertime < current_timestamp and cid in (1002, 2004, 3006,4008)"   //query a joined view (joined by non-paritioned column, and would not work to partitioned tables)
        "select * from trade.cust_networth_trade_alltables_vw"				//query a joined view from multiple (three) base tables
        "select name, cash, count(*) from trade.cust_networth_trade_alltables_vw group by name, cash having cash > 5000" 	//query a view using group and having       
        "select * from trade.cust_networth_trade_vw"  					//bug44616 fixed
        //"select * from trade.cust_count_since2010_vw where cust_count > 8" 		//query a group view using where -- bug44619
        //"select cust_count from trade.cust_count_since2010_vw group by cust_count having cust_count > 10" //query a group view using group and having -- bug44619
        //"select name, trade_count, sum(cash) total_cash, avg(cash) avg_cash, max(cash) max_cash, min(cash) min_cash from trade.cust_tradeCount_with5KNetworth_vw group by name, trade_count having trade_count > 4" 	//grouped view has been totally disabled in 1.0.3
        //"select * from trade.cust_tradeCount_with5KNetworth_vw order by name asc fetch first row only" //grouped view has been totally disabled in 1.0.3
        //"select t1.eid, t1.emp_name, v1.cash from emp.employees t1, trade.cust_tradeCount_with5KNetworth_vw v1 where t1.emp_name = v1.name"   //query a join of a table with a group view -- bug44619
        "select * from trade.cust_networth_trade_vw where name = 'Gfxdtest8'"
	//"select count(cid) total_customers, sum(cash) total_cash from trade.cust_networth_trade_vw where tradedate > '2007-01-01' group by name having sum(cash) > 20000" //bug45083
	"select * from trade.cust_networth_trade_vw v, emp.employees t where v.name=t.emp_name"
	"select * from trade.cust_networth_trade_vw v where v.name in (select distinct t.emp_name from emp.employees t where t.ssn > '555555555')"
        //"select * from trade.cust_tradeCount_with5KNetworth_vw v where v.name in (select distinct t.emp_name from emp.employees t where t.ssn > '555555555')"   //grouped view has been totally disabled in 1.0.3     
	;         

RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
