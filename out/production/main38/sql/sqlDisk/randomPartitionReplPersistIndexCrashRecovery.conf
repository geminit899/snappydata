//------------------------------------------------------------------------------
// TEST CONFIG
//------------------------------------------------------------------------------
//
//  sql/sqlDisk/randomPartitionReplIndexCrashRecovery.conf
//    locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
//    A=datastore datastoreHosts=1 datastoreVMsPerHost= 6 datastoreThreadsPerVM=1
//    B=accessor accessorHosts=2 accessorVMsPerHost=3 accessorThreadsPerVM=10
//    dropIndex = true  redundantCopies=2
//
//-------------------------------------------------------------------------------

INCLUDE $JTESTS/sql/sqlDisk/randomPartitionReplPersistIndexNormalRecovery.conf;

hydra.VmPrms-extraVMArgs = fcn "hydra.TestConfigFcns.duplicate
                                (\"-Dnone\", ${locatorHosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.duplicate
                                (\"-Xms512m -Xmx1024m\", ${datastoreHosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.duplicate
                                (\"-Xmx256m\", ${accessorHosts}, true)"
                           ncf;
                           	
hydra.gemfirexd.GfxdHelperPrms-persistDD     = true ;
hydra.gemfirexd.GfxdHelperPrms-persistTables = true;
sql.SQLPrms-isOfflineTest                  = false;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;

INITTASK     taskClass   = util.PRObserver  taskMethod = initialize
             runMode = once
             threadGroups = dataStoreThreads;

INITTASK     taskClass   = util.StopStartVMs  taskMethod = StopStart_initTask;

TASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_cycleStoreVms
	     threadGroups = accessorThreads, ddlThread;

sql.SQLPrms-gfeDDLExtension =
	"trade.securities:random" 
    "trade.customers:random"  
	"trade.networth:random"
	"trade.portfolio:random"
	"trade.sellorders:random"
    "trade.buyorders:random" 
    "trade.txhistory:random"
	"emp.employees:replicate"
	"trade.trades:replicate" ;

sql.SQLPrms-redundancyClause =
	" REDUNDANCY ${redundantCopies}"
    " REDUNDANCY ${redundantCopies}"
	" REDUNDANCY ${redundantCopies}"
	" REDUNDANCY ${redundantCopies}"
	" REDUNDANCY ${redundantCopies}"  
	" REDUNDANCY ${redundantCopies}" 
    " REDUNDANCY ${redundantCopies}"
	" REDUNDANCY ${redundantCopies}"
	" REDUNDANCY ${redundantCopies}" ;

  	
