// Edit to specify your test hosts as described below
// host1 - MasterController
// host2 - locator, accessor(s), datastore1
// host3 - datastore2 (will be separated from the other members of the DS)
// host4 - HDFS Cluster (name node)
// host4 - HDFS Cluster (data node)

// edit the line below to define your hosts for MasterController (host1) and SqlFire Members (host2, host3)
// start the test from host1, hadoop processes run on host4
hydra.HostPrms-hostNames = <host2> <host2> <host3> <host2> <host2>;

hydra.HadoopPrms-nameNodeHosts = <host4>;
hydra.HadoopPrms-nameNodeLogDrives = a;
hydra.HadoopPrms-nameNodeDataDrives = b;

hydra.HadoopPrms-dataNodeHosts = <host4>;
hydra.HadoopPrms-dataNodeLogDrives = a;
hydra.HadoopPrms-dataNodeDataDrives = b;

// derby dependencies
hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derby.jar";
hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbyclient.jar";
hydra.VmPrms-extraClassPaths        +=   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbytools.jar";
hydra.Prms-derbyServerClassPath     =   "/export/gcm/where/java/derby/derby-10.8.2.2/jars/insane/derbynet.jar";
hydra.Prms-extraDerbyServerVMArgs += " -Xmx1024m -Dderby.storage.pageCacheSize=32000 -Dderby.locks.waitTimeout=30 -Dderby.locks.deadlockTimeout=20 ";


