hydra.Prms-testDescription = " this tests derby on gfe";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_2.inc;

hydra.VmPrms-extraClassPaths        += $GEMFIRE/../product-gfxd/lib/gemfirexd.jar;
hydra.VmPrms-extraClassPaths        += $JTESTS;
hydra.gemfirexd.GfxdHelperPrms-persistDD = fcn "hydra.TestConfigFcns.oneof(\"true\", \"false\")" ncf;

THREADGROUP dataStoreThreads
            totalThreads = fcn "(${${A}Hosts} * ${${A}VMsPerHost} *  ${${A}ThreadsPerVM}) " ncf
            totalVMs     = fcn "(${${A}Hosts} * ${${A}VMsPerHost})" ncf
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${A}\",
                                ${${A}Hosts}, true)" ncf;

THREADGROUP accessorThreads
            totalThreads = fcn "(${${B}Hosts} * ${${B}VMsPerHost} *  ${${B}ThreadsPerVM}) -1  " ncf
            totalVMs     = fcn "(${${B}Hosts} * ${${B}VMsPerHost})" ncf
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${B}\",
                                ${${B}Hosts}, true)" ncf;  

THREADGROUP ddlThread
            totalThreads = 1
            totalVMs     = 1
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${B}\",
                                ${${B}Hosts}, true)" ncf;                                     
                                                                           
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_initializeGFXD
	runMode = always
	threadGroups = dataStoreThreads, ddlThread, accessorThreads;	

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createGFXDDB
	runMode = always
	threadGroups = dataStoreThreads;
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createGFXDDBForAccessors
	runMode = always
	threadGroups = accessorThreads;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createGFESchemas
	threadGroups = ddlThread;	
	
//temp for quick test	 
sql.SQLPrms-initCustomersSizePerThread = RANGE 20 30 EGNAR;
sql.SQLPrms-initSecuritiesSizePerThread = RANGE 10 30 EGNAR;

	 
hydra.Prms-manageDerbyServer = false;
hydra.Prms-totalTaskTimeSec           = 800;
hydra.Prms-maxResultWaitSec           = 480;
hydra.Prms-maxCloseTaskResultWaitSec  = 300;
hydra.Prms-serialExecution            = false;	

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createMaxTimestamp
	threadGroups = ddlThread;
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_insertMaxTimestamp
	threadGroups = accessorThreads;	
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_queryMaxTimestamp
	threadGroups = accessorThreads;	
	
sql.SQLPrms-createSchemas = "create schema trade" "create schema default1" "create schema emp";
  	
hydra.VmPrms-extraVMArgs   = "-DDistributionManager.MAX_PR_THREADS=50";  //work around #42459

RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
