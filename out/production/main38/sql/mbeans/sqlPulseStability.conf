
INCLUDE $JTESTS/sql/mbeans/sqlMBeans.conf;

INITTASK 
	taskClass   = util.StopStartVMs  
	taskMethod = StopStart_initTask
	threadGroups = initThreads, jmxThreads;

INITTASK     taskClass   = sql.mbeans.MBeanTest taskMethod  = HydraTask_prepareTest
	threadGroups = jmxThreads, initThreads;
	
INITTASK     taskClass   = sql.mbeans.MBeanTest taskMethod  = HydraTask_createMultipleTables
	threadGroups = ddlThread;	

TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_pulseStabilityTest
	threadGroups = jmxThreads, initThreads;

sql.SQLPrms-createDiskStore = "create diskstore persistSecu 'persistSecu'"
      "create diskstore persistCust   'persistCust' "
      "create diskstore persistNetworth  'persistNetworth' "
      "create diskstore persistPortf  'persistPortf' "
      "create diskstore persistSellorders  'persistSellorders' "
      "create diskstore persistBuyorders  'persistBuyorders' "
      "create diskstore persistTxHistory  'persistTxHistory' ";
      
sql.SQLPrms-gfePersistExtension = 
	" PERSISTENT SYNCHRONOUS 'persistSecu' offheap" 
    " PERSISTENT SYNCHRONOUS 'persistCust' offheap"
	" PERSISTENT SYNCHRONOUS 'persistNetworth' offheap"
	" PERSISTENT SYNCHRONOUS 'persistPortf' offheap"
	" PERSISTENT SYNCHRONOUS 'persistSellorders' offheap"  
	" PERSISTENT SYNCHRONOUS 'persistBuyorders' offheap" 
	" PERSISTENT SYNCHRONOUS 'persistTxHistory' offheap"
	" offheap"
	" offheap" ;	
	
sql.mbeans.MBeanPrms-statements = "select * from trade.buyorders where status = 'open' and tid = ?";	
sql.mbeans.MBeanPrms-tests = pulseCounter;

//persistence
hydra.gemfirexd.GfxdHelperPrms-createDiskStore = true;
hydra.gemfirexd.GfxdHelperPrms-persistDD     = true ;
hydra.gemfirexd.GfxdHelperPrms-persistTables = true;                             