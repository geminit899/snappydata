
INCLUDE $JTESTS/sql/mbeans/sqlMBeans.conf;

sql.mbeans.MBeanPrms-isHATest = true;

INITTASK 
	taskClass   = util.StopStartVMs  
	taskMethod = StopStart_initTask
	threadGroups = initThreads, jmxThreads;
	
INITTASK     taskClass   = sql.mbeans.MBeanTest taskMethod  = HydraTask_prepareTest
	runMode = always
	threadGroups = jmxThreads, initThreads;	
	
INITTASK     taskClass   = sql.mbeans.MBeanTest taskMethod  = HydraTask_validateMemberView
	threadGroups = jmxThreads, initThreads;		
	
TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_execTest
	maxThreads=1
	threadGroups = jmxThreads, initThreads;

TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_callSQLProcs
	threadGroups = jmxThreads, initThreads
	maxThreads=1; 

TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_doHA
	threadGroups = jmxThreads, initThreads
	maxThreads=1
	maxTimesToRun=5;

/*
TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_createDropTable
	threadGroups = jmxThreads, initThreads
	maxThreads=1;	  

TASK taskClass = sql.mbeans.MBeanTest taskMethod = HydraTask_createDropIndex
	threadGroups = jmxThreads, initThreads
	maxThreads=1; 	
*/	

CLOSETASK     taskClass   = sql.mbeans.MBeanTest taskMethod  = HydraTask_alterTableTest
  threadGroups =  initThreads;
  	
	
	
sql.SQLPrms-gfePersistExtension = 
	" offheap" 
    " offheap"
	" offheap"
	" offheap"
	" offheap"  
	" offheap" 
	" offheap"
	" offheap"
	" offheap" ;
	
//turn off persistence
hydra.gemfirexd.GfxdHelperPrms-createDiskStore = false;
//hydra.gemfirexd.GfxdHelperPrms-persistDD     = false;
hydra.gemfirexd.GfxdHelperPrms-persistTables = false;                             			

sql.mbeans.MBeanPrms-tests = pulseCounter;
sql.mbeans.MBeanPrms-useManagerLocks=true;
hydra.Prms-totalTaskTimeSec           = 300;
util.StopStartPrms-stopModes = NICE_EXIT;

//TODO : Remove diskstore stuff
//TODO : Remove all other attributes related to persistence                                

INCLUDE $JTESTS/sql/mbeans/offHeapValidate.inc;
