hydra.Prms-testDescription = " this tests authentication and authorization using thin client driver";

INCLUDE $JTESTS/sql/security/multiTablesUniqAuthClient.conf;

hydra.gemfirexd.FabricSecurityPrms-authProvider=LDAP;

hydra.VmPrms-extraVMArgs += "-Dgemfirexd.auth-ldap-server=ldap://ldap.gemstone.com:389/ -Dgemfirexd.auth-ldap-search-dn=uid=superUser,ou=ldapTesting,dc=gemstone,dc=com -Dgemfirexd.auth-ldap-search-pw=superUser -Dgemfirexd.auth-ldap-search-base=ou=ldapTesting,dc=gemstone,dc=com";
sql.SQLPrms-useLDAPSchema = true;

sql.SQLPrms-testPartitionBy = true;

sql.SQLPrms-gfeDDLExtension =
  "trade.securities:random"
  "trade.customers:random"
  "trade.networth:random"
  "trade.portfolio:random"
  "trade.sellorders:random"
  "trade.buyorders:random"
  "trade.txhistory:random"
  "emp.employees:replicate"
  "trade.trades:replicate" ;

sql.SQLPrms-redundancyClause =
        " REDUNDANCY ${redundantCopies}"
    " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}"
    " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}"
        " REDUNDANCY ${redundantCopies}" ;

INITTASK     taskClass   = util.StopStartVMs  taskMethod = StopStart_initTask
                threadGroups = serverThreads;

TASK     taskClass   = sql.security.SQLSecurityClientTest   taskMethod  = HydraTask_cycleStoreVms
             threadGroups = locator;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;

