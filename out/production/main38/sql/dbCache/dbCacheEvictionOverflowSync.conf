hydra.Prms-testDescription = " this tests write through to back_end database with eviction";

INCLUDE $JTESTS/sql/dbCache/dbCacheCommon.conf;

INITTASK     taskClass   = sql.sqlCallback.SQLWriterTest taskMethod  = HydraTask_createWriter
	threadGroups = ddlThread;
	
INITTASK     taskClass   = sql.sqlCallback.SQLWriterTest taskMethod  = HydraTask_populateTables
	threadGroups = accessorThreads;	
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
	 threadGroups = ddlThread;
	
TASK     taskClass   = sql.sqlCallback.SQLWriterTest taskMethod  = HydraTask_doDMLOp
	 threadGroups = accessorThreads, ddlThread;
			
CLOSETASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
	 threadGroups = ddlThread;
	 				
hydra.Prms-totalTaskTimeSec = 600;

CLOSETASK     taskClass   = sql.sqlCallback.SQLWriterTest taskMethod  = HydraTask_clearTables
	threadGroups = ddlThread, accessorThreads;	
	//threadGroups = ddlThread;	
	 
CLOSETASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_shutDownDB
	 threadGroups = ddlThread; 		

sql.SQLPrms-testPartitionBy = false;

sql.SQLPrms-gfeDDLExtension =
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrumemsize 3 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrumemsize 3 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous "
	"eviction by lrucount 100 evictaction overflow synchronous ";

hydra.gemfirexd.GfxdHelperPrms-persistDD = true; //to create default diskstore, work around the disk store not created issue
  	
RANDOMINCLUDE $JTESTS/sql/offHeap.inc; // uses off-heap if include is randomly chosen
