//----------------------------------------------------------------------------
//    sql/generic/gfxdGeneric.conf
//    locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
//    A=store storeHosts=1 storeVMsPerHost=2 storeThreadsPerVM=1
//    B=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
//    isHA=true numVMsToStop = 1
//    withServerGroup = false 
//---------------------------------------------------------------------------- 


hydra.Prms-testDescription = "GFXD Generic tests";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;

hydra.Prms-totalTaskTimeSec           = 200;
hydra.Prms-maxResultWaitSec           = 600;
hydra.Prms-maxCloseTaskResultWaitSec  = 300;

hydra.Prms-manageDerbyServer = true;

include $JTESTS/sql/generic/schema/trade/TradeSchema.inc;  
include $JTESTS/sql/generic/gfxdClusterConfig.inc;                                                                

sql.generic.SQLGenericPrms-hasServerGroups = ${withServerGroup};
sql.SQLPrms-serverGroups = random, random, random;
                                                         
// legacy parameters - should be removed later
sql.SQLPrms-useGfxdConfig = true;

//------------------------- init gfxd cluster ----------------------------------                                                                           
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_initialize
    sql.generic.SQLGenericPrms-memberType = locator
    runMode = always    
    threadGroups = locatorThreads;

INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_initialize
    sql.generic.SQLGenericPrms-memberType = datastore
    runMode = always    
    threadGroups = dataStoreThreads;

INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_initialize
    sql.generic.SQLGenericPrms-memberType = accessor
    runMode = always
    threadGroups = verifyThreads;
	
INITTASK taskClass = sql.generic.SQLTestExecutor taskMethod = HydraTask_createGfxdLocatorTask
    threadGroups = locatorThreads;
         
INITTASK taskClass = sql.generic.SQLTestExecutor taskMethod = HydraTask_startGfxdLocatorTask
    runMode = always
    threadGroups = locatorThreads;

INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_startFabricServer
	runMode = always
	threadGroups = dataStoreThreads;
	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_startFabricServer
	runMode = always
	threadGroups = verifyThreads;
                                                
include $JTESTS/sql/generic/derby.inc; 
  
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createGFESchemas
	threadGroups = ddlThread;

INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createDiskStores
		threadGroups = ddlThread;

/*
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createUDTPriceType
	threadGroups = ddlThread;	
	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createUUIDType
	threadGroups = ddlThread;	
	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = hydraTask_createUDTPriceFunctions
	threadGroups = ddlThread;				
*/

INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createGFETables
	threadGroups = ddlThread;

/*	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createFuncForProcedures
	threadGroups = ddlThread;
	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createFuncForSubquery
	threadGroups = ddlThread;	
	
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_createFunctionToPopulate
	threadGroups = ddlThread;
*/

// Enable view testing using "sql.generic.SQLGenericPrms-hasView = true", by default it is false
include $JTESTS/sql/generic/view/view.inc; 

//--------------------- load data -----------------------------------------------------
INITTASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_populateTables
	threadGroups = accessorThreads;	
		
// todo - create index
// todo - create trigger
// todo - critical heap
// todo - alter table

// HA
include $JTESTS/sql/generic/gfxdHa.inc;

//-------------- do operations -----------------------------------------------------------             	
TASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_doDMLOp
	 threadGroups = accessorThreads, verifyThreads, ddlThread;
			
//--------------- verification ----------------------------------------------------------- 			
CLOSETASK     taskClass   = sql.generic.SQLTestExecutor taskMethod  = HydraTask_verifyResultSets
	 threadGroups = verifyThreads;

//---------------- shutdown database -----------------------------------
CLOSETASK taskClass = sql.generic.SQLTestExecutor taskMethod  = HydraTask_shutDownAllFabricServers
	      threadGroups = verifyThreads;

CLOSETASK taskClass = sql.generic.SQLTestExecutor taskMethod  = HydraTask_shutDownAllFabricServers
	      threadGroups = dataStoreThreads;

// failure post mortem 
include $JTESTS/sql/generic/failurePostMortem.inc;				


