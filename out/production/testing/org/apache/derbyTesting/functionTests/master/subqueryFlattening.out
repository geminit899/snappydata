gfxd> --
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
-- Changes for GemFireXD distributed data platform (some marked by "GemStone changes")
--
-- Portions Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
--
-- Licensed under the Apache License, Version 2.0 (the "License"); you
-- may not use this file except in compliance with the License. You
-- may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-- implied. See the License for the specific language governing
-- permissions and limitations under the License. See accompanying
-- LICENSE file.
--
-- test subquery flattening into outer query block
set isolation to rs;
0 rows inserted/updated/deleted
gfxd> -- tests for flattening a subquery based on a
-- uniqueness condition
-- by default, holdability of ResultSet objects created using this Connection object is true. Following will set it to false for this connection.
NoHoldForConnection;
gfxd> -- create some tables
-- GemStone added primary keys for consistent tree height etc.
create table outer1 (c1 int, c2 int, c3 int);
0 rows inserted/updated/deleted
gfxd> create table outer2 (c1 int, c2 int, c3 int);
0 rows inserted/updated/deleted
gfxd> create table noidx (c1 int);
0 rows inserted/updated/deleted
gfxd> create table idx1 (c1 int primary key);
0 rows inserted/updated/deleted
gfxd> create unique index idx1_1 on idx1(c1);
0 rows inserted/updated/deleted
gfxd> create table idx2 (c1 int, c2 int primary key);
0 rows inserted/updated/deleted
gfxd> create unique index idx2_1 on idx2(c1, c2);
0 rows inserted/updated/deleted
gfxd> create table nonunique_idx1 (c1 int);
0 rows inserted/updated/deleted
gfxd> create index nonunique_idx1_1 on nonunique_idx1(c1);
0 rows inserted/updated/deleted
gfxd> insert into outer1 values (1, 2, 3);
1 row inserted/updated/deleted
gfxd> insert into outer1 values (4, 5, 6);
1 row inserted/updated/deleted
gfxd> insert into outer2 values (1, 2, 3);
1 row inserted/updated/deleted
gfxd> insert into outer2 values (4, 5, 6);
1 row inserted/updated/deleted
gfxd> insert into noidx values 1, 1;
2 rows inserted/updated/deleted
gfxd> insert into idx1 values 1, 2;
2 rows inserted/updated/deleted
gfxd> insert into idx2 values (1, 1), (1, 2);
2 rows inserted/updated/deleted
gfxd> insert into nonunique_idx1 values 1, 1;
2 rows inserted/updated/deleted
gfxd> -- cases where subqueries don't get flattened
-- (we would get incorrect results with 
-- incorrect flattening)
-- one of tables in subquery doesn't have index
select * from outer1 where c1 in (select idx1.c1 from noidx, idx1 where idx1.c1 = noidx.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- group by in subquery
select * from outer1 o where c1 <= (select c1 from idx1 i group by c1);
ERROR 21000: Scalar subquery is only allowed to return a single row.
gfxd> -- otherwise flattenable subquery under an or 
-- subquery returns no rows
select * from outer1 o where c1 + 0 = 1 or c1 in (select c1 from idx1 i where i.c1 = 0);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> select * from outer1 o where c1 in (select c1 from idx1 i where i.c1 = 0) or c1 + 0 = 1;
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- empty subquery in select list which is otherwise flattenable
select (select c1 from idx1 where c1 = 0) from outer1;
1          
-----------
NULL       
NULL       
gfxd> -- multiple tables in subquery
-- no one table's equality condition based
-- solely on constants and correlation columns
select * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- subqueries that should get flattened
call SYSCS_UTIL.SET_RUNTIMESTATISTICS(1);
0 rows inserted/updated/deleted
gfxd> maximumdisplaywidth 40000;
gfxd> -- simple IN
select * from outer1 o where o.c1 in (select c1 from idx1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	null
Statement Text: 
	-- simple IN
select * from outer1 o where o.c1 in (select c1 from idx1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
gfxd> -- simple EXISTS
select * from outer1 o where exists (select * from idx1 i where o.c1 = i.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- simple EXISTS
select * from outer1 o where exists (select * from idx1 i where o.c1 = i.c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
gfxd> -- simple ANY
select * from outer1 o where o.c1 = ANY (select c1 from idx1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- simple ANY
select * from outer1 o where o.c1 = ANY (select c1 from idx1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
gfxd> -- another simple ANY
select * from outer1 o where o.c2 > ANY (select c1 from idx1 i where o.c1 = i.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- another simple ANY
select * from outer1 o where o.c2 > ANY (select c1 from idx1 i where o.c1 = i.c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Project-Restrict ResultSet (4):
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		restriction = true
		projection = false
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 2
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=1
				Scan type=Hash1Index
				Tree height=1
				start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
				stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
				qualifiers:
None
gfxd> -- comparisons with parameters
prepare p1 as 'select * from outer1 o where exists (select * from idx1 i where i.c1 = ?)';
gfxd> execute p1 using 'values 1';
C1         |C2         |C3         
-----------------------------------
4          |5          |6          
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	select * from outer1 o where exists (select * from idx1 i where i.c1 = ?)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
gfxd> prepare p2 as 'select * from outer1 o where ? = ANY (select c1 from idx1)';
gfxd> execute p2 using 'values 1';
C1         |C2         |C3         
-----------------------------------
4          |5          |6          
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	null
Statement Text: 
	select * from outer1 o where ? = ANY (select c1 from idx1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
gfxd> -- mix constants with correlation columns
select * from outer1 o where exists (select * from idx2 i where o.c1 = i.c1 and i.c2 = 2);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- mix constants with correlation columns
select * from outer1 o where exists (select * from idx2 i where o.c1 = i.c1 and i.c2 = <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for IDX2:
		Number of opens = 1
		Rows seen = 1
		Columns accessed from heap = (0)
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for IDX2 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=1
				Scan type=Hash1Index
				Tree height=1
				start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
				stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
				qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
gfxd> -- multiple tables in subquery
select * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1 and i.c2 = 1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	null
Statement Text: 
	-- multiple tables in subquery
select * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1 and i.c2 = <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (7):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 1
		Rows seen from the right = 1
		Rows filtered = 0
		Rows returned = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for IDX2:
			Number of opens = 1
			Rows seen = 1
			Columns accessed from heap = (0)
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for IDX2 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=1
					Scan type=Hash1Index
					Tree height=1
					start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
					stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
					qualifiers:
None
		Right result set:
			Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=3
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=2
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
			qualifiers:
None
gfxd> -- comparisons with non-join expressions
select * from outer1 o where exists (select * from idx1 where idx1.c1 = 1 + 0);
C1         |C2         |C3         
-----------------------------------
4          |5          |6          
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- comparisons with non-join expressions
select * from outer1 o where exists (select * from idx1 where idx1.c1 = <?> + <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
gfxd> select * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 + 0 = i.c1 and i.c2 + 0 = idx1.c1 and i.c2 = 1 + 0);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	null
Statement Text: 
	select * from outer1 o where exists (select * from idx2 i, idx1 where o.c1 + <?> = i.c1 and i.c2 + <?> = idx1.c1 and i.c2 = <?> + <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (8):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 1
		Rows seen from the right = 1
		Rows filtered = 0
		Rows returned = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for IDX2:
			Number of opens = 1
			Rows seen = 1
			Columns accessed from heap = (0)
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for IDX2 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=1
					Scan type=Hash1Index
					Tree height=1
					start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
					stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
					qualifiers:
None
		Right result set:
			Project-Restrict ResultSet (6):
			Number of opens = 1
			Rows seen = 2
			Rows filtered = 1
			restriction = true
			projection = false
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 2
				Rows filtered = 0
				Fetch Size = 32
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=3
					Number of deleted rows visited=0
					Number of rows qualified=2
					Number of rows visited=2
					Scan type=heap
					start position: 
null					stop position: 
null					qualifiers:
None
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
gfxd> -- multilevel subqueries
-- only flatten bottom of where exists, any, or in with 
-- exists, any, or in in its own where clause. DERBY-3301.
select * from outer1 o where exists
    (select * from idx2 i where exists
        (select * from idx1 ii 
         where o.c1 = i.c1 and i.c2 = ii.c1 and i.c2 = 1));
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- multilevel subqueries
-- only flatten bottom of where exists, any, or in with 
-- exists, any, or in in its own where clause. DERBY-3301.
select * from outer1 o where exists
    (select * from idx2 i where exists
        (select * from idx1 ii 
         where o.c1 = i.c1 and i.c2 = ii.c1 and i.c2 = <?>))
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Materialized subqueries:
	Begin Subquery Number 0
	Any ResultSet :
	Number of opens = 2
	Rows seen = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Source result set:
		Project-Restrict ResultSet (6):
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Nested Loop Exists Join ResultSet:
			Number of opens = 2
			Rows seen from the left = 1
			Rows seen from the right = 1
			Rows filtered = 0
			Rows returned = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Index Scan ResultSet for IDX2 using index IDX2_1 at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 2
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=(0, 1)
					Number of columns fetched=2
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=0
					Scan type=SortedMap2Index
					Tree height=1
					start position: 
	>= on first 2 column(s).
	Ordered null semantics on the following columns: 
					stop position: 
	> on first 2 column(s).
	Ordered null semantics on the following columns: 
					qualifiers:
None
			Right result set:
				Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=(0)
					Number of columns fetched=1
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=1
					Scan type=Hash1Index
					Tree height=1
					start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
					stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
					qualifiers:
None
	End Subquery Number 0
Project-Restrict ResultSet (2):
Number of opens = 1
Rows seen = 2
Rows filtered = 1
restriction = true
projection = false
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 2
	Rows filtered = 0
	Fetch Size = 32
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		next time in milliseconds/row = 0
	scan information: 
		Bit set of columns fetched=All
		Number of columns fetched=3
		Number of deleted rows visited=0
		Number of rows qualified=2
		Number of rows visited=2
		Scan type=heap
		start position: 
null		stop position: 
null		qualifiers:
None
gfxd> -- only flatten bottom
select * from outer1 o where exists
    (select * from idx2 i where exists
        (select * from idx1 ii 
         where o.c1 = i.c1 and i.c2 = ii.c1));
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- flatten innermost into exists join, but dont flatten middle into outer as it
-- is a where exists, any, or in with exists, any, or in in its own where clause. 
-- DERBY-3301.
select * from outer1 o where exists
    (select * from idx2 i 
     where  o.c1 = i.c1 and i.c2 = 1 and exists
        (select * from idx1 ii));
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- flatten innermost into exists join, but dont flatten middle into outer as it
-- is a where exists, any, or in with exists, any, or in in its own where clause. 
-- DERBY-3301.
select * from outer1 o where exists
    (select * from idx2 i 
     where  o.c1 = i.c1 and i.c2 = <?> and exists
        (select * from idx1 ii))
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Materialized subqueries:
	Begin Subquery Number 0
	Any ResultSet :
	Number of opens = 2
	Rows seen = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Source result set:
		Project-Restrict ResultSet (6):
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Nested Loop Exists Join ResultSet:
			Number of opens = 2
			Rows seen from the left = 1
			Rows seen from the right = 1
			Rows filtered = 0
			Rows returned = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Index Scan ResultSet for IDX2 using index IDX2_1 at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 2
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=(0, 1)
					Number of columns fetched=2
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=0
					Scan type=SortedMap2Index
					Tree height=1
					start position: 
	>= on first 2 column(s).
	Ordered null semantics on the following columns: 
					stop position: 
	> on first 2 column(s).
	Ordered null semantics on the following columns: 
					qualifiers:
None
			Right result set:
				Table Scan ResultSet for IDX1 at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=()
					Number of columns fetched=0
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=1
					Scan type=heap
					start position: 
null					stop position: 
null					qualifiers:
None
	End Subquery Number 0
Project-Restrict ResultSet (2):
Number of opens = 1
Rows seen = 2
Rows filtered = 1
restriction = true
projection = false
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 2
	Rows filtered = 0
	Fetch Size = 32
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		next time in milliseconds/row = 0
	scan information: 
		Bit set of columns fetched=All
		Number of columns fetched=3
		Number of deleted rows visited=0
		Number of rows qualified=2
		Number of rows visited=2
		Scan type=heap
		start position: 
null		stop position: 
null		qualifiers:
None
gfxd> -- flatten a subquery that has a subquery in its select list
-- verify that subquery gets copied up to outer block
select * from outer1 o where c1 in
    (select (select c1 from idx1 where c1 = i.c1)
     from idx2 i where o.c1 = i.c1 and i.c2 = 1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- flatten a subquery that has a subquery in its select list
-- verify that subquery gets copied up to outer block
select * from outer1 o where c1 in
    (select (select c1 from idx1 where c1 = i.c1)
     from idx2 i where o.c1 = i.c1 and i.c2 = <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Attached subqueries:
	Begin Subquery Number 1
	Once ResultSetAttached to 5):
	Number of opens = 1
	Rows seen = 1
	Source result set:
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
	End Subquery Number 1
Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for IDX2:
		Number of opens = 1
		Rows seen = 1
		Columns accessed from heap = (0)
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for IDX2 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=1
				Scan type=Hash1Index
				Tree height=1
				start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
				stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
				qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
gfxd> -- expression subqueries
-- simple =
select * from outer1 o where o.c1 = (select c1 from idx1 i where o.c1 = i.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	null
Statement Text: 
	-- expression subqueries
-- simple =
select * from outer1 o where o.c1 = (select c1 from idx1 i where o.c1 = i.c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
gfxd> select * from outer1 o where o.c1 <= (select c1 from idx1 i where o.c1 = i.c1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	select * from outer1 o where o.c1 <= (select c1 from idx1 i where o.c1 = i.c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Project-Restrict ResultSet (4):
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		restriction = true
		projection = false
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 2
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=1
				Scan type=Hash1Index
				Tree height=1
				start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
				stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
				qualifiers:
None
gfxd> -- multiple tables in subquery
select * from outer1 o where c1 =  (select i.c1 from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1 and i.c2 = 1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	null
Statement Text: 
	-- multiple tables in subquery
select * from outer1 o where c1 =  (select i.c1 from idx2 i, idx1 where o.c1 = i.c1 and i.c2 = idx1.c1 and i.c2 = <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (7):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 1
		Rows seen from the right = 1
		Rows filtered = 0
		Rows returned = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for IDX2:
			Number of opens = 1
			Rows seen = 1
			Columns accessed from heap = (0)
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for IDX2 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 1
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					Number of rows qualified=1
					Number of rows visited=1
					Scan type=Hash1Index
					Tree height=1
					start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
					stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
					qualifiers:
None
		Right result set:
			Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 1
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=3
				Number of deleted rows visited=0
				Number of rows qualified=1
				Number of rows visited=2
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
Column[0][1] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
0 
			qualifiers:
None
gfxd> -- flattening to an exists join
-- no index on subquery table
select * from outer1 where c1 in (select c1 from noidx);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- flattening to an exists join
-- no index on subquery table
select * from outer1 where c1 in (select c1 from noidx)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Table Scan ResultSet for NOIDX at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=3
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
gfxd> -- no unique index on subquery table
select * from outer1 where c1 in (select c1 from nonunique_idx1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- columns in subquery are not superset of unique index
select * from outer1 where c1 in (select c1 from idx2);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- single table subquery, self join on unique column
select * from outer1 where exists (select * from idx1 where c1 = c1);
C1         |C2         |C3         
-----------------------------------
4          |5          |6          
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- single table subquery, self join on unique column
select * from outer1 where exists (select * from idx1 where c1 = c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Project-Restrict ResultSet (4):
		Number of opens = 2
		Rows seen = 2
		Rows filtered = 0
		restriction = true
		projection = false
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Table Scan ResultSet for IDX1 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 2
			Rows seen = 2
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=2
				Number of rows visited=2
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
None
gfxd> -- flattening values subqueries
-- flatten unless contains a subquery
select * from outer1 where c1 in (values 1);
C1         |C2         |C3         
-----------------------------------
1          |2          |3          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- flattening values subqueries
-- flatten unless contains a subquery
select * from outer1 where c1 in (values <?>)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
Number of opens = 1
Rows seen = 1
Rows filtered = 0
Fetch Size = 32
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	next time in milliseconds/row = 0
scan information: 
	Bit set of columns fetched=All
	Number of columns fetched=3
	Number of deleted rows visited=0
	Number of rows qualified=1
	Number of rows visited=2
	Scan type=heap
	start position: 
null	stop position: 
null	qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
gfxd> select * from outer1 where c1 in (values (select max(c1) from outer1));
C1         |C2         |C3         
-----------------------------------
4          |5          |6          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	null
Statement Text: 
	select * from outer1 where c1 in (values (select max(c1) from outer1))
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Materialized subqueries:
	Begin Subquery Number 1
	Once ResultSet:
	Number of opens = 1
	Rows seen = 1
	Source result set:
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Project-Restrict ResultSet (12):
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Scalar Aggregate ResultSet:
			Number of opens = 1
			Rows input = 2
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Index Key Optimization = false
			Source result set:
				Project-Restrict ResultSet (11):
				Number of opens = 1
				Rows seen = 2
				Rows filtered = 0
				restriction = false
				projection = true
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					restriction time (milliseconds) = 0
					projection time (milliseconds) = 0
				Source result set:
					Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
					Number of opens = 1
					Rows seen = 2
					Rows filtered = 0
					Fetch Size = 32
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						next time in milliseconds/row = 0
					scan information: 
						Bit set of columns fetched=(0)
						Number of columns fetched=1
						Number of deleted rows visited=0
						Number of rows qualified=2
						Number of rows visited=2
						Scan type=heap
						start position: 
null						stop position: 
null						qualifiers:
None
	End Subquery Number 1
Project-Restrict ResultSet (14):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 1
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=3
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = 4
Ordered nulls: false
Unknown return value: false
	Right result set:
		Row ResultSet:
		Number of opens = 1
		Rows returned = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
gfxd> -- beetle 4459 - problems with flattening to exist joins and then flattening to 
-- normal join
-- non correlated exists subquery with conditional join
maximumdisplaywidth 40000;
gfxd> select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) 
where exists (select c1 from idx1);
C1         
-----------
4          
1          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) 
where exists (select c1 from idx1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 2
		Rows seen from the right = 2
		Rows filtered = 0
		Rows returned = 2
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 2
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=2
				Number of rows visited=2
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
None
		Right result set:
			Table Scan ResultSet for OUTER2 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 2
			Rows seen = 2
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=2
				Number of rows visited=4
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
	Right result set:
		Table Scan ResultSet for IDX1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=2
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
gfxd> -- in predicate (will be flattened to exists)
select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) 
where o.c1 in (select c1 from idx1);
C1         
-----------
1          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- in predicate (will be flattened to exists)
select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) 
where o.c1 in (select c1 from idx1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 1
	Rows filtered = 0
	Rows returned = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 2
		Rows seen from the right = 2
		Rows filtered = 0
		Rows returned = 2
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 1
			Rows seen = 2
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=2
				Number of rows visited=2
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
None
		Right result set:
			Table Scan ResultSet for OUTER2 at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 2
			Rows seen = 2
			Rows filtered = 0
			Fetch Size = 32
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				next time in milliseconds/row = 0
			scan information: 
				Bit set of columns fetched=(0)
				Number of columns fetched=1
				Number of deleted rows visited=0
				Number of rows qualified=2
				Number of rows visited=4
				Scan type=heap
				start position: 
null				stop position: 
null				qualifiers:
Column[0][0] Id: C1 
Operator: = 1
Ordered nulls: false
Unknown return value: false
	Right result set:
		Index Scan ResultSet for IDX1 using constraint xxxxGENERATED-IDxxxx at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=Hash1Index
			Tree height=1
			start position: 
	>= on first 1 column(s).
	Ordered null semantics on the following columns: 
			stop position: 
	> on first 1 column(s).
	Ordered null semantics on the following columns: 
			qualifiers:
None
gfxd> -- flattened exists join in nested subquery
select c1 from (select t.c1 from (select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) where exists (select c1 from idx1)) t, outer2 where t.c1 = outer2.c1) t2;
C1         
-----------
4          
1          
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	null
Statement Text: 
	-- flattened exists join in nested subquery
select c1 from (select t.c1 from (select o.c1 from outer1 o join outer2 o2 on (o.c1 = o2.c1) where exists (select c1 from idx1)) t, outer2 where t.c1 = outer2.c1) t2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (9):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 2
	Rows seen from the right = 2
	Rows filtered = 0
	Rows returned = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Project-Restrict ResultSet (7):
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Nested Loop Exists Join ResultSet:
			Number of opens = 1
			Rows seen from the left = 2
			Rows seen from the right = 2
			Rows filtered = 0
			Rows returned = 2
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Nested Loop Join ResultSet:
				Number of opens = 1
				Rows seen from the left = 2
				Rows seen from the right = 2
				Rows filtered = 0
				Rows returned = 2
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				Left result set:
					Table Scan ResultSet for OUTER1 at repeatable read isolation level using share row locking chosen by the optimizer
					Number of opens = 1
					Rows seen = 2
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						next time in milliseconds/row = 0
					scan information: 
						Bit set of columns fetched=(0)
						Number of columns fetched=1
						Number of deleted rows visited=0
						Number of rows qualified=2
						Number of rows visited=2
						Scan type=heap
						start position: 
null						stop position: 
null						qualifiers:
None
				Right result set:
					Table Scan ResultSet for OUTER2 at repeatable read isolation level using share row locking chosen by the optimizer
					Number of opens = 2
					Rows seen = 2
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						next time in milliseconds/row = 0
					scan information: 
						Bit set of columns fetched=(0)
						Number of columns fetched=1
						Number of deleted rows visited=0
						Number of rows qualified=2
						Number of rows visited=4
						Scan type=heap
						start position: 
null						stop position: 
null						qualifiers:
Column[0][0] Id: C1 
Operator: = null
Ordered nulls: false
Unknown return value: false
			Right result set:
				Table Scan ResultSet for IDX1 at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 2
				Rows seen = 2
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					next time in milliseconds/row = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=1
					Number of deleted rows visited=0
					Number of rows qualified=2
					Number of rows visited=2
					Scan type=heap
					start position: 
null					stop position: 
null					qualifiers:
None
	Right result set:
		Table Scan ResultSet for OUTER2 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 2
		Rows seen = 2
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=(0)
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=2
			Number of rows visited=4
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = null
Ordered nulls: false
Unknown return value: false
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> -- original reported bug
create table business(businesskey int, name varchar(50), changedate int);
0 rows inserted/updated/deleted
gfxd> create table nameelement(parentkey int, parentelt varchar(50), seqnum int);
0 rows inserted/updated/deleted
gfxd> create table categorybag(cbparentkey int, cbparentelt varchar(50), 
	krtModelKey varchar(50), keyvalue varchar(50));
0 rows inserted/updated/deleted
gfxd> select businesskey, name, changedate 
from business as biz left outer join nameelement as nameElt 
	on (businesskey = parentkey and parentelt = 'businessEntity') 
where (nameElt.seqnum = 1) 
	and businesskey in 
		 (select cbparentkey 
			from categorybag 
			where (cbparentelt = 'businessEntity') and 
				(krtModelKey = 'UUID:CD153257-086A-4237-B336-6BDCBDCC6634' and keyvalue = '40.00.00.00.00'))  order by name asc , biz.changedate asc;
BUSINESSKEY|NAME                                              |CHANGEDATE 
--------------------------------------------------------------------------
gfxd> values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	select businesskey, name, changedate 
from business as biz left outer join nameelement as nameElt 
	on (businesskey = parentkey and parentelt = <?>) 
where (nameElt.seqnum = <?>) 
	and businesskey in 
		 (select cbparentkey 
			from categorybag 
			where (cbparentelt = <?>) and 
				(krtModelKey = <?> and keyvalue = <?>))  order by name asc , biz.changedate asc
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
Number of opens = 1
Rows input = 0
Rows returned = 0
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of row comparisons=0
	Number of rows input=0
	Number of rows output=0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		Number of opens = 1
		Rows seen from the left = 0
		Rows seen from the right = 0
		Rows filtered = 0
		Rows returned = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Join ResultSet:
			Number of opens = 1
			Rows seen from the left = 0
			Rows seen from the right = 0
			Rows filtered = 0
			Rows returned = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for NAMEELEMENT at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 1
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 32
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information: 
					Bit set of columns fetched=All
					Number of columns fetched=3
					Number of deleted rows visited=0
					Number of rows qualified=0
					Number of rows visited=0
					Scan type=heap
					start position: 
null					stop position: 
null					qualifiers:
Column[0][0] Id: PARENTELT 
Operator: = businessEntity
Ordered nulls: false
Unknown return value: false
Column[0][1] Id: SEQNUM 
Operator: = 1
Ordered nulls: false
Unknown return value: false
			Right result set:
				Table Scan ResultSet for BUSINESS at repeatable read isolation level using share row locking chosen by the optimizer
				Number of opens = 0
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 32
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information: 
					start position: 
null					stop position: 
null					qualifiers:
Column[0][0] Id: BUSINESSKEY 
Operator: =
Ordered nulls: false
Unknown return value: false
		Right result set:
			Table Scan ResultSet for CATEGORYBAG at repeatable read isolation level using share row locking chosen by the optimizer
			Number of opens = 0
			Rows seen = 0
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				start position: 
null				stop position: 
null				qualifiers:
Column[0][0] Id: CBPARENTKEY 
Operator: =
Ordered nulls: false
Unknown return value: false
Column[0][1] Id: KEYVALUE 
Operator: = 40.00.00.00.00
Ordered nulls: false
Unknown return value: false
Column[0][2] Id: KRTMODELKEY 
Operator: = UUID:CD153257-086A-4237-B336-6BDCBDCC6634
Ordered nulls: false
Unknown return value: false
Column[0][3] Id: CBPARENTELT 
Operator: = businessEntity
Ordered nulls: false
Unknown return value: false
gfxd> -- clean up
drop table outer1;
0 rows inserted/updated/deleted
gfxd> drop table outer2;
0 rows inserted/updated/deleted
gfxd> drop table noidx;
0 rows inserted/updated/deleted
gfxd> drop table idx1;
0 rows inserted/updated/deleted
gfxd> drop table idx2;
0 rows inserted/updated/deleted
gfxd> drop table nonunique_idx1;
0 rows inserted/updated/deleted
gfxd> drop table business;
0 rows inserted/updated/deleted
gfxd> drop table nameelement;
0 rows inserted/updated/deleted
gfxd> drop table categorybag;
0 rows inserted/updated/deleted
gfxd> -- --------------------------------------------------------------------
-- TEST CASES for different kinds of subquery flattening, Beetle 5173
-- --------------------------------------------------------------------
-- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> drop table colls;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.COLLS' because it does not exist.
gfxd> drop table docs;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.DOCS' because it does not exist.
gfxd> CREATE TABLE "APP"."COLLS" ("ID" VARCHAR(128) NOT NULL, "COLLID" SMALLINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX3" ON "APP"."COLLS" ("COLLID");
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX2" ON "APP"."COLLS" ("ID");
0 rows inserted/updated/deleted
gfxd> ALTER TABLE "APP"."COLLS" ADD CONSTRAINT "NEW_KEY2" UNIQUE ("ID", "COLLID");
0 rows inserted/updated/deleted
gfxd> CREATE TABLE "APP"."DOCS" ("ID" VARCHAR(128) NOT NULL);
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX1" ON "APP"."DOCS" ("ID");
0 rows inserted/updated/deleted
gfxd> ALTER TABLE "APP"."DOCS" ADD CONSTRAINT "NEW_KEY1" PRIMARY KEY ("ID");
0 rows inserted/updated/deleted
gfxd> insert into colls values ('123', 2);
1 row inserted/updated/deleted
gfxd> insert into colls values ('124', -5);
1 row inserted/updated/deleted
gfxd> insert into colls values ('24', 1);
1 row inserted/updated/deleted
gfxd> insert into colls values ('26', -2);
1 row inserted/updated/deleted
gfxd> insert into colls values ('36', 1);
1 row inserted/updated/deleted
gfxd> insert into colls values ('37', 8);
1 row inserted/updated/deleted
gfxd> insert into docs values '24', '25', '36', '27', '124', '567';
6 rows inserted/updated/deleted
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- call SYSCS_UTIL.SET_RUNTIMESTATISTICS(1);
maximumdisplaywidth 40000;
gfxd> -- NOT IN is flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( ID NOT IN (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- NOT EXISTS is flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( NOT EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- EXISTS is flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- IN is flattened
SELECT count(ID) FROM DOCS WHERE ID IN (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ANY is flattened
SELECT count(ID) FROM DOCS WHERE ID > ANY (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ANY is flattened
SELECT count(ID) FROM DOCS WHERE ID <> ANY (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
6          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ALL is flattened, what's not?
SELECT count(ID) FROM DOCS WHERE ID = ALL (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
0          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ALL is flattened, what's not?
SELECT count(ID) FROM DOCS WHERE ID < ALL (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
1          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ALL is flattened, what's not?
SELECT count(ID) FROM DOCS WHERE ID <> ALL (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> -- Now test nullable correlated columns
drop table colls;
0 rows inserted/updated/deleted
gfxd> -- the only change is ID is now nullable
CREATE TABLE "APP"."COLLS" ("ID" VARCHAR(128), "COLLID" SMALLINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX3" ON "APP"."COLLS" ("COLLID");
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX2" ON "APP"."COLLS" ("ID");
0 rows inserted/updated/deleted
gfxd> insert into colls values ('123', 2);
1 row inserted/updated/deleted
gfxd> insert into colls values ('124', -5);
1 row inserted/updated/deleted
gfxd> insert into colls values ('24', 1);
1 row inserted/updated/deleted
gfxd> insert into colls values ('26', -2);
1 row inserted/updated/deleted
gfxd> insert into colls values ('36', 1);
1 row inserted/updated/deleted
gfxd> insert into colls values ('37', 8);
1 row inserted/updated/deleted
gfxd> insert into colls values (null, -2);
1 row inserted/updated/deleted
gfxd> insert into colls values (null, 1);
1 row inserted/updated/deleted
gfxd> insert into colls values (null, 8);
1 row inserted/updated/deleted
gfxd> -- NOT EXISTS should be flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( NOT EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- EXISTS should be flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- IN should be flattened
SELECT count(ID) FROM DOCS WHERE ID IN (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ANY should be flattened
SELECT count(ID) FROM DOCS WHERE ID > ANY (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ALL should NOT be flattened, but subquery should be materialized
SELECT count(ID) FROM DOCS WHERE ID <> ALL (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
0          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> -- Now we make the other correlated column also nullable
drop table docs;
0 rows inserted/updated/deleted
gfxd> CREATE TABLE "APP"."DOCS" ("ID" VARCHAR(128));
0 rows inserted/updated/deleted
gfxd> CREATE INDEX "APP"."NEW_INDEX1" ON "APP"."DOCS" ("ID");
0 rows inserted/updated/deleted
gfxd> insert into docs values '24', '25', '36', '27', '124', '567';
6 rows inserted/updated/deleted
gfxd> insert into docs values null;
1 row inserted/updated/deleted
gfxd> -- NOT EXISTS should be flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( NOT EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
5          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- EXISTS should be flattened
SELECT COUNT(*) FROM
( SELECT ID FROM DOCS WHERE
        ( EXISTS  (SELECT ID FROM COLLS WHERE DOCS.ID = COLLS.ID
AND COLLID IN (-2,1) ) )
) AS TAB;
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- IN should be flattened
SELECT count(ID) FROM DOCS WHERE ID IN (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
2          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ANY should be flattened
SELECT count(ID) FROM DOCS WHERE ID > ANY (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
4          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
-- ALL should NOT be flattened, but subquery should be materialized, watch out results
SELECT count(ID) FROM DOCS WHERE ID <> ALL (SELECT ID FROM COLLS WHERE COLLID IN (-2,1) );
1          
-----------
0          
gfxd> -- GemStone commented out RUNTIMESTATISTICS since it gives different ordered results due to different ordering of outer table
-- values SYSCS_UTIL.GET_RUNTIMESTATISTICS();
drop table t1;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.T1' because it does not exist.
gfxd> drop table t2;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.T2' because it does not exist.
gfxd> drop table t3;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.T3' because it does not exist.
gfxd> drop table t4;
ERROR 42Y55: 'DROP TABLE' cannot be performed on 'APP.T4' because it does not exist.
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> create table t1 (c1 int not null);
0 rows inserted/updated/deleted
gfxd> create table t2 (c1 int not null);
0 rows inserted/updated/deleted
gfxd> create table t3 (c1 int not null);
0 rows inserted/updated/deleted
gfxd> create table t4 (c1 int);
0 rows inserted/updated/deleted
gfxd> insert into t1 values 1,2,3,4,5,1,2;
7 rows inserted/updated/deleted
gfxd> insert into t2 values 1,4,5,1,1,5,4;
7 rows inserted/updated/deleted
gfxd> insert into t3 values 4,4,3,3;
4 rows inserted/updated/deleted
gfxd> insert into t4 values 1,1,2,2,3,4,5,5;
8 rows inserted/updated/deleted
gfxd> -- should return 2,3,2
select * from t1 where not exists (select * from t2 where t1.c1=t2.c1);
C1         
-----------
2          
2          
3          
gfxd> -- should be flattened
values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- should return 2,3,2
select * from t1 where not exists (select * from t2 where t1.c1=t2.c1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
Number of opens = 1
Rows seen = 3
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	Number of opens = 1
	Rows seen from the left = 7
	Rows seen from the right = 3
	Rows filtered = 0
	Rows returned = 3
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for T1 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 7
		Rows filtered = 0
		Fetch Size = 32
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=7
			Number of rows visited=7
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
None
	Right result set:
		Table Scan ResultSet for T2 at repeatable read isolation level using share row locking chosen by the optimizer
		Number of opens = 7
		Rows seen = 4
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=1
			Number of deleted rows visited=0
			Number of rows qualified=4
			Number of rows visited=29
			Scan type=heap
			start position: 
null			stop position: 
null			qualifiers:
Column[0][0] Id: C1 
Operator: = 3
Ordered nulls: false
Unknown return value: false
gfxd> select * from t1 where not exists (select * from t2 where t1.c1=t2.c1 and t2.c1 not in (select t3.c1 from t3, t4));
ERROR 0A000: Nesting level more than 1 not supported for subqueries in this version of GemFireXD.
gfxd> -- watch out result, should return 2,3,4,2
-- can not be flattened, should be materialized
values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- should be flattened
values SYSCS_UTIL.GET_RUNTIMESTATISTICS()
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Row ResultSet:
Number of opens = 1
Rows returned = 1
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
gfxd> select * from t1 where exists (select * from t2 where t1.c1=t2.c1 and t2.c1 not in (select t3.c1 from t3, t4));
ERROR 0A000: Nesting level more than 1 not supported for subqueries in this version of GemFireXD.
gfxd> -- should return 1,5,1
-- can not be flattened, should be materialized
values SYSCS_UTIL.GET_RUNTIMESTATISTICS();


Statement Name: 
	null
Statement Text: 
	-- watch out result, should return 2,3,4,2
-- can not be flattened, should be materialized
values SYSCS_UTIL.GET_RUNTIMESTATISTICS()
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Row ResultSet:
Number of opens = 1
Rows returned = 1
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> drop table colls;
0 rows inserted/updated/deleted
gfxd> drop table docs;
0 rows inserted/updated/deleted
gfxd> drop table t1;
0 rows inserted/updated/deleted
gfxd> drop table t2;
0 rows inserted/updated/deleted
gfxd> drop table t3;
0 rows inserted/updated/deleted
gfxd> drop table t4;
0 rows inserted/updated/deleted
gfxd> -- Test case for DERBY-558: optimizer hangs in rare cases where
-- multiple subqueries flattened to EXISTS put multiple restrictions
-- on legal join orders.
create table digits (d int);
0 rows inserted/updated/deleted
gfxd> insert into digits values 1, 2, 3, 4, 5, 6, 7, 8, 9, 0;
10 rows inserted/updated/deleted
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> create table odd (o int);
0 rows inserted/updated/deleted
gfxd> insert into odd values 1, 3, 5, 7, 9;
5 rows inserted/updated/deleted
gfxd> commit;
gfxd> -- In order to test this, "noTimeout" must be true so that
-- the optimizer will run through all of the possible join
-- orders before it quits.  In the case of DERBY-558 the
-- optimizer was getting stuck in a logic loop and thus never
-- quit, causing the hang.  NOTE: The "noTimeout" property
-- is set in the subqueryFlattening_gemfirexd.properties file.
select distinct temp_t0.d from 
	(select d from digits where d > 3) temp_t0,
	(select o from odd) temp_t1,
	odd temp_t4,
	(select o from odd) temp_t3
	where temp_t0.d = temp_t1.o
		and temp_t0.d = temp_t3.o
		and temp_t0.d in (select o from odd where o = temp_t1.o)
 		and exists (
			select d from digits
				where d = temp_t0.d)
-- Before fix for DERBY-558, we would HANG (loop indefinitely) here;
-- after fix, we should see three rows returned.
;
D          
-----------
5          
7          
9          
gfxd> -- clean-up.
drop table digits;
0 rows inserted/updated/deleted
gfxd> drop table odd;
0 rows inserted/updated/deleted
gfxd> -- DERBY-3288: Optimizer does not correctly enforce EXISTS join order
-- dependencies in the face of "short-circuited" plans.  In this test
-- an EXISTS subquery is flattened into the outer query and thus has
-- has a dependency on another FromTable (esp. HalfOuterJoinNode).
-- The tables are such that the optimizer will attempt to short-
-- circuit some relatively bad plans (namely, any join order that
-- starts with { TAB_V, HOJ, ...}), and needs to correctly enforce
-- join order dependencies in the process.
CREATE TABLE tab_a (PId BIGINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> CREATE TABLE tab_c (Id BIGINT NOT NULL PRIMARY KEY,
  PAId BIGINT NOT NULL, PBId BIGINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> INSERT INTO tab_c VALUES (91, 81, 82);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_c VALUES (92, 81, 84);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_c VALUES (93, 81, 88);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_c VALUES (96, 81, 83);
1 row inserted/updated/deleted
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> CREATE TABLE tab_v (OId BIGINT NOT NULL,
  UGId BIGINT NOT NULL, val CHAR(1) NOT NULL);
0 rows inserted/updated/deleted
gfxd> CREATE UNIQUE INDEX tab_v_i1 ON tab_v (OId, UGId, val);
0 rows inserted/updated/deleted
gfxd> CREATE INDEX tab_v_i2 ON tab_v (UGId, val, OId);
0 rows inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (81, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (82, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (83, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (84, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (85, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (86, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (87, 31, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (81, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (82, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (83, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (84, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (85, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (86, 32, 'A');
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_v VALUES (87, 32, 'A');
1 row inserted/updated/deleted
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> CREATE TABLE tab_b (Id BIGINT NOT NULL PRIMARY KEY, OId BIGINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (141, 81);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (142, 82);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (143, 84);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (144, 88);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (151, 81);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_b VALUES (152, 83);
1 row inserted/updated/deleted
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> CREATE TABLE tab_d (Id BIGINT NOT NULL PRIMARY KEY,
  PAId BIGINT NOT NULL, PBId BIGINT NOT NULL);
0 rows inserted/updated/deleted
gfxd> INSERT INTO tab_d VALUES (181, 141, 142);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_d VALUES (182, 141, 143);
1 row inserted/updated/deleted
gfxd> INSERT INTO tab_d VALUES (186, 151, 152);
1 row inserted/updated/deleted
gfxd> -- Query should return 2 rows; before DERBY-3288 was fixed, it would
-- only return a single row due to violation of join order dependencies.
SELECT tab_b.Id
FROM tab_b JOIN tab_c ON (tab_b.OId = tab_c.PAId OR tab_b.OId = tab_c.PBId)
LEFT OUTER JOIN tab_a ON tab_b.OId = PId
WHERE EXISTS
  (SELECT 'X' FROM tab_d
    WHERE (PAId = 141 AND PBId = tab_b.Id)
        OR (PBId = 141 AND PAId = tab_b.Id))
  AND EXISTS
    (SELECT 'X' FROM tab_v
      WHERE OId = tab_b.OId AND UGId = 31 AND val = 'A');
ID                  
--------------------
143                 
142                 
gfxd> -- GemStone added commit since table creation in middle of TX is not allowed in GemFireXD
commit;
gfxd> drop table tab_d;
0 rows inserted/updated/deleted
gfxd> drop table tab_b;
0 rows inserted/updated/deleted
gfxd> drop table tab_v;
0 rows inserted/updated/deleted
gfxd> drop table tab_c;
0 rows inserted/updated/deleted
gfxd> 
