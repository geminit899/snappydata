hydra.Prms-testDescription = "
This test is for testing critical threshold notification delivery.
";

INCLUDE $JTESTS/resman/thresholds.inc;


util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 10000;
util.ValueHolderPrms-useExtraObject = true;
hydra.Prms-totalTaskTimeSec = 300;
hydra.VmPrms-extraClassPaths        =   $GEMFIRE/lib/antlr.jar $GEMFIRE/lib/gemfire.jar;
hydra.RegionPrms-evictionAttributes	= none;
hydra.RegionPrms-diskStoreName  = none;


INITTASK  taskClass = resman.ThresholdsTest taskMethod = HydraTask_createHeavyIndexes
          threadgroups = dataStoreThreads
          ;
          

INITTASK  taskClass = resman.ThresholdsTest taskMethod = HydraTask_populate
   		  resman.ResourceManPrms-taskNumberOfPuts = ${bootstrapPuts}
          threadgroups = accessorThreads
          ;
          


INITTASK  taskClass = java.lang.System taskMethod = gc
          threadgroups = dataStoreThreads
          ;
          
TASK         taskClass   = resman.ThresholdsTest  taskMethod = HydraTask_waitForLowMemoryThenDropIndexes
			 resman.ResourceManPrms-waitForLowMemSec = 600
			 threadGroups = dataStoreThreads
			 maxTimesToRun = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf;
			 

TASK         taskClass   = resman.ThresholdsTest  taskMethod = HydraTask_doIndexablePutsUntilCriticalThenWaitForRecovery
                         getInitialImage.InitImagePrms-useTransactions = true
			 resman.ResourceManPrms-taskNumberOfPuts = ${criticalPuts}
			 resman.ResourceManPrms-taskTolerateLowMemSec = 360
			 resman.ResourceManPrms-taskMinimumPutPercentage = 0.20
			 threadGroups = accessorThreads
			 maxTimesToRun = 1;
