hydra.Prms-testDescription = "
This test is for testing critical threshold notification delivery.
";

INCLUDE $JTESTS/resman/thresholds.inc;


util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 10000;
util.ValueHolderPrms-useExtraObject = true;
hydra.Prms-totalTaskTimeSec = 300;
hydra.RegionPrms-enableGateway  = true;
hydra.GatewayHubPrms-names = hub;
hydra.GatewayPrms-names = gateway;
hydra.GatewayPrms-listeners = resman.BlockingGListener;
hydra.GatewayPrms-batchConflation = false;
hydra.GatewayPrms-enablePersistence = false;
hydra.GatewayPrms-maximumQueueMemory = 10000;
hydra.GatewayPrms-diskStoreName = disk;

hydra.DiskStorePrms-names = disk;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createGatewayHubTask
          hydra.ConfigPrms-gatewayHubConfig = hub
          threadgroups = dataStoreThreads
          ;
          
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = addWBCLGatewayTask
          hydra.ConfigPrms-gatewayConfig = gateway
          threadgroups = dataStoreThreads
          ;
          
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = startGatewayHubTask
          threadgroups = dataStoreThreads
          ;

INITTASK  taskClass = resman.ThresholdsTest taskMethod = HydraTask_populateGatewayQueue
   		  resman.ResourceManPrms-taskNumberOfPuts = ${gatewayPuts}
   		  util.RandomValuesPrms-elementSize = 100000
          threadgroups = accessorThreads
          ;

INITTASK  taskClass = java.lang.System taskMethod = gc
          threadgroups = dataStoreThreads
          ;
          
TASK         taskClass   = resman.ThresholdsTest  taskMethod = HydraTask_waitForLowMemoryThenDrainGateways
			 resman.ResourceManPrms-taskEvictionPercentage = 40.0
			 resman.ResourceManPrms-waitForLowMemSec = 600
			 threadGroups = dataStoreThreads
			 maxTimesToRun = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf;
			 

TASK         taskClass   = resman.ThresholdsTest  taskMethod = HydraTask_doPutsUntilCriticalThenWaitForRecovery
			 resman.ResourceManPrms-taskNumberOfPuts = ${criticalPuts}
			 resman.ResourceManPrms-taskTolerateLowMemSec = 1200
			 resman.ResourceManPrms-taskMinimumPutPercentage = 0.00
			 threadGroups = accessorThreads
			 maxTimesToRun = 1;
