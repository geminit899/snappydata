hydra.Prms-testDescription = "
This test is for testing critical threshold notification delivery.
";

INCLUDE $JTESTS/resman/thresholdsOffHeap.inc;

INITTASK taskClass   = resman.ThresholdsTest   taskMethod = HydraTask_HA_reinitializeDataStore
         runMode = dynamic
         threadGroups = dataStoreThreads;

TASK     taskClass = parReg.ParRegTest taskMethod = HydraTask_HADoEntryOps
         resman.ResourceManPrms-taskTolerateLowMemSec = 30
         threadGroups = accessorThreads;

TASK     taskClass = resman.ThresholdsTest taskMethod = HydraTask_criticalThenDie
         resman.ResourceManPrms-stopModes = ONEOF MEAN_EXIT MEAN_KILL NICE_EXIT NICE_KILL FOENO
         resman.ResourceManPrms-remainCriticalSeconds = ONEOF 0 1 2 10 FOENO
         resman.ResourceManPrms-threadGroupNamesDoingEntryOps = accessorThreads
         resman.ResourceManPrms-waitForLowMemSec = 60
	 resman.ResourceManPrms-totalDatastoreCount = fcn ${${B}Hosts} * ${${B}VMsPerHost} ncf
         threadGroups = dataStoreThreads
         maxThreads = 1;

parReg.ParRegPrms-secondsToRun = 300; // this is the time for the whole run
parReg.ParRegPrms-highAvailability = true;

