hydra.Prms-testRequirement = "Test region destroy/invalidate events";
hydra.Prms-testDescription = "
This test concurrently executes region creation with invalidate/destroy 
region operations to create region events. 
";
INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = 3 3 3;
hydra.ClientPrms-vmThreads    = 5 5 5;

STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize
             clientNames = client1;

STARTTASK    taskClass   = util.CacheBB taskMethod  = HydraTask_initialize
             clientNames = client1;

STARTTASK    taskClass   = util.RegionDefinition  taskMethod = HydraTask_initialize;

INITTASK     taskClass   = event.ConcRegionEventTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = event.EventTest taskMethod  = HydraTask_doRegionOperations;

ENDTASK      taskClass   = event.ConcRegionEventTest taskMethod  = HydraTask_endTask;

hydra.GemFirePrms-stopSystemsAfterTest = true;
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 1200;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 30;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

// Logging params
hydra.log.LogPrms-file_logging = true;

util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = EventRegion:
       scope = ack, noack: mirroring = keys keysValues: 
       entryTTLSec = 0 20: 
       entryTTLAction = destroy invalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy invalidate:
       statisticsEnabled = true:
       cacheListeners = event.ETListener event.OperationListener:
       cacheWriter = event.ETWriter:
   ";
util.RegionDefPrms-VMRegionSpecName = region1;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

event.EventPrms-maxRegions = 100;
event.EventPrms-initRegionNumObjects = RANGE 0 5 EGNAR;
event.EventPrms-regionOperations = ONEOF add add add add clear invalidate destroy localInvalidate localDestroy close FOENO; // weighted to adds

util.ValueHolderPrms-useExtraObject = false;
util.TestHelperPrms-minTaskGranularitySec = 30;
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
