hydra.Prms-testRequirement = "Test entry create/update/destroy/invalidate events";
hydra.Prms-testDescription = "
This test concurrently executes putIfAbsent/remove/replace/get operations to
create entry events.";

// In this concurrent test, no validation of event counters can be done: 
// sometimes a get, which results in getting the value from another node, can 
// generate an update event, sometimes an update (put with an existing key) can 
// become a create event if another threads destroys the key between the time
// the test gets the key and issues the put. For this reason, the test cannot
// rely on event counters.
INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;

hydra.ClientPrms-vmQuantities = 3 3 3;
hydra.ClientPrms-vmThreads    = 5 5 5;

STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize clientNames = client1;

STARTTASK    taskClass   = util.CacheBB taskMethod  = HydraTask_initialize clientNames = client1;

STARTTASK    taskClass   = util.RegionDefinition  taskMethod = HydraTask_initialize;

INITTASK     taskClass   = event.EventTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = event.EventTest taskMethod  = HydraTask_doEntryOperations;

ENDTASK      taskClass   = event.EventTest taskMethod  = HydraTask_iterate;

hydra.GemFirePrms-conserveSockets = true;
hydra.GemFirePrms-stopSystemsAfterTest = true;

hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

// Logging params
hydra.log.LogPrms-file_logging = true;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;

//lynn - don't use dLocks until 30616 is fixed
//event.EventPrms-useRandomLocks = ONEOF true false false FOENO;
event.EventPrms-useRandomLocks = false;
event.EventPrms-entryOperations = ONEOF putIfAbsent putIfAbsent putIfAbsent putIfAbsent replace read remove FOENO; 
      // weighted to adds

util.ValueHolderPrms-useExtraObject = false;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = EventRegion:
       scope = ack, noack: mirroring = keysValues: 
       entryTTLSec = 0 20: 
       entryTTLAction = destroy:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy:
       statisticsEnabled = true:
       cacheListeners = event.CMListener event.OperationListener:
       cacheWriter = event.CMWriter:
   ";
util.RegionDefPrms-VMRegionSpecName = region1;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

util.TestHelperPrms-minTaskGranularitySec = 60;
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
