hydra.Prms-testRequirement = "Listeners invoked as required and in correct order";
hydra.Prms-testDescription = "
Test in serial execution mode to carefully validate listener invocation.

The test executes a task that:
  (1) adds, removes, inits or sets the listenerList
  (2) writes the expected listener invocation list to the BB
  (3) performs an entry or region operation
  (4) the listeners log their invocation to the invokedListenerList in the BB
  (5) compares the expected to invoked listener lists
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = 1 1 1;
hydra.ClientPrms-vmThreads    = 3 3 3;

STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize
             clientNames = client1;

STARTTASK    taskClass   = util.CacheBB taskMethod  = HydraTask_initialize
             clientNames = client1;

STARTTASK    taskClass   = util.RegionDefinition  taskMethod = HydraTask_initialize;

INITTASK     taskClass   = event.ListenerTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = event.ListenerTest taskMethod  = HydraTask_exerciseListeners;

hydra.GemFirePrms-stopSystemsAfterTest = true;
hydra.GemFirePrms-conserveSockets = true;

hydra.Prms-totalTaskTimeSec = 360;
hydra.Prms-maxResultWaitSec = 300;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = true;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

// Logging params
hydra.log.LogPrms-file_logging = true;

util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;

event.ListenerPrms-maxListeners = 10;
event.ListenerPrms-listenerOperations = ONEOF add add add add remove init set set FOENO;

//lynn - don't use dLocks until 30616 is fixed
//event.EventPrms-useRandomLocks = ONEOF true false FOENO;
event.EventPrms-useRandomLocks = false;
event.EventPrms-maxObjects = 10;
event.EventPrms-entryOperations = ONEOF add add add add update invalidate destroy read FOENO; // weighted to adds

event.EventPrms-maxRegions = 100;
event.EventPrms-initRegionNumObjects = RANGE 0 5 EGNAR; 
event.EventPrms-regionOperations = ONEOF add add add add add add add add clear invalidate destroy localInvalidate localDestroy close FOENO; // weighted to adds

util.ValueHolderPrms-useExtraObject = false;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = EventRegion:
       scope = ack, global: mirroring = keysValues: 
       cacheListeners = event.MultiListener:
   ";
util.RegionDefPrms-VMRegionSpecName = region1;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;
util.TestHelperPrms-minTaskGranularitySec = 0;
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
