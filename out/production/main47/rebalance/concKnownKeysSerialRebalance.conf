hydra.Prms-testDescription = "This test creates a partitioned region, then does various entry operations on a known key range. Values are checked for correctness in the close task.  After the initial loading of data, rebalance is executed as an INITTASK.  After the TASK HydraTask_doOps completes, another rebalance is done as the first CLOSETASK";

CLOSETASK    taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

INCLUDE $JTESTS/rebalance/concKnownKeys.inc;

// Initializing the rebalancing VM here provides additional capacity
INITTASK     taskClass   = parReg.ParRegTest  taskMethod = HydraTask_initialize
             threadGroups = rebalance
             runMode = always
             ;

INITTASK     taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

THREADGROUP rebalance
    totalThreads = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;

hydra.PartitionPrms-startupRecoveryDelay = ${startupRecoveryDelay};

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
