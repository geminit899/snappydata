hydra.Prms-testDescription = "
All threads start a rebalance, invoke createDestroy (creates a PR, executes ops and destroys a PR) and then cancels a random rebalance operation.  The only validation is during the CLOSETASK rebalanceTask.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK  taskClass = util.StopStartVMs  taskMethod = StopStart_initTask
          runMode = always;

INITTASK  taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_initialize
          runMode = always;

INITTASK  taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_createRegions
          runMode = always;

INITTASK  taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_populateRegions
          runMode = always;

TASK      taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_rebalanceOps;

// Create work for rebalance (by recycling a VM)
// maxThreads = 1 => only 1 VM will be recycled at any time
TASK      taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_recycleDataStore
          maxThreads = 1
          ;

CLOSETASK    taskClass   = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             ;

hydra.Prms-totalTaskTimeSec = 900;
hydra.Prms-maxResultWaitSec = 600;

hydra.Prms-clientShutdownHook = parReg.ParRegUtil dumpAllPartitionedRegions;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 1000;
util.ValueHolderPrms-useExtraObject = true;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = 
      region1 region2 region3 region4 region5 region6 region7 region8 region9 region10;
hydra.RegionPrms-regionName     = 
      clientRegion1 clientRegion2 clientRegion3 clientRegion4 clientRegion5 
      clientRegion6 clientRegion7 clientRegion8 clientRegion9 clientRegion10;
hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-partitionName  = pr;
hydra.PartitionPrms-names       = pr;
hydra.PartitionPrms-redundantCopies = 1;

// Force recovery to occur during rebalance
hydra.PartitionPrms-recoveryDelay = -1;
hydra.PartitionPrms-startupRecoveryDelay = -1;

util.StopStartPrms-stopModes = ONEOF MEAN_EXIT MEAN_KILL FOENO;

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
