hydra.Prms-testDescription = "This test extends parReg/execute/functionExecutionWithColocation by adding a serial rebalance.  The rebalancing VM is initialized after the data is loaded (to create work for rebalance).  The rebalance is performed as the final INITTASK.";

CLOSETASK    taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

INCLUDE $JTESTS/rebalance/functionExecutionWithColocation.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_2.inc;

// late region creation by rebalancer (to create work)
INITTASK     taskClass     = parReg.execute.FunctionServiceTest  taskMethod = HydraTask_initialize
                         threadGroups = rebalance
                         runMode = always;

// VM to control the CacheServer stop/start
THREADGROUP rebalance
    totalThreads = fcn 
                   ${rebalanceHosts} * ${rebalanceVMsPerHost} * ${rebalanceThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"rebalance\", ${rebalanceHosts}, true)"
                   ncf;

INITTASK     taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
