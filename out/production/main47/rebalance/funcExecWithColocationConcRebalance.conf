hydra.Prms-testDescription = "This test extends parReg/execute/functionExecutionWithColocation with PR Rebalancing.  The rebalancer VM is initialized after the data is loaded (without recovery) to create work for rebalancing.  Rebalancing is then run concurrently with the functionExecution TASKS.  Another rebalance is done as the first CLOSETASK";

CLOSETASK    taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

INCLUDE $JTESTS/rebalance/functionExecutionWithColocation.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_2.inc;

// VM to control the CacheServer stop/start
THREADGROUP rebalance
    totalThreads = fcn 
                   ${rebalanceHosts} * ${rebalanceVMsPerHost} * ${rebalanceThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"rebalance\", ${rebalanceHosts}, true)"
                   ncf;

INITTASK     taskClass     = parReg.execute.FunctionServiceTest  taskMethod = HydraTask_initialize
             threadGroups = rebalance
             runMode = always;

TASK         taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = false
             threadGroups = rebalance
             ;

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
