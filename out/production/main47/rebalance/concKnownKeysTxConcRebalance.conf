hydra.Prms-testDescription = "This test creates a partitioned region, then does various entry operations on a known key range. Values are checked for correctness in the close task.  After the initial loading of data, the rebalancer is initialized (to create work for rebalancing).  Rebalance is then executed as a TASK along with HydraTask_doOps.  Another rebalance is done as the first CLOSETASK";

CLOSETASK    taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true 
             threadGroups = rebalance
             ;

INCLUDE $JTESTS/rebalance/concKnownKeysTx.inc;

INITTASK     taskClass   = parReg.ParRegTest  taskMethod = HydraTask_initialize
             threadGroups = rebalance
             runMode = always
             ;

TASK         taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = false
             threadGroups = rebalance
             ;

THREADGROUP rebalance
    totalThreads = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;

hydra.PartitionPrms-startupRecoveryDelay = ${startupRecoveryDelay};

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
