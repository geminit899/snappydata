hydra.Prms-testDescription = "Extends parReg/execute/randomFunctionExecution.conf by adding rebalance as a TASK (verifyBalance false) and again as a CLOSETASK (verifyBalance true).";

CLOSETASK    taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

INCLUDE $JTESTS/rebalance/randomFunctionExecution.inc;

// late initialization of rebalance (to create work for rebalancer)
INITTASK     taskClass     = parReg.execute.FunctionServiceTest  taskMethod = HydraTask_initialize
             threadGroups = rebalance;

INITTASK     taskClass     = parReg.execute.FunctionServiceTest  taskMethod = HydraTask_initRegisterFunction
             threadGroups = rebalance;

// Account for the extra (rebalancer) dataStore (even though no buckets are stored there until rebalanceTask is executed)
INITTASK     taskClass     = parReg.execute.FunctionServiceTest  taskMethod  = HydraTask_incPR_TOTAL_DATASTORES
             threadGroups = rebalance;

TASK         taskClass   = rebalance.RebalanceTest taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = false
             threadGroups = rebalance
             ;

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
hydra.Prms-maxResultWaitSec = 1200;

