hydra.Prms-testDescription = "
Concurrently create and destroy partitioned regions with concurrent rebalancing.  A final rebalance with validation is performed as a CLOSETASK.
";

INCLUDE $JTESTS/rebalance/parRegCreateDestroyRebalance.inc;

// rebalancer also needs regions configured
INITTASK  taskClass = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_initialize
          threadGroups = rebalance;

TASK         taskClass   = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_rebalanceTask
             startInterval = 90
             rebalance.RebalancePrms-verifyBalance = false
             threadGroups = rebalance
             ;

CLOSETASK    taskClass   = parReg.RebalanceParRegCreateDestroy taskMethod = HydraTask_rebalanceTask
             rebalance.RebalancePrms-verifyBalance = true
             threadGroups = rebalance
             ;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = 
      region1 region2 region3 region4 region5 region6 region7 region8 region9 region10;
hydra.RegionPrms-regionName     = 
      clientRegion1 clientRegion2 clientRegion3 clientRegion4 clientRegion5 
      clientRegion6 clientRegion7 clientRegion8 clientRegion9 clientRegion10;
hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-partitionName  = 
      pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10;

hydra.PartitionPrms-names           = 
      pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10;
hydra.PartitionPrms-redundantCopies = 
      ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO 
      ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO ONEOF 0 1 FOENO;

rebalance.RebalancePrms-resourceObserver = rebalance.RebalanceResourceObserver;
