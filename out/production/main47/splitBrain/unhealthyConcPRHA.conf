hydra.Prms-testRequirement = "Test high availability of partitioned regions with a variety of operations with validation and concurrent execution";
hydra.Prms-testDescription = "
With a variety of accessor and data host VMs, randomly kill VMs at
a time, then bring it back and verify the data.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_3.inc;
hydra.GemFirePrms-distributedSystem = ds;
INCLUDE $JTESTS/splitBrain/unhealthyConcPRHA.inc;

THREADGROUP adminThread
    totalThreads = 1
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${C}\", ${${C}Hosts}, true)"
                   ncf;

// all threads in subgroup A are accessorThreads, and all threads in subgroup B
// are in dataStoreThreads
THREADGROUP accessorThreads
    totalThreads = fcn
                   ${${A}Hosts} * ${${A}VMsPerHost} * ${${A}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP dataStoreThreads
    totalThreads = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names          = accessorRegion       dataStoreRegion     accessorControllerRegion dataStoreControllerRegion;
hydra.RegionPrms-regionName     = partitionedRegion    partitionedRegion   controllerReg    controllerReg;
hydra.RegionPrms-cacheLoader    = parReg.ParRegLoader  parReg.ParRegLoader none             none;
hydra.RegionPrms-dataPolicy     = partition            partition           partition        partition;
hydra.RegionPrms-interestPolicy = cacheContent         cacheContent        all              all;
hydra.RegionPrms-cacheListeners = // listeners for the PR used for the test itself
                                  none,  // accessor
                                  none,  // datastore
                                  // listeners for the forcedDiscRegion
                                  splitBrain.RegMembershipListener splitBrain.ParRegListener, //accessor
                                  splitBrain.RegMembershipListener splitBrain.ParRegListener; //datastore
hydra.RegionPrms-partitionName  = accessorPR           dataStorePR         accessorPR       dataStorePR;

hydra.PartitionPrms-names           = accessorPR           dataStorePR;
hydra.PartitionPrms-localMaxMemory  = 0                    default;
hydra.PartitionPrms-redundantCopies = ${redundantCopies}   ${redundantCopies};
 
splitBrain.SplitBrainPrms-lockOperations = false;

util.AdminHelperPrms-alertListener = splitBrain.PRAckAlertListener;

splitBrain.SplitBrainPrms-unhealthiness = ONEOF slow sick FOENO;
splitBrain.SplitBrainPrms-playDead = ONEOF true false FOENO;

util.StopStartPrms-stopModes = mean_kill;

