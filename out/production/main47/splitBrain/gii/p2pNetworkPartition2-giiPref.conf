// Use this include file to create a p2p configuration as per SplitBrainTestSpec 10.3.5.2
// New with quorum partitioning, we will still see host2 as the surviving side
// host1 has a weight of 20 (2 servers)
// host2 has a weight of 28 (2 servers (1 is the lead member), 1 locator)
// Host1: 2 client VMs, each with 1 thread  (1 loadClient, 1 giiClient)
//        (client VMs, no locators)
//        Admin - to monitor SystemMembershipListener and AlertListener events
// Host2: 2 client VMs (giiClients), each with 1 thread and 1 locator 
//        (leadMember, client VMs and Coordinator)
//        Admin - to monitor SystemMembershipListener and AlertListener events
// This includes the INITTASKS to place the Coordinator and leadMembers as expected,
// as well as the drop/restore connection tasks
INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/gemfireprms.inc;

hydra.HostPrms-names          = host1      host2;

hydra.VmPrms-names            = vm1        vm2        vm3        vm4       vm5;
hydra.VmPrms-hostNames        = host1      host1      host2      host2     host2;

hydra.GemFirePrms-names       = gemfire1   gemfire2   gemfire3   gemfire4  gemfire5;
hydra.GemFirePrms-hostNames   = host1      host1      host2      host2     host2;

hydra.ClientPrms-names        = client1    admin1     client2    locator2  admin2;
hydra.ClientPrms-vmNames      = vm1        vm2        vm3        vm4       vm5;
hydra.ClientPrms-gemfireNames = gemfire1   gemfire2   gemfire3   gemfire4  gemfire5;

// Host1 contains 2 client VMs, each with 2 threads
// Host2 contains 2 client Vms, each with 2 threads + a single locator (coordinator)
hydra.ClientPrms-vmQuantities = 2          1          2          1          1;
hydra.ClientPrms-vmThreads    = 1          1          1          1          1;

STARTTASK    taskClass   = splitBrain.SplitBrainBB taskMethod = HydraTask_initialize clientNames = client1;

//------------------------------------------------------------------------------
// INITIALIZATION WORK (configure locators)
//------------------------------------------------------------------------------

/**
 * Starts the locators and connects them to admin-only distributed systems.
 */
INITTASK taskClass = splitBrain.SBUtil taskMethod = createLocatorTask
         threadGroups = coordinator;

INITTASK taskClass = splitBrain.SBUtil taskMethod = startAndConnectLocatorTask
         threadGroups = coordinator;

INITTASK taskClass   = splitBrain.NetworkPartitionTest taskMethod = HydraTask_connectToDS
         threadGroups = leadMember;

INITTASK taskClass   = util.AdminHelper taskMethod = HydraTask_initializeAdminDS
         threadGroups = adminDS;

INITTASK taskClass   = splitBrain.NetworkPartitionTest taskMethod = HydraTask_initialize
         threadGroups = loadClient;

INITTASK taskClass   = splitBrain.NetworkPartitionTest taskMethod = HydraTask_loadRegion
         batch
         threadGroups = loadClient;

INITTASK taskClass   = splitBrain.NetworkPartitionTest taskMethod = HydraTask_connectToDS
         threadGroups = giiClients;

TASK     taskClass   = splitBrain.NetworkPartitionTest taskMethod = HydraTask_initialize
         splitBrain.SplitBrainPrms-isGiiClient = true
         splitBrain.SplitBrainPrms-expectEmptyRegion = true
         maxTimesToRun = 3
         threadGroups = leadMember, giiClients;

TASK     taskClass = splitBrain.SBUtil taskMethod = dropConnection
         maxTimesToRun = 1
         startInterval = 1
         threadGroups = coordinator;

CLOSETASK taskClass = splitBrain.NetworkPartitionTest taskMethod = HydraCloseTask_checkForRegionDestroyedForcedDisconnects
          threadGroups = loadClient, leadMember, giiClients;

CLOSETASK taskClass = splitBrain.NetworkPartitionTest taskMethod = closeCacheAndDisconnectFromDS
          threadGroups = leadMember, loadClient, giiClients;

ENDTASK  taskClass = splitBrain.NetworkPartitionTest taskMethod = HydraEndTask_verifyLosingPartition
         clientNames = client1;

ENDTASK  taskClass = splitBrain.SBUtil taskMethod = restoreConnection
         clientNames = client1;

// Locators - we have to separate the coordinator so it can be started first
THREADGROUP coordinator totalThreads = 1 totalVMs = 1 clientNames = locator2;

// LeadMember - we have to separate out the leadMember so it can be in the same
// subgroup as the Coordinator
THREADGROUP leadMember totalThreads = 1 totalVMs = 1 clientNames = client2;
THREADGROUP loadClient totalThreads = 1 totalVMs = 1 clientNames = client1;
THREADGROUP giiClients totalThreads = 1 totalVMs = 1 clientNames = client1
                       totalThreads = 1 totalVMs = 1 clientNames = client2;

THREADGROUP adminDS totalThreads = 1 totalVMs = 1 clientNames = admin1
                    totalThreads = 1 totalVMs = 1 clientNames = admin2;

splitBrain.SplitBrainPrms-maxKeys = 50000;

// Admin Configuration
util.AdminHelperPrms-systemMembershipListener = splitBrain.SBSystemMembershipListener;
util.AdminHelperPrms-alertListener = splitBrain.SBAlertListener;

// Settings for splitBrain behavior
splitBrain.SplitBrainPrms-losingPartition = host1;
hydra.GemFirePrms-enableNetworkPartitionDetection = true;
hydra.GemFirePrms-disableAutoReconnect = true;
hydra.Prms-manageLocatorAgents = false; // turn off master-managed locators

// Allow more memory for these ValueHolders with extraObject
hydra.VmPrms-extraVMArgs = "-Xms500m -Xmx500m";

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = java.lang.String;
util.RandomValuesPrms-stringSize = RANGE 1000 5000 EGNAR;
util.ValueHolderPrms-useExtraObject = true;

hydra.GemFirePrms-conserveSockets = true;
hydra.GemFirePrms-stopSystemsAfterTest = true;
hydra.Prms-alwaysDoEndTasks = true;

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-maxResultWaitSec = 180;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

hydra.ConfigPrms-cacheConfig    = myCache;
hydra.ConfigPrms-regionConfig   = myRegion;
hydra.CachePrms-names           = myCache;
hydra.RegionPrms-names          = myRegion;
hydra.RegionPrms-regionName     = TestRegion;
hydra.RegionPrms-dataPolicy     = replicate;
hydra.RegionPrms-scope          = distributedAck;
hydra.RegionPrms-cacheListeners = splitBrain.SBListener;
