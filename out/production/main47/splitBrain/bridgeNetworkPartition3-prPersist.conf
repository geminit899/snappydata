hydra.Prms-testRequirement = "client entry operations on persistent PR should continue without interruption";
hydra.Prms-testDescription = "Create a network partition in a bridge system with 2 hosts.  Host1 has 2 BridgeServer VMs and a locator (EligibleCoordinator). Host2 contains the Coordinator and the LeadMember (BridgeServer).  Edge Clients are performing entry operations.  Once the partition occurs, the members on host2 should continue without interruption.  Host1 VMs should shutdown and disconnect from the DS.  Clients connected to servers in Partition1 should failover to Servers in Partition2";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/splitBrain/bridgeNetworkPartition3.inc;

TASK     taskClass = splitBrain.NetworkPartitionTest taskMethod = HydraTask_doEntryOperations
         threadGroups = edgeClients;

CLOSETASK taskClass   = splitBrain.NetworkPartitionTest taskMethod  = HydraTask_initializeBridgeServer
         hydra.ConfigPrms-cacheConfig  = bridge
         hydra.ConfigPrms-regionConfig = bridge
         hydra.ConfigPrms-bridgeConfig = bridge
         hydra.ConfigPrms-diskStoreConfig = disk
         threadGroups = leadMember, bridge1Threads, bridge2Threads;

CLOSETASK taskClass   = splitBrain.NetworkPartitionTest taskMethod  = HydraTask_verifyRegion
          threadGroups = bridge1Threads, bridge2Threads;

//RegionPrms-name                   = bridge        edge;
hydra.RegionPrms-scope              = default       local;
hydra.RegionPrms-dataPolicy         = persistentPartition default;
hydra.RegionPrms-partitionName      = pr            none;

hydra.PartitionPrms-names           = pr;
hydra.PartitionPrms-localMaxMemory  = default;
hydra.PartitionPrms-redundantCopies = ${redundantCopies};

