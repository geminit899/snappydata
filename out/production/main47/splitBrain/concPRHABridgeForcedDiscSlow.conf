hydra.Prms-testRequirement = "Test high availability of partitioned regions with a variety of operations with validation and concurrent execution";
hydra.Prms-testDescription = "
With a variety of accessor and data host VMs, randomly kill VMs at
a time, then bring it back and verify the data.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;
INCLUDE $JTESTS/splitBrain/concPRHAForcedDisc.inc;

THREADGROUP dataStoreThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP accessorThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;

parReg.ParRegPrms-entryOperations = ONEOF add add add add update invalidate get destroy FOENO; 

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = accessorRegion       dataStoreRegion     accessorFDRegion dataStoreFDRegion;
hydra.RegionPrms-regionName     = partitionedRegion    partitionedRegion   forcedDiscRegion forcedDiscRegion;
hydra.RegionPrms-scope          = local                default             local            default;
hydra.RegionPrms-dataPolicy     = default              partition           default         partition;

hydra.RegionPrms-poolName       = edgeDescript         none;

hydra.RegionPrms-interestPolicy = cacheContent         cacheContent        all              all;
hydra.RegionPrms-cacheListeners = // listeners for the PR used for the test itself
                                  util.SilenceListener, hct.BridgeEventListener,
                                  // listeners for the forcedDiscRegion
                                  splitBrain.RegMembershipListener splitBrain.ParRegHASlowListener,
                                  splitBrain.RegMembershipListener splitBrain.ParRegHASlowListener;
hydra.RegionPrms-partitionName  = none                  dataStorePR        none             dataStorePR;

hydra.PartitionPrms-names           = dataStorePR;
hydra.PartitionPrms-redundantCopies = ${redundantCopies};
hydra.PartitionPrms-localMaxMemory  = default;

// Pool Config
hydra.PoolPrms-names                  = edgeDescript;
hydra.PoolPrms-readTimeout            = 90000;
hydra.PoolPrms-threadLocalConnections = true; // see Bug 37157
hydra.PoolPrms-minConnections         = 2;
hydra.PoolPrms-subscriptionEnabled           = true;
hydra.PoolPrms-subscriptionRedundancy   = ${redundantCopies};

// define the bridge servers
hydra.BridgePrms-names                = bridge;


parReg.ParRegPrms-bridgeOrderingWorkaround = ONEOF uniqueKeys registerInterest FOENO;
 
