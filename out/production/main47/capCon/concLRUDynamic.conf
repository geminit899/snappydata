hydra.Prms-testDescription =
"This test runs concurrently to exercise a capacity controller that changes
its capacity dynamically.

This test expects these hydra variables:
   numVMs
   numThreads
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams1.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = ${vmQuantities}; // VMs per gemfire system
hydra.ClientPrms-vmThreads    = ${vmThreads};

STARTTASK    taskClass   = capCon.CapConBB taskMethod  = HydraTask_initialize;

STARTTASK    taskClass   = util.RegionDefinition taskMethod = HydraTask_initialize;

INITTASK     taskClass   = capCon.LRUDynamicTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = capCon.LRUDynamicTest taskMethod  = HydraTask_concTest;

ENDTASK      taskClass   = capCon.LRUTest taskMethod  = HydraTask_endTask;

ENDTASK      taskClass   = capCon.LRUDynamicTest taskMethod  = HydraTask_endTask;

hydra.Prms-totalTaskTimeSec = 900;  
hydra.Prms-serialExecution = false;

hydra.GemFirePrms-conserveSockets = true;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;
util.TestHelperPrms-minTaskGranularitySec = 30;

RANDOMINCLUDE $JTESTS/memscale/offHeap_all.inc;

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       scope = local ack noack global: dataPolicy = normal: 
       eviction = LRU:
       evictionLimit = 1:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region2:
       scope = local ack noack global: dataPolicy = normal: 
       concurrencyChecksEnabled = true:
       eviction = LRU:
       evictionLimit = 1:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   ";
util.RegionDefPrms-VMRegionSpecName = ONEOF region1 region2 FOENO;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

capCon.CapConPrms-useCacheLoader = ONEOF true false FOENO;

capCon.CapConPrms-randomCapacityChanges = ONEOF true false FOENO;
capCon.CapConPrms-boundsMultiplier = 1000;
util.BoundsPrms-targetLowPoint = 1;
util.BoundsPrms-targetHighPoint = 10;
hydra.VmPrms-extraVMArgs = "-Xms350m -Xmx350m";
