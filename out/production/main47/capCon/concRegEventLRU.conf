hydra.Prms-testDescription =
"This test is a variant on event tests, which mixes distributed region opertions,
events, and an entry evictor.

This test should be run many times since it is very random; it can choose from many 
combinations of region attributes, etc. It expects these hydra variables:
   hydra.numHosts
   numVMs
   numThreads
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparamsN.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = ${vmQuantities}; // VMs per gemfire system
hydra.ClientPrms-vmThreads    = ${vmThreads};

STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize;

STARTTASK    taskClass   = util.RegionDefinition taskMethod = HydraTask_initialize;

INITTASK     taskClass   = capCon.RegEventLRUTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = capCon.RegEventCapCon taskMethod  = HydraTask_addRegionsAndObjects;

TASK         taskClass   = capCon.RegEventCapCon taskMethod  = HydraTask_invalidateRegion
             startInterval = 30;

TASK         taskClass   = capCon.RegEventCapCon taskMethod  = HydraTask_destroyRegions 
             startInterval = 90;

TASK         taskClass   = event.EventTest taskMethod  = HydraTask_addToRegion; 

ENDTASK      taskClass   = capCon.CapConTest taskMethod  = HydraTask_endTask;

hydra.Prms-totalTaskTimeSec = 900;  
hydra.Prms-maxResultWaitSec = 1200;

hydra.GemFirePrms-conserveSockets = true;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;
util.TestHelperPrms-minTaskGranularitySec = 60;

hydra.VmPrms-extraVMArgs = "-Xms100m -Xmx256m"; // for the VM region case

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

RANDOMINCLUDE $JTESTS/memscale/offHeap_all.inc;

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = EventRegion:
       scope = local: dataPolicy = normal: 
       entryTTLSec = 0 20: 
       entryTTLAction = destroy localDestroy invalidate localInvalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy localDestroy invalidate localInvalidate:
       statisticsEnabled = true:
       eviction = lru:
       evictionLimit = 10:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region2:
       regionName = EventRegion:
       scope = ack, noAck, global: dataPolicy = normal: 
       entryTTLSec = 0 20: 
       entryTTLAction = destroy localDestroy invalidate localInvalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy localDestroy invalidate localInvalidate:
       statisticsEnabled = true:
       eviction = lru:
       evictionLimit = 10:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region3:
       regionName = EventRegion:
       scope = ack, noAck, global: dataPolicy = normal: 
       concurrencyChecksEnabled = true:
       entryTTLSec = 0 20: 
       entryTTLAction = destroy localDestroy invalidate localInvalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy localDestroy invalidate localInvalidate:
       statisticsEnabled = true:
       eviction = lru:
       evictionLimit = 10:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region4:
       regionName = EventRegion:
       scope = local: dataPolicy = normal: 
       concurrencyChecksEnabled = true:
       entryTTLSec = 0 20: 
       entryTTLAction = destroy localDestroy invalidate localInvalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = destroy localDestroy invalidate localInvalidate:
       statisticsEnabled = true:
       eviction = lru:
       evictionLimit = 10:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   ";
util.RegionDefPrms-VMRegionSpecName = ONEOF region1 region2 region3 region4 FOENO;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

util.ValueHolderPrms-useExtraObject = false;

//util.RandomValuesPrms-objectType = byte[];
//util.RandomValuesPrms-elementSize = 100;

event.EventPrms-maxNumberToValidate = 15000;
event.EventPrms-maxRegions = 100;
event.EventPrms-initRegionNumObjects = RANGE 100 110 EGNAR;
event.EventPrms-regionOperations = add add add add invalidate destroy localInvalidate localDestroy; // weighted to adds
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
