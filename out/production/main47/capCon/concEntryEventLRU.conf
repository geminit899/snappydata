hydra.Prms-testDescription =
"This test is a variant on event tests, which mixes distributed entry opertions,
events, and an entry evictor.

This test should be run many times since it is very random; it can choose from many 
combinations of region attributes, etc. It expects these hydra variables:
   hydra.numHosts
   numVMs
   numThreads
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparamsN.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = ${vmQuantities}; // VMs per gemfire system
hydra.ClientPrms-vmThreads    = ${vmThreads};

STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize;

STARTTASK    taskClass   = util.RegionDefinition taskMethod = HydraTask_initialize;

INITTASK     taskClass   = capCon.EntryEventLRUTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = capCon.EntryEventLRUTest taskMethod  = HydraTask_doEntryOperations;

ENDTASK      taskClass   = capCon.CapConTest taskMethod  = HydraTask_endTask;

hydra.Prms-totalTaskTimeSec = 900;  
hydra.Prms-maxResultWaitSec = 300;
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;
util.TestHelperPrms-minTaskGranularitySec = 60;

RANDOMINCLUDE $JTESTS/memscale/offHeap_all.inc;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = EventRegion:
       scope = local: dataPolicy = normal: 
       eviction = lru:
       evictionLimit = 1000:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region2:
       regionName = EventRegion:
       scope = ack, noAck, global: dataPolicy = normal: 
       eviction = lru:
       evictionLimit = 1000:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region3:
       regionName = EventRegion:
       scope = ack, noAck, global: dataPolicy = normal: 
       concurrencyChecksEnabled = true:
       eviction = lru:
       evictionLimit = 1000:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   specName = region4:
       regionName = EventRegion:
       scope = local: dataPolicy = normal: 
       concurrencyChecksEnabled = true:
       eviction = lru:
       evictionLimit = 1000:
       enableOffHeapMemory = ifOffHeapMemoryConfigured:
   ";
util.RegionDefPrms-VMRegionSpecName = ONEOF region1 region2 region3 region4 FOENO;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

util.ValueHolderPrms-useExtraObject = false;

event.EventPrms-entryOperations = ONEOF add add add add add add add add update invalidate read destroy localInvalidate localDestroy FOENO; 
//lynn - don't use dLocks until 30616 is fixed
//event.EventPrms-useRandomLocks = ONEOF true false false FOENO;
event.EventPrms-useRandomLocks = false;
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
