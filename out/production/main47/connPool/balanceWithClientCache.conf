hydra.Prms-testRequirement = "Test that bridge servers and clients are balanced";
hydra.Prms-testDescription = "
Start up servers and clients, then check for balance.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct_locator.inc;

THREADGROUP locator
  totalThreads = fcn
                 ${locatorHosts} * ${locatorVMsPerHost} * ${locatorThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"locator\", ${locatorHosts}, true)"
                 ncf;
                      
THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;         

INITTASK     taskClass = connPool.ConnPoolTest taskMethod = HydraTask_createLocator    
             threadGroups = locator;
             
INITTASK     taskClass = connPool.ConnPoolTest taskMethod = HydraTask_startLocator
			 sequential    
             threadGroups = locator;
             
INITTASK     taskClass   = connPool.ConnPoolTest  taskMethod = HydraTask_initializeServer
             threadGroups = bridgeThreads;

INITTASK     taskClass   = connPool.ConnPoolTest  taskMethod = HydraTask_initializeClientCache
             threadGroups = edgeThreads;

INITTASK     taskClass   = connPool.ConnPoolUtil  taskMethod = HydraTask_prepareForValidation
             connPool.ConnPoolPrms-sleepSec=30
             threadGroups = bridgeThreads;
INITTASK     taskClass   = connPool.ConnPoolUtil  taskMethod = HydraTask_validate
             threadGroups = bridgeThreads;

hydra.Prms-useFixedRandomInMaster= true;
hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 600;

hydra.GemFirePrms-stopSystemsAfterTest = true;
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

// edgeClient descriptions (ClientCache, ClientRegion, etc)
hydra.ClientCachePrms-names                 = clientCache;
hydra.ClientCachePrms-defaultPoolName       = defaultPool;
hydra.ClientCachePrms-defaultDiskStoreName  = defaultDiskStore;

hydra.ClientRegionPrms-names                = clientRegion;
hydra.ClientRegionPrms-regionName           = testRegion;
hydra.ClientRegionPrms-clientRegionShortcut = ${shortcut};
hydra.ClientRegionPrms-diskSynchronous      = ONEOF true false FOENO;
hydra.ClientRegionPrms-cacheListeners       = util.SilenceListener;

hydra.DiskStorePrms-names = defaultDiskStore;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;

// define the edge clients
hydra.PoolPrms-names                  = defaultPool;
hydra.PoolPrms-minConnections         = ${minConnections};
hydra.PoolPrms-maxConnections         = ${maxConnections};
hydra.PoolPrms-subscriptionEnabled    = false;
hydra.PoolPrms-threadLocalConnections = false;
hydra.PoolPrms-readTimeout            = 60000;
hydra.PoolPrms-subscriptionRedundancy = 0;
hydra.PoolPrms-idleTimeout            = -1;

// define the bridge servers
hydra.BridgePrms-names                = bridge;

// bridgeServer descriptions (Cache, Region, etc)
hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;
hydra.RegionPrms-names          = dataStoreRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = default;
hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-cacheListeners = hct.BridgeEventListener;
hydra.RegionPrms-partitionName  = pr;

hydra.PartitionPrms-names           = pr;
hydra.PartitionPrms-redundantCopies = 1;

util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
hydra.BridgePrms-loadPollInterval = 120000; // to workaround bug 39225

