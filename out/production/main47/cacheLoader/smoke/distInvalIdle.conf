/* Variation on cacheloader1.conf

   This version has an idletime of 30 seconds, with an expiration action of 
   invalidate or unload.
   It updates MasterData once every 2 minutes and reads CachedData once a minute.

   It runs for 10 minutes, using 2 VMs on each system, with
   5 threads in each.

   The following test parameters are set randomly:
     scopeAttribute
     mirrorAttribute
     expirAction
*/

hydra.Prms-testDescription = "fcn ${numHosts} * 5 - 1 ncf threads in multiple VMs across ${numHosts} systems periodically get cacheLoaded value, scope varies, frequent cache miss due to idletime expiration or explicit invalidation";
hydra.Prms-testRequirement = "current value always acquired, whether from local cache, netSearch, netLoad, or cacheLoader";

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/systemparams${numHosts}.inc;
include $JTESTS/cacheLoader/smoke/logging.inc;
include $JTESTS/cacheLoader/smoke/tasks.inc;
include $JTESTS/cacheLoader/smoke/${numHosts}sys.inc;

TASK      taskClass   = cacheLoader.smoke.Client  taskMethod  = updateTask
	  threadGroups = cacheLoaderAndUpdater   startInterval=120
          ;

TASK      taskClass   = cacheLoader.smoke.Client  taskMethod  = readTask
	  threadGroups = default, otherInitializers   startInterval=60
          ;

util.CachePrms-scopeAttribute = ONEOF 
	DISTRIBUTED_NO_ACK 
	DISTRIBUTED_ACK 
	GLOBAL 
	                        FOENO;
// LOCAL 

// need to increase timeout for GLOBAL scope:
cacheLoader.smoke.TestParms-searchTimeout = fcn 300 * ${numHosts} ncf;
cacheLoader.smoke.TestParms-lockTimeout = fcn 60 * ${numHosts} ncf;

util.CachePrms-mirrorAttribute = ONEOF
	NONE
	KEYS
	KEYS_VALUES
				 FOENO;

util.CachePrms-entryTTLSec = 0;
util.CachePrms-entryTTLAction = INVALIDATE;
util.CachePrms-entryIdleTimeoutSec = 30;
util.CachePrms-entryIdleTimeoutAction = INVALIDATE;
//	LOCAL_INVALIDATE
