include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/topology_p2p_1_locator.inc;
include $JTESTS/hydraconfig/single_host.inc;

hydra.Prms-testDescription = "Data is put into the cache and the size of the cache is measured. Uses normal data policy and local scope";

hydra.CachePrms-names = putter;

hydra.RegionPrms-names         = putter;
hydra.RegionPrms-dataPolicy    = ${dataPolicy};
hydra.RegionPrms-scope    = ${scope};
hydra.RegionPrms-statisticsEnabled    = ${statisticsEnabled};

hydra.VmPrms-extraVMArgs = "-Xms256m -Xmx256m";
hydra.VmPrms-extraVMArgs += "-XX:+UseSerialGC -XX:-DisableExplicitGC -javaagent:${JTESTS}/../lib/sizeagent.jar -Dgemfire.ObjectSizer.SIZE_OF_CLASS=com.gemstone.gemfire.internal.size.InstrumentationSingleObjectSizer";
hydra.VmPrms-extraVMArgs += "-Dgemfire.DISABLE_DISCONNECT_DS_ON_CACHE_CLOSE=true";
hydra.VmPrms-extraClassPaths += fcn "hydra.HadoopPrms.getServerJars(\"$HADOOP_DIST\", 1)" ncf;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createAndStartLocatorTask
          threadGroups = locator
          ;

INITTASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = putter
          hydra.ConfigPrms-regionConfig = putter
          threadGroups = putter
          ;
          
INITTASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = openStatisticsTask
          threadGroups = putter
          ;
          
TASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = putDataTask
         threadgroups=putter
		 maxTimesToRun = fcn ${putterHosts} * ${putterVMsPerHost}
                                         * ${putterThreadsPerVM} ncf
          ;
CLOSETASK taskClass = cacheperf.memory.CacheSizeClient taskMethod = closeCacheTask
          threadGroups = putter
          ;
CLOSETASK taskClass = cacheperf.memory.CacheSizeClient taskMethod = closeStatisticsTask
          threadGroups = putter
          ;

THREADGROUP locator
  totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                     * ${locatorThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"locator\", ${locatorHosts}, true)" ncf ;

THREADGROUP putter
    totalThreads = fcn ${putterHosts} * ${putterVMsPerHost}
                                         * ${putterThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"putter\", ${putterHosts}, true)" ncf;

cacheperf.memory.CacheSizePrms-numberOfEntries = ${numberOfEntries};
cacheperf.memory.CacheSizePrms-sampleInterval = ${sampleInterval};

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/smoketest/mem/mem001.spec;

