// Query Smoke performance test
// Topology: p2p   
// Region Type: partitioned  
// Query Type: none
// Index type: CompactRange + Range
// Region operations: put/update
// Measurement statistics: putsPerSecond


include $JTESTS/query/perf/regionOpsPerf_withIndex_p2p.inc;

hydra.Prms-testDescription = "Querying smoke perf tests, p2p-partitioned- put/update operations in presence of range and compact range indexes.";

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/smoketest/query/query037.spec;

hydra.PartitionPrms-names          = peer;
hydra.PartitionPrms-localMaxMemory = default;
hydra.RegionPrms-dataPolicy    = partitioned;
hydra.RegionPrms-partitionName = peer;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createDataTask
          cacheperf.CachePerfPrms-keyAllocation = ownKeys
          cacheperf.CachePerfPrms-warmupTerminatorMethod = none
          cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          cacheperf.CachePerfPrms-taskTerminatorFrequency = 1 iterations
          ;

TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          cacheperf.CachePerfPrms-keyAllocation = ownKeysRandomWrap
          cacheperf.CachePerfPrms-isMainWorkload = true
          ;