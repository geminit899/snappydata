// Query Smoke performance test
// Topology: hct (client server)
// Region Type: replicated  
// Query Type: WHERE filter conditions 
// Index type: Range + Compact Range
// Region operations: None  
// Measurement statistics: queriesPerSecond

include $JTESTS/query/perf/queryPerf_hct.inc;
include $JTESTS/smoketest/query/queries.inc;
hydra.Prms-testDescription = "Querying smoke perf tests, hct-replicated-WhereCondition with Range and Compact range indexes";

hydra.RegionPrms-dataPolicy    = replicated  empty;
TASK      taskClass = cacheperf.gemfire.query.QueryPerfClient taskMethod = queryTask
          cacheperf.CachePerfPrms-isMainWorkload = true
          cacheperf.CachePerfPrms-keyAllocation = ownKeysRandomWrap
          threadGroups = query
          ;

INITTASK  taskClass =  cacheperf.gemfire.query.QueryPerfClient taskMethod = indexDataTask
          ;

cacheperf.CachePerfPrms-queryIndex =
        "
        ID
        "
        "
        status
        ";
cacheperf.CachePerfPrms-queryFromClause =
        "
        /${regionName} pf, pf.positions.values pos
        "
        "/${regionName} pf";
cacheperf.CachePerfPrms-objectType = objects.PdxPortfolio;
hydra.RegionPrms-valueConstraint = objects.PdxPortfolio;
perffmwk.PerfReportPrms-useAutoGeneratedStatisticsSpecification = true;