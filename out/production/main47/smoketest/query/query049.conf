// Query Smoke performance test
// Topology: p2p
// Region Type: partitioned  
// Query Type: WHERE filter conditions 
// Index type: Range + Compact Range
// Region operations: None  
// Measurement statistics: queriesPerSecond

include $JTESTS/query/perf/queryPerf_p2p.inc;
include $JTESTS/smoketest/query/queries.inc;
hydra.Prms-testDescription = "Querying smoke perf tests, p2p-partitioned-WhereCondition with Range and Compact range indexes";

hydra.PartitionPrms-names          = peer;
hydra.PartitionPrms-localMaxMemory = default;
hydra.RegionPrms-dataPolicy    = partitioned;
hydra.RegionPrms-partitionName = peer;

TASK      taskClass = cacheperf.gemfire.query.QueryPerfClient taskMethod = queryTask
          cacheperf.CachePerfPrms-keyAllocation = ownKeysRandomWrap
          cacheperf.CachePerfPrms-isMainWorkload = true
          ;
          
INITTASK  taskClass =  cacheperf.gemfire.query.QueryPerfClient taskMethod = indexDataTask
          ;

cacheperf.CachePerfPrms-queryIndex =
        "ID"
        "status";
cacheperf.CachePerfPrms-queryFromClause =
        "/${regionName} pf, pf.positions.values pos"
        "/${regionName} pf";
        
cacheperf.CachePerfPrms-objectType = objects.PdxPortfolio;
hydra.RegionPrms-valueConstraint = objects.PdxPortfolio;
perffmwk.PerfReportPrms-useAutoGeneratedStatisticsSpecification = true; 