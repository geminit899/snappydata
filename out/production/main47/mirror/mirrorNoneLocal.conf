hydra.Prms-testDescription =
"This tests mirror NONE with local sope.

Using the root region, this test has 1 thread that puts positive keys/values 
(keys with a positive Integer such as Object_8, value Long 8) and one thread 
that puts negative keys/values (keys with a negative Integer such as Object_9,
value Long 9). Other threads use hasKey and hasValueForKey to verify that no
mirroring occurs.

";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams2.inc;
INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];

hydra.HostPrms-names          = host1    host2   host3;

hydra.VmPrms-names            = vm1      vm2     vm3;
hydra.VmPrms-hostNames        = host1    host2   host3;

hydra.GemFirePrms-names       = gemfire1 gemfire2 gemfire3;
hydra.GemFirePrms-hostNames   = host1    host2    host3;

hydra.ClientPrms-names        = positiveClient otherPosClient    negativeClient  otherNegClient    nonVisibleClient;
hydra.ClientPrms-vmNames      = vm1            vm1               vm2             vm2               vm3;
hydra.ClientPrms-gemfireNames = gemfire1       gemfire1          gemfire2        gemfire2          gemfire3;
hydra.ClientPrms-vmQuantities = 1              1                 1               1                 2;
hydra.ClientPrms-vmThreads    = 3              3                 3               3                 4;

THREADGROUP positiveUpdateThread totalThreads = 1  totalVMs = 1  clientNames = positiveClient;
THREADGROUP negativeUpdateThread totalThreads = 1  totalVMs = 1  clientNames = negativeClient;
THREADGROUP visiblePositiveThreads totalThreads = 2  clientNames = positiveClient;
THREADGROUP visibleNegativeThreads totalThreads = 2  clientNames = negativeClient;

// all threads in the default thread group are nonvisible
THREADGROUP nonVisiblePosThread totalThreads = 1  totalVMs = 1  clientNames = otherPosClient;
THREADGROUP nonVisibleNegThread totalThreads = 1  totalVMs = 1  clientNames = otherNegClient;
THREADGROUP nonVisibleThreads totalThreads = 2  totalVMs = 2  clientNames = nonVisibleClient;

STARTTASK    taskClass   = mirror.MirrorBB taskMethod  = HydraTask_initialize
             clientNames = positiveClient;

STARTTASK    taskClass   = util.CacheBB taskMethod  = HydraTask_initialize
             clientNames = positiveClient;

STARTTASK    taskClass   = util.RegionDefinition taskMethod = HydraTask_initialize;

INITTASK     taskClass   = mirror.MirrorTest taskMethod  = HydraTask_initWithListener
             threadGroups = visiblePositiveThreads, visibleNegativeThreads
             util.CachePrms-mirrorAttribute = NONE 
             mirror.MirrorPrms-listenerClassName = mirror.EventListener1;

INITTASK     taskClass   = mirror.MirrorTest taskMethod  = HydraTask_initWithListener 
             threadGroups = default
             util.CachePrms-mirrorAttribute = NONE 
             mirror.MirrorPrms-listenerClassName = mirror.EventListener2;

TASK         taskClass   = mirror.MirrorTest taskMethod  = HydraTask_updatePositive
             threadGroups = positiveUpdateThread;

TASK         taskClass   = mirror.MirrorTest taskMethod  = HydraTask_updateNegative
             threadGroups = negativeUpdateThread;

TASK         taskClass   = mirror.MirrorTest taskMethod  = HydraTask_readPositive
             threadGroups = visiblePositiveThreads;

TASK         taskClass   = mirror.MirrorTest taskMethod  = HydraTask_readNegative
             threadGroups = visibleNegativeThreads;

TASK         taskClass   = mirror.MirrorTest taskMethod  = HydraTask_noKeys
             threadGroups = default,
                            nonVisiblePosThread, nonVisibleNegThread, nonVisibleThreads;

CLOSETASK    taskClass   = mirror.MirrorTest taskMethod  = HydraTask_validateMirrorKeysPositive
             threadGroups = positiveUpdateThread;
CLOSETASK    taskClass   = mirror.MirrorTest taskMethod  = HydraTask_validateMirrorKeysNegative
             threadGroups = negativeUpdateThread;
CLOSETASK    taskClass   = mirror.MirrorTest taskMethod  = HydraTask_validateNoPropagation
             threadGroups = nonVisiblePosThread, nonVisibleNegThread, nonVisibleThreads;

hydra.GemFirePrms-stopSystemsAfterTest = true;
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.Prms-totalTaskTimeSec = 900;
hydra.Prms-maxResultWaitSec = 900;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

util.ValueHolderPrms-useExtraObject = true;

// Logging params
hydra.log.LogPrms-file_logging = true;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;
util.CachePrms-keyValueWaitTime = 300;
util.TestHelperPrms-minTaskGranularitySec = 15;

// do not specify mirroring attribute here; it is specified in the task attributes above
util.RegionDefPrms-regionSpecs = "
   specName = region1:
       scope = local: 
   ";
util.RegionDefPrms-VMRegionSpecName = region1;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;
mirror.MirrorPrms-totalNumObjectsToMirror = 30000;
hydra.VmPrms-extraVMArgs = "-Xmx600m";

