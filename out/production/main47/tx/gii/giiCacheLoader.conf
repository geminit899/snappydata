hydra.Prms-testRequirement = "
Test that a cache loader installed in a region doing a getInitialImage will cause a null
to be returned to an application that does a net load.";

hydra.Prms-testDescription = "
Using gets, check that during a getInitialImage, the cache loader installed in the VM
doing the getInitialImage returns null to the application, but returns its regular values
when getInitialImage is finished.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams2.inc;

hydra.ClientPrms-names        = giiClient loadClient;

hydra.ClientPrms-vmQuantities = 1;
hydra.ClientPrms-vmThreads    = 5;

// thread to do the getInitialImage
THREADGROUP getInitImageThread totalThreads = 1  totalVMs = 1  clientNames = giiClient;
THREADGROUP threadsInGetInitImageVM totalThreads = 4  totalVMs = 1  clientNames = giiClient;

// thread to initially load the region
THREADGROUP loadThreads totalThreads = 5 totalVMs = 1 clientNames = loadClient;

STARTTASK    taskClass     = getInitialImage.InitImageTest taskMethod = StartTask_initialize
             clientNames = loadClient;

INITTASK     taskClass     = util.RegionDefinition  taskMethod = HydraTask_initialize;

INITTASK     taskClass     = getInitialImage.InitImageTest taskMethod = HydraTask_loadRegion
             getInitialImage.InitImagePrms-useCacheLoader = false
             threadGroups  = loadThreads;
 
TASK         taskClass     = getInitialImage.InitImageTest taskMethod = HydraTask_doNewKeyGets
             threadGroups  = loadThreads
             maxTimesToRun = 5;
 
TASK         taskClass     = getInitialImage.InitImageTest 
             taskMethod    = HydraTask_doGetInitImage
             util.CachePrms-dataPolicyAttribute = REPLICATE
             getInitialImage.InitImagePrms-useCacheLoader = true
             getInitialImage.InitImagePrms-cacheLoaderClass = getInitialImage.GiiLoader
             getInitialImage.InitImagePrms-useTransactions = true
             threadGroups  = getInitImageThread
             maxTimesToRun = 1;

CLOSETASK    taskClass     = getInitialImage.InitImageTest taskMethod  = HydraTask_verifyEventCounters
             threadGroups  = getInitImageThread;

hydra.GemFirePrms-stopSystemsAfterTest = true;

hydra.Prms-totalTaskTimeSec = 1800;
hydra.Prms-maxResultWaitSec = 1800;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;

// Logging params
hydra.log.LogPrms-file_logging = true;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 250;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;

util.ValueHolderPrms-useExtraObject = true;
util.CacheDefPrms-cacheSpecs = "
 specName = cache1:
 evictionHeapPercentage = 60:
";

// don't specify dataPolicy here; it is specified above in the task attributes
util.RegionDefPrms-regionSpecs = "
   specName = VMRegion:
       scope = ack noack: 
       eviction = heap:
       evictionAction = overflowToDisk:
       persistBackup = false: 
       isSynchronous = true false: 
       timeInterval = 10:
       bytesThreshold = 0 1 100 1000:
       numDiskDirs = 1 2 3 4:
   ";
util.RegionDefPrms-VMRegionSpecName = VMRegion;
util.RegionDefPrms-regionDefUsage = useOneRegionSpec;

hydra.VmPrms-extraVMArgs = "-Xms200m -Xmx200m";

getInitialImage.InitImagePrms-numKeys = 20000;
getInitialImage.InitImagePrms-useCacheLoader = false; // load with puts, not gets

getInitialImage.InitImagePrms-giiSourceDataPolicy = replicate-replicate;
