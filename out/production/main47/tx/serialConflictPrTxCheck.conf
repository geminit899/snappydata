hydra.Prms-testRequirement = "
Test that conflicts occur/don't occur using only transactional operations
and always running inside a transaction.";

hydra.Prms-testDescription = "
Previous conflict tests on tx test the conflict on the following schedule:
T1: R(key) ....W(key)........................Commit 
T2: R(key) ............W(key).....Commit

This test will check on the following schedule:
T1: R(key) ....W(key).....Commit 
T2: R(key) .......................W(key)........Commit

";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparamsN.inc;
//INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = ${numVMs};
hydra.ClientPrms-vmThreads    = ${numThreads};

INITTASK  taskClass   = tx.ConflictCheck taskMethod = HydraTask_initialize;

TASK      taskClass   = tx.ConflictCheck taskMethod = HydraTask_txOnlyConflictCheck;

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-maxResultWaitSec = 300;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = true;
hydra.Prms-roundRobin = true;

util.ValueHolderPrms-useExtraObject = false;

hydra.ConfigPrms-cacheConfig = aCache;
hydra.ConfigPrms-regionConfig = aRegion;
hydra.CachePrms-names = aCache;

hydra.RegionPrms-names = aRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-dataPolicy = partition;

hydra.RegionPrms-partitionName  = pr;

hydra.PartitionPrms-names           = pr;
hydra.PartitionPrms-localMaxMemory  = default;
hydra.PartitionPrms-redundantCopies = 0;



