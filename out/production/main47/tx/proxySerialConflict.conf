include $JTESTS/tx/serialConflict.conf;

hydra.Prms-testRequirement = "
Test that conflicts occur/don't occur with entry and region operations,
and with a mixture of clients running in and outside transactions.  At least
one client has a proxy dataPolicy";
                                                                                       
hydra.Prms-testDescription = "
This test runs with 2 hosts, each with 1 VM with 1 thread, in serial round 
robin scheduing. The first client does random operations (always in a transaction), 
and the 2nd client then randomly chooses to run in or outside a transaction 
and does operations that will/will not conflict with the first client. The first 
client tries to commit first; it may or may not fail depending on what the 2nd client
 did.  Then the second client tries to commit; it may or may not fail, if in a
transaction, depending on what the 1st client did.

This differs from the serialConflict tests in that one of the two clients will have a proxy dataPolicy.  It also requires 2 hosts, each with 1 VM with 1 thread.
";

//Task to write viewDataPolicies to BB for use by clients
STARTTASK taskClass   = tx.TxUtil taskMethod=StartTask_initialize
          clientNames = client1
          ;

// Removed these combinations: normal-empty, preloaded-empty (since preloaded is also 'normal' and not a replicated dataPolicy).
// See BUG # 41604 ... 
// todo@lhughes -- review to see if this coverage is necessary or modify the test to accommodate.
// Starting with GemFire 7.0, at least one member has to be a replicated data policy
tx.TxPrms-viewDataPolicies = ONEOF
                             empty-replicate
                             replicate-empty
                             FOENO;

// Beginning with GemFire 7.0, we cannot do local operations (localInvalidate, localDestroy) in a tx 
// when dataPolicies are mixed in the DS (empty + replicates, normal + replicates) ... 
// as these operations get "remoted" to the data with replicated data policy.  The product will now
// throw UnsupportedOperationException from such operations.
// override operations from serialConflict.conf
tx.TxPrms-operations =  
          entry-create entry-update entry-destroy entry-inval 
          entry-create entry-update entry-destroy entry-inval 
          entry-create entry-update entry-destroy entry-inval 
          entry-create entry-update entry-destroy entry-inval 
          entry-getWithNewKey entry-getWithExistingKey entry-getWithPreviousKey
          ;

