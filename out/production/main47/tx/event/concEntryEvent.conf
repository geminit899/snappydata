hydra.Prms-testRequirement = "Test entry create/update/destroy/invalidate events";
hydra.Prms-testDescription = "
This test concurrently executes put/invalidate/destroy/get operations to
create entry events. Also used: localInvalidate/localDestroy, entryTTL
entryIdleTimeout, but no locks for running with high concurrency.
Each iteration of doEntryOperations() comprises a single transaction.
Conflicts may arise due to concurrent execution and are permitted by the test.
";

// This concurrent event test does not support validation of event counters.
// This would not be possible in concurrent tx mode either as CommitConflict
// would prevent remote VMs from receiving updates.
INCLUDE $JTESTS/event/concEntryEvent.conf;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
   ";

util.RegionDefPrms-regionSpecs = "
   specName = VMRegion:
       regionName = EventRegion:
       scope = ack, noack : dataPolicy = replicate: 
       entryTTLSec = 0 20: 
       entryTTLAction = invalidate:
       entryIdleTimeoutSec = 0 20: 
       entryIdleTimeoutAction = invalidate:
       statisticsEnabled = true:
       cacheListeners = event.ETListener event.OperationListener:
   ";
util.RegionDefPrms-VMRegionSpecName = VMRegion;
util.TestHelperPrms-minTaskGranularitySec = 60;
event.EventPrms-useTransactions = true;
event.EventPrms-commitPercentage = 80;
event.EventPrms-useRandomLocks = ONEOF true false false false FOENO;
util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
