hydra.Prms-testDescription =
"This test is a concurrent test for disk Regions.  This uses only VM regions, 
since VM regions are the only regions that can be disk regions. Each run of 
this test uses 1) disk for overflow and 2) disk for overflow and persistence. 
It uses randomized settings for distribution, invalidates, and destroys.
DiskRegions with persistence require dataPolicy = replicate.  

Expiration attributes are null (NO EXPIRATION).  Overflow is done with the heap 
capacity controller.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = 2; // one VM for each disk region configuration
hydra.ClientPrms-vmThreads    = 10;

STARTTASK    taskClass   = diskReg.DiskRegBB taskMethod  = HydraTask_initialize;

INITTASK     taskClass   = diskReg.ConcDiskRegTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = diskReg.DiskRegTest taskMethod  = HydraTask_doEntryOperations;

ENDTASK      taskClass   = diskReg.DiskRegTest taskMethod  = HydraTask_endTask;

hydra.Prms-totalTaskTimeSec = 1800;  
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxResultWaitSec  =  900;
hydra.Prms-maxClientShutdownWaitSec = 600;
hydra.GemFirePrms-conserveSockets = true;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 50;
util.TestHelperPrms-printObjectDepth = 0;
util.TestHelperPrms-minTaskGranularitySec = 60;

util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 10000;
util.RandomValuesPrms-objectDepth = 0; 
util.ValueHolderPrms-useExtraObject = true;

hydra.ConfigPrms-cacheConfig = gemfireCache;
hydra.CachePrms-names = gemfireCache;
hydra.CachePrms-resourceManagerName = manager;

hydra.ResourceManagerPrms-names = manager;
hydra.ResourceManagerPrms-evictionHeapPercentage = oneof 10 20 50 80 foeno;

hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-scope = oneof ack noack global foeno;
hydra.RegionPrms-dataPolicy = oneof replicate persistentReplicate foeno;
hydra.RegionPrms-cacheListeners = diskReg.DiskRegListener;
hydra.RegionPrms-cacheLoader = diskReg.DiskRegLoader;
hydra.RegionPrms-evictionAttributes = lruHeapPercentage default overflowToDisk;
hydra.DiskStorePrms-diskDirNum = oneof 1 2 3 4 foeno;

hydra.RegionPrms-diskStoreName  = diskStore1;

hydra.DiskStorePrms-names = diskStore1;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.RegionPrms-diskSynchronous = oneof true false foeno;
hydra.DiskStorePrms-timeInterval = oneof 1000 2000 3000 4000 foeno;

hydra.VmPrms-extraVMArgs = -Xms150m -Xmx150m;

diskReg.DiskRegPrms-useComplexObject = ONEOF true false FOENO;
diskReg.DiskRegPrms-useCacheLoader = ONEOF true false FOENO;
diskReg.DiskRegPrms-entryOperations = ONEOF add add add add add add add add destroy invalidate read update putIfAbsent remove replace FOENO;

diskReg.DiskRegPrms-lowerThreshold = 10000;
diskReg.DiskRegPrms-upperThreshold = 30000;
diskReg.DiskRegPrms-lowerThresholdOperations = ONEOF add FOENO;
diskReg.DiskRegPrms-upperThresholdOperations = ONEOF remove FOENO;

