hydra.Prms-testDescription = 
"To test the multiple disk regions (Overflow and persist) in a single VM";
INCLUDE $JTESTS/mapregion/map.inc;

mapregion.MapPrms-objectType     		= objects.SizedString;
objects.SizedStringPrms-size = 20;

util.TestHelperPrms-minTaskGranularitySec = 60;

hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 900;

hydra.Prms-serialExecution = false;

INITTASK     	taskClass   = diskReg.oplogs.MultipleDiskRegions taskMethod  = HydraTask_initialize;

INITTASK  taskClass     = util.AdminHelper  taskMethod = HydraTask_initializeAdminDS;

TASK		taskClass	= diskReg.oplogs.MultipleDiskRegions  taskMethod	= HydraTask_performEntryOperations;

TASK		taskClass	= diskReg.oplogs.MultipleDiskRegions  taskMethod	= HydraTask_performRegionOperations
		startInterval 	= 30
		endInterval 	= 15		
		threadGroups 	= regionOperators
		;

CLOSETASK      taskClass   = diskReg.oplogs.MultipleDiskRegions taskMethod  = HydraTask_closetask;

THREADGROUP regionOperators
	totalThreads = 2
	totalVMs = 3 ;

mapregion.MapPrms-entryOperationName = ONEOF put putAll remove invalidate putIfAbsent cm_remove FOENO;

mapregion.MapPrms-regionOperationName = ONEOF clear regionInvalidate regionDestroy forceRolling writeToDisk FOENO;

mapregion.MapPrms-regionNames = testRegion1 testRegion2 testRegion3 testRegion4 testRegion5;

mapregion.MapPrms-regionForOps = ONEOF testRegion1 testRegion2 testRegion3 testRegion4 testRegion5 FOENO;

mapregion.MapPrms-lowerThreshold = 10000;

mapregion.MapPrms-upperThreshold = 50000;

mapregion.MapPrms-lowerThresholdOperations = ONEOF put putAll putIfAbsent FOENO;

mapregion.MapPrms-upperThresholdOperations = ONEOF remove cm_remove FOENO;

hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-scope = oneof ack noack global foeno;
hydra.RegionPrms-dataPolicy = persistentReplicate;
hydra.RegionPrms-evictionAttributes = lruEntryCount 1000 overflowToDisk;
hydra.DiskStorePrms-diskDirNum = oneof 1 2 3 4 foeno;


hydra.RegionPrms-diskStoreName  = diskPrms1;

hydra.DiskStorePrms-names = diskPrms1;
hydra.DiskStorePrms-queueSize = oneof 1 100 foeno;
hydra.DiskStorePrms-maxOplogSize = 2;
hydra.DiskStorePrms-autoCompact = oneof true false foeno;
hydra.RegionPrms-diskSynchronous = oneof true false foeno;
hydra.DiskStorePrms-timeInterval = oneof 1000 2000 3000 4000 5000 60000 300000 600000 foeno;

util.AdminHelperPrms-adminInDsVm = true;
