hydra.Prms-testDescription =
"This test validates the entry retrievals from disk regions. Extensive get, update is performed and verifies that correct values are getting retrieved from htree, oplog and buffer, wherever the entry is.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams1.inc;

hydra.CachePrms-names = gemfireCache;

hydra.ClientPrms-vmQuantities = 1; // one VM for each disk region configuration
hydra.ClientPrms-vmThreads    = 3;

INITTASK    	taskClass   	= diskReg.oplogs.DiskRegMiscTest 	taskMethod  	= HydraTask_initialize;

TASK		taskClass	= diskReg.oplogs.DiskRegMiscTest  	taskMethod	= HydraTask_PerformGetOperations;

CLOSETASK      taskClass   	= diskReg.oplogs.DiskRegMiscTest 	taskMethod  	= HydraTask_closeTask;


mapregion.MapPrms-populateCache =	true;
mapregion.MapPrms-objectType	=	objects.SizedString;
//use the default object size of 1kb.
mapregion.MapPrms-timeForPopulateCache	=	10000 ;
mapregion.MapPrms-maxPositiveKeys =     500000 ;

// cannot run too long (non-overflow regions cause OutOfMemory conditions)
hydra.Prms-totalTaskTimeSec = 600;  
hydra.Prms-serialExecution = true;

hydra.ConfigPrms-cacheConfig = gemfireCache;
hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-scope = local;
hydra.RegionPrms-dataPolicy = persistentReplicate;
hydra.DiskStorePrms-diskDirNum = 4;

hydra.RegionPrms-diskStoreName  = diskPrms1;

hydra.DiskStorePrms-names = diskPrms1;
hydra.DiskStorePrms-queueSize = 100;
hydra.DiskStorePrms-maxOplogSize = 2;
hydra.DiskStorePrms-autoCompact = false;
hydra.DiskStorePrms-allowForceCompaction = true;
hydra.DiskStorePrms-compactionThreshold = 100;
hydra.RegionPrms-diskSynchronous = false;
hydra.DiskStorePrms-timeInterval = 20000;
