hydra.Prms-testDescription =
"This test is a serial test for disk Regions.  Each run of this test uses following region configuration: disk for persistence. It uses randomized settings for distribution, invalidates, and destroys.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams2.inc;
INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = 2; // one VM for each disk region configuration
hydra.ClientPrms-vmThreads    = 2;

STARTTASK    taskClass   = diskReg.DiskRegBB taskMethod  = HydraTask_initialize;

INITTASK     taskClass   = diskReg.SerialDiskRegTest taskMethod  = HydraTask_initialize;

TASK         taskClass   = diskReg.SerialDiskRegTest taskMethod  = HydraTask_addNew;
TASK         taskClass   = diskReg.SerialDiskRegTest taskMethod  = HydraTask_getOld;

ENDTASK      taskClass   = diskReg.DiskRegTest taskMethod  = HydraTask_endTask;

// cannot run too long (non-overflow regions cause OutOfMemory conditions)
hydra.Prms-totalTaskTimeSec = 600;  
hydra.Prms-serialExecution = true;
hydra.Prms-alwaysDoEndTasks = true;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 50;
util.TestHelperPrms-printObjectDepth = 0;
util.TestHelperPrms-minTaskGranularitySec = 20;

//util.RandomValuesPrms-objectTypeNonShared = byte[];
util.RandomValuesPrms-elementSize = 10000;
util.RandomValuesPrms-objectDepth = 0; // don't fill byte[] 
util.ValueHolderPrms-useExtraObject = true;

hydra.ConfigPrms-cacheConfig = gemfireCache;
hydra.CachePrms-names = gemfireCache;

hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-scope = local;
hydra.RegionPrms-dataPolicy = persistentReplicate;
hydra.RegionPrms-cacheListeners = diskReg.DiskRegListener;
hydra.RegionPrms-cacheLoader = diskReg.DiskRegLoader;
hydra.DiskStorePrms-diskDirNum = oneof 1 2 3 4 foeno;

hydra.RegionPrms-diskStoreName  = diskPrms1;

hydra.DiskStorePrms-names = diskPrms1;
hydra.RegionPrms-diskSynchronous =${synch};
hydra.DiskStorePrms-queueSize = oneof 0 1 100 foeno;
hydra.DiskStorePrms-timeInterval = oneof 1000 2000 3000 4000 5000 60000 300000 600000 foeno;
hydra.DiskStorePrms-maxOplogSize = ${maxOplogSize};
hydra.DiskStorePrms-autoCompact = ${autoCompact};

diskReg.DiskRegPrms-useComplexObject = ONEOF true false FOENO;
diskReg.DiskRegPrms-useCacheLoader = ONEOF true false FOENO;
diskReg.DiskRegPrms-fixUseCacheLoader = true;

// for a workload based test, set this parameter
diskReg.DiskRegPrms-endTestOnNumKeysInRegion = 50000;
hydra.VmPrms-extraVMArgs=-Xmx750m;

