hydra.Prms-testDescription =
"The aim of this test is to verify disk region recovery. 
Entry operations (put, destroy, invalidate) are performed concurrently and vms are killed abruptly (MEAN_KILL). 
At the end, it is verified that region contains expected values.
Validations also include disk region statistics validations.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 900;

// Logging params
hydra.log.LogPrms-file_logging = true;

INITTASK    	taskClass   	= diskReg.oplogs.DiskRegRecoveryFromOplogsTest 	taskMethod  	= HydraTask_initialize
runMode = once ;

INITTASK    	taskClass   	= diskReg.oplogs.DiskRegRecoveryFromOplogsTest 	taskMethod  	= HydraTask_Reinitialize
runMode = dynamic ;

TASK		taskClass	= diskReg.oplogs.DiskRegRecoveryFromOplogsTest  taskMethod	= HydraTask_addEntries ;

// Only one thread will be running the HydraTask_crashVM at a time
TASK		taskClass	= diskReg.oplogs.DiskRegRecoveryFromOplogsTest  taskMethod	= HydraTask_crashVM
threadgroups = crasher
;

CLOSETASK      taskClass   = diskReg.oplogs.DiskRegRecoveryFromOplogsTest taskMethod  = HydraTask_closeTask ;

THREADGROUP crasher totalThreads = 1 totalVMs = 1 clientNames=client1;
hydra.CachePrms-names = gemfireCache;
hydra.ConfigPrms-cacheConfig = gemfireCache;
hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-scope = ack;
hydra.RegionPrms-dataPolicy = persistentReplicate;
hydra.RegionPrms-evictionAttributes = lruEntryCount 10000 overflowToDisk;
hydra.DiskStorePrms-diskDirNum = 4;

hydra.RegionPrms-diskStoreName  = diskPrms1;

hydra.DiskStorePrms-names = diskPrms1;
hydra.DiskStorePrms-maxOplogSize = 3;
hydra.DiskStorePrms-autoCompact = true;
hydra.RegionPrms-diskSynchronous = oneof true false foeno;
hydra.DiskStorePrms-queueSize = oneof 20 200 foeno; // each write is of size 512
hydra.DiskStorePrms-timeInterval = oneof 2000 3000 foeno;

mapregion.MapPrms-objectType		=	objects.ArrayOfByte;
objects.ArrayOfBytePrms-size		=	512;
mapregion.MapPrms-timeForPutOperation	= 	5000;
mapregion.MapPrms-numVMsToStop		= ${numVMsToStop};
mapregion.MapPrms-closeCacheDuringGii	= ${closeCacheDuringGii};
mapregion.MapPrms-populateCache	= true;

//Log-level prms are added and commented out intentionally to reproduce bug # 35178 with increased logging if required
//hydra.GemFirePrms-logLevel = finest;
//hydra.VmPrms-extraVMArgs   = "-DDistributionManager.VERBOSE=true";

// for a workload based test, set this parameter
diskReg.DiskRegPrms-endTestOnNumKeysInRegion = 25000;
hydra.VmPrms-extraVMArgs=-Xmx750m;
