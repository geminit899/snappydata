INCLUDE $JTESTS/parReg/query/queryRegionSpecsParReg1.inc;
INCLUDE $JTESTS/parReg/query/queryEntry.inc;

INITTASK     taskClass   = util.StopStartVMs taskMethod  = StopStart_initTask
	     runMode 	 = once;
	     
INITTASK     taskClass   = parReg.query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_initialize
	     runMode 	 = once;
	     
INITTASK     taskClass   = parReg.query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_populateRegion
	     runMode 	 = once;
	     
INITTASK     taskClass   = parReg.query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_createIndex	
	     runMode 	 = once;
	     
INITTASK     taskClass   = parReg.query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_reInitialize
	     runMode 	 = dynamic;
	     
TASK         taskClass   = parReg.query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_doStopStartVmAndQueryOperation
	     ;	
	

query.QueryPrms-entryAndQueryOperations = ONEOF add add add add add update destroy read FOENO; // weighted to adds

hydra.Prms-totalTaskTimeSec = 480;
hydra.Prms-maxResultWaitSec = 600;
query.QueryPrms-objectType = parReg.query.NewPortfolio;
query.QueryPrms-useRandomValues = false;
//query.QueryPrms-useRandomValues = true;
query.index.IndexPrms-numOfIndexes = 3;
query.QueryPrms-totalNumOfVmsToStop = 3;
util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT FOENO;
//hydra.PartitionPrms-redundantCopies = 1;

util.TestHelperPrms-minTaskGranularitySec = 0;

