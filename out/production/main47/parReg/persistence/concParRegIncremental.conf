hydra.Prms-testRequirement = "Test persistent partitioned regions with a variety of operations with careful validation and concurrent execution";

INCLUDE $JTESTS/parReg/concParReg.conf;

// prepare for end task recovery
INITTASK    taskClass   = parReg.ParRegTest  taskMethod = HydraTask_writeDiskDirsToBB
            runMode = once;

// each thread is also an admin vm so it can potentially call online backup
INITTASK     taskClass     = util.AdminHelper  taskMethod = HydraTask_initializeAdminDS;

// recover from disk and validate recovery
INCLUDE $JTESTS/parReg/persistence/peerEndTasks.inc;

ENDTASK     taskClass   = parReg.ParRegTest  taskMethod = HydraTask_disconnect; 
ENDTASK     taskClass   = parReg.ParRegTest  taskMethod = HydraTask_restoreBackups
                          parReg.ParRegPrms-recoverFromDisk = true;

parReg.ParRegPrms-secondsToRun = 300;
parReg.ParRegPrms-doIncrementalBackup = true;

hydra.RegionPrms-dataPolicy     = persistentPartition;
hydra.RegionPrms-diskStoreName   = diskStore1;
hydra.RegionPrms-diskSynchronous = oneof true false foeno;

hydra.DiskStorePrms-names = diskStore1;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;

hydra.DiskStorePrms-autoCompact=false;

util.AdminHelperPrms-adminInDsVm=true;

