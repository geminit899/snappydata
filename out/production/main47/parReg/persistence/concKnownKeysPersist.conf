hydra.Prms-testDescription = "
This test creates a persistent partitioned region, then does various entry operations on a known key
range. Values are checked for correctness in the close task.
";

INCLUDE $JTESTS/parReg/concKnownKeys.conf;

CLOSETASK     taskClass   = parReg.KnownKeysTest  taskMethod = HydraTask_disconnect;

// recover from disk
CLOSETASK     taskClass     = parReg.KnownKeysTest  taskMethod = HydraTask_initialize;

// run validation while async redundancy recovery is running
CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyRegionContents
             threadGroups = verifyThreads
             batch;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_waitForMyStartupRecovery;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyPrimaries
             threadGroups = verifyThreads;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyPRMetaData
             threadGroups = verifyThreads;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyBucketCopiesBatched
             threadGroups = verifyThreads
             batch;

// prepare for offline validation and compaction
CLOSETASK     taskClass   = parReg.KnownKeysTest  taskMethod = HydraTask_disconnect; 
CLOSETASK     taskClass   = util.PersistenceUtil  taskMethod = HydraTask_doOfflineValAndCompactionOnce
              threadGroups = verifyThreads;

// validate after compaction
CLOSETASK     taskClass   = parReg.KnownKeysTest  taskMethod = HydraTask_initialize;

// run validation while async redundancy recovery is running
CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyRegionContents
             threadGroups = verifyThreads
             batch;

CLOSETASK     taskClass   = parReg.KnownKeysTest  taskMethod = HydraTask_waitForMyStartupRecovery;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyPrimaries
             threadGroups = verifyThreads;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyPRMetaData
             threadGroups = verifyThreads;

CLOSETASK    taskClass     = parReg.KnownKeysTest  taskMethod  = HydraTask_verifyBucketCopiesBatched
             threadGroups = verifyThreads
             batch;

hydra.RegionPrms-dataPolicy     = persistentPartition;
hydra.RegionPrms-diskStoreName   = diskStore1;
hydra.RegionPrms-diskSynchronous = oneof true false foeno;

hydra.DiskStorePrms-names = diskStore1;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;


