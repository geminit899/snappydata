hydra.Prms-testDescription = "
Concurrently create and destroy partitioned regions in a bridge server configuration.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;

THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;

INITTASK  taskClass = parReg.ParRegCreateDestroy taskMethod = HydraTask_initializeBridgeServer
          threadGroups = bridgeThreads;

INITTASK  taskClass = parReg.ParRegCreateDestroy taskMethod = HydraTask_initialize
          threadGroups = edgeThreads;

TASK      taskClass = parReg.ParRegCreateDestroy taskMethod = HydraTask_createDestroy
          threadGroups = edgeThreads, bridgeThreads;

hydra.Prms-totalTaskTimeSec = 1200;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

// vary the granularity to ensure that some tasks are operating
// in the client vms while others are operating in the sever vms
util.TestHelperPrms-minTaskGranularitySec = ONEOF 10 20 30 FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = 
      clientRegion1 clientRegion2 clientRegion3 clientRegion4 clientRegion5 
      clientRegion6 clientRegion7 clientRegion8 clientRegion9 clientRegion10
      bridgeRegion11 bridgeRegion12 bridgeRegion13 bridgeRegion14 bridgeRegion15 
      bridgeRegion16 bridgeRegion17 bridgeRegion18 bridgeRegion19 bridgeRegion20;
hydra.RegionPrms-regionName     = 
      region1 region2 region3 region4 region5 region6 region7 region8 region9 region10
      region1 region2 region3 region4 region5 region6 region7 region8 region9 region10;
hydra.RegionPrms-scope          = 
      local local local local local local local local local local
      default default default default default
      default default default default default;
hydra.RegionPrms-poolName    = 
      edgeDescript edgeDescript edgeDescript edgeDescript edgeDescript 
      edgeDescript edgeDescript edgeDescript edgeDescript edgeDescript          
      none none none none none none none none none none;
hydra.RegionPrms-dataPolicy  = 
      default default default default default default default default default default
      partition partition partition partition partition partition partition partition partition partition;
hydra.RegionPrms-partitionName  = 
      none none none none none none none none none none
      pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10;

hydra.PartitionPrms-names           = pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10;

// define the edge clients
hydra.PoolPrms-names                       = edgeDescript;
hydra.PoolPrms-minConnections        = 2;
hydra.PoolPrms-subscriptionEnabled = true;
hydra.PoolPrms-threadLocalConnections         = true;
hydra.PoolPrms-readTimeout                 = 3600000; // hydra will hang first
hydra.PoolPrms-subscriptionRedundancy             = 3;

// define the bridge servers
hydra.BridgePrms-names                = bridge;


