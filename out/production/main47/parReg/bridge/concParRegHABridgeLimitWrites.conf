hydra.Prms-testRequirement = "Test high availability of partitioned regions with a variety of operations with validation and concurrent execution";
hydra.Prms-testDescription = "
With a variety of accessor and data host VMs, randomly kill ${numVMsToStop} VMs at
a time, then bring it back and verify the data.
";

INCLUDE $JTESTS/parReg/bridge/concParRegHABridge.conf;

parReg.ParRegPrms-designateOps = true;
parReg.ParRegPrms-accessorOperations = ONEOF add putAll add putAll add putAll 
                                             getNew getNew update get destroy 
                                             putIfAbsent remove 
                                             replaceNoInval replaceOldNoInval FOENO; 
parReg.ParRegPrms-dataStoreOperations = ONEOF get get get get getNew 
                                              removeAsNoop replaceAsNoop replaceOldAsNoop FOENO; 
parReg.ParRegPrms-upperThreshold = 500;
parReg.ParRegPrms-upperThresholdAccessorOperations = ONEOF destroy remove FOENO;
parReg.ParRegPrms-upperThresholdDataStoreOperations = get;
parReg.ParRegPrms-lowerThreshold = 0;
parReg.ParRegPrms-lowerThresholdAccessorOperations = ONEOF add putAll putIfAbsentAsCreate FOENO;
parReg.ParRegPrms-lowerThresholdDataStoreOperations = ONEOF get removeAsNoop replaceAsNoop replaceOldAsNoop FOENO;

parReg.ParRegPrms-entryOperations = notUsed;
parReg.ParRegPrms-lowerThresholdOperations = notUsed;
parReg.ParRegPrms-upperThresholdOperations = notUsed;

hydra.RegionPrms-cacheLoader    = none; // don't cause a write with a loader

parReg.ParRegPrms-bridgeOrderingWorkaround = ${bridgeOrderingWorkaround};

