INCLUDE $JTESTS/parReg/colocation/prColocationWithListener.conf;

// April 2013: remove disk recovery and subsequent validation to avoid bug 44116.
// The PartitionManager solution to colocating regions does not work with disk recovery
// and since using PartitionManager to colocate PRs is a special use case for a particular
// customer, we have decided not to fix 44116.
// Initially, regions are all created empty, then a PartitionListener is installed in
// only one member. When afterPrimary is invoked in that one member, it iterates through the
// other empty PRs, calling PartitionManager to create the same bucketID in those other PRs
// causing the PRs to be colocated. 
// With disk recovery, we cannot have all the PRs first created empty, and by the time
// recovery returns, all the buckets are populated and no longer colocated, thus this special
// feature cannot work with disk recovery.
//CLOSETASK     taskClass     = parReg.colocation.ParRegColocation  taskMethod = HydraTask_disconnect
//              threadGroups = verifyThreads;
//CLOSETASK     taskClass     = parReg.colocation.ParRegColocation  taskMethod = HydraTask_initialize
//			threadGroups = verifyThreads;
//CLOSETASK    taskClass     = parReg.ParRegUtil                   taskMethod  = HydraTask_waitForRecovery
//             threadGroups = verifyThreads;
//CLOSETASK    taskClass     = parReg.colocation.ParRegColocation  taskMethod  = HydraTask_verifyPrimaries
//             threadGroups = verifyThreads;
//
//CLOSETASK    taskClass     = parReg.colocation.ParRegColocation  taskMethod  = HydraTask_verifyPRMetaData
//             threadGroups = verifyThreads; 
//
//CLOSETASK    taskClass     = parReg.colocation.ParRegColocation  taskMethod  = HydraTask_verifyPrimaryColocation
//             threadGroups = verifyThreads;
//
//CLOSETASK    taskClass     = parReg.colocation.ParRegColocation  taskMethod  = HydraTask_verifyRegionContents
//             threadGroups = verifyThreads
//             ;
//
//CLOSETASK    taskClass     = parReg.colocation.ParRegColocation  taskMethod  = HydraTask_verifyBucketCopies
//             threadGroups = verifyThreads
//             ;
             

hydra.RegionPrms-dataPolicy     = persistentPartition;
hydra.RegionPrms-diskStoreName = disk;
hydra.RegionPrms-diskSynchronous = ONEOF true false FOENO;

hydra.DiskStorePrms-names = disk;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;


