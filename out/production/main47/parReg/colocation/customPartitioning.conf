hydra.Prms-testDescription = "
This test is for the custom partitioning.
Fill a partitioned region to verify it honors local max memory property.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams1.inc;

hydra.ClientPrms-vmQuantities = 9;
hydra.ClientPrms-vmThreads    = 1;

THREADGROUP putThread totalThreads = 1;
THREADGROUP dataStoreThreads totalThreads = 8;

// this test is workload based, but if we haven't met the workload in 30 minutes
// exit anyway; the close task will fail if we haven't met the workload
hydra.Prms-totalTaskTimeSec = 200;
hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-serialExecution = false;

parReg.ParRegPrms-partitionResolverData = ${routingFunction};

hydra.Prms-useFixedRandomInMaster = true;

util.ValueHolderPrms-useExtraObject = true;
INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 50000; 
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.CacheDefPrms-cacheSpecs = "
   specName = cache1:
      searchTimeout = 600:
   ";
 
//LOCAL_MAX_MEMORY is set in HydraTask_initialize
util.RegionDefPrms-regionSpecs = "
   specName = region1:
       regionName = partitionedRegion:
       cacheLoader = parReg.ParRegLoader:
       partitionedRegion = true:
       parReg_redundantCopies = ${redundantCopies}:
   ";
   
util.RegionDefPrms-VMRegionSpecName = region1;

util.TestHelperPrms-minTaskGranularitySec = 60;

util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;
admin.AdminPrms-adminInterface = ADMIN;
admin.AdminPrms-adminInDsVm = true;

INITTASK taskClass = parReg.FillTest taskMethod = HydraTask_initializeDataStore
         threadGroups = dataStoreThreads;
         
INITTASK taskClass = parReg.FillTest taskMethod = HydraTask_initializeAccessor
         threadGroups = putThread;
         
INITTASK taskClass = admin.AdminTest taskMethod = initializeTask
         threadGroups = dataStoreThreads, putThread;
         
INITTASK taskClass = admin.AdminTest taskMethod = waitForSystemMembersTask
         threadGroups = dataStoreThreads, putThread;
          
INITTASK taskClass = parReg.FillTest taskMethod = HydraTask_addAlertListener
         threadGroups = dataStoreThreads, putThread; 

TASK     taskClass   = parReg.FillTest  taskMethod = HydraTask_addToRegionWithPartitionResolver
         threadGroups = putThread;
         
TASK     taskClass   = parReg.FillTest  taskMethod = HydraTask_monitorAlerts
         threadGroups = dataStoreThreads;

CLOSETASK taskClass   = parReg.ParRegTest  taskMethod = HydraTask_logLocalSize
          threadGroups = dataStoreThreads;

CLOSETASK taskClass   = parReg.FillTest  taskMethod = dumpBuckets
          threadGroups = dataStoreThreads;

CLOSETASK taskClass   = parReg.FillTest  taskMethod = HydraTask_verifyCustomPartitioning
          threadGroups = dataStoreThreads;
          
CLOSETASK taskClass   = parReg.FillTest  taskMethod = HydraTask_verifyPR
          threadGroups = dataStoreThreads;          

hydra.GemFirePrms-stopSystemsAfterTest = true;

