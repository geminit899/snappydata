hydra.Prms-testDescription = "
This test is for verifying the node pruning during function Execution.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

THREADGROUP controllerThread totalThreads = 1 totalVMs = 1;
		  
INITTASK  taskClass = parReg.execute.ExceptionHandlingTest taskMethod = HydraTask_initialize
		  runMode=always
		  SEQUENTIAL;
		  		  
INITTASK  taskClass = parReg.execute.ExceptionHandlingTest taskMethod = HydraTask_populateRegion
          runMode=always
		  ;
		  
TASK  taskClass = parReg.execute.ExceptionHandlingTest taskMethod = HydraTask_doFunctionExecutions;

TASK  taskClass = parReg.execute.ExceptionHandlingTest taskMethod = HydraTask_stopStartVms
      threadGroups = controllerThread
      maxTimesToRun = 5;
            		  		    		  



hydra.Prms-totalTaskTimeSec = 200;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = partitionedRegion  replicatedRegion;
hydra.RegionPrms-regionName     = partitionedRegion  replicatedRegion;
hydra.RegionPrms-dataPolicy     = partition	   replicate;
hydra.RegionPrms-partitionName  = pr none;
								  

hydra.PartitionPrms-names       = pr;
hydra.PartitionPrms-redundantCopies =1;
hydra.PartitionPrms-totalNumBuckets =20;

hydra.Prms-maxResultWaitSec = 300;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 50000;

parReg.ParRegPrms-numVMsToStop = 1 ;
parReg.ParRegPrms-stopModes = ONEOF MEAN_EXIT MEAN_KILL NICE_EXIT FOENO;
