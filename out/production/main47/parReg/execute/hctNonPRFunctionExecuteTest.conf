INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;

THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;
                 
STARTTASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_StartTask
			clientNames =edge1
		  ;                 

INITTASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_initializeServerWithDifferentDP
		  runMode=always
		  threadGroups = bridgeThreads
		  SEQUENTIAL
		  ;
		  
INITTASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_initializeClient
		  runMode=always
		  threadGroups = edgeThreads
		  ;		  

INITTASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_populateRegion
          threadGroups = edgeThreads
		  runMode=always;
		  
INITTASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_registerFunction
          threadGroups = edgeThreads, bridgeThreads
		  runMode=always;
		  
TASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_clientsExecuteFunction
          threadGroups = edgeThreads;
          
CLOSETASK  taskClass = parReg.execute.NonPRFunctionExecuteTest taskMethod = HydraTask_clientReExecuteFunction
          threadGroups = edgeThreads;          
      
      
hydra.Prms-totalTaskTimeSec = 200;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = bridge1	bridge2	 bridge3  bridge4 edge;
hydra.RegionPrms-regionName     = region;
hydra.RegionPrms-dataPolicy     = replicate empty    empty    empty    default;
hydra.RegionPrms-scope          = default   default  default  default  local;
hydra.RegionPrms-poolName       = none      none     none     none     edgeDescript;
								  

// define the bridge servers
hydra.BridgePrms-names                = bridge;


// define the edge clients
hydra.PoolPrms-names                       = edgeDescript;
hydra.PoolPrms-minConnections        	   = 2;
hydra.PoolPrms-subscriptionEnabled		   = true;
hydra.PoolPrms-threadLocalConnections      = true;
hydra.PoolPrms-readTimeout                 = 3600000; // hydra will hang first
hydra.PoolPrms-subscriptionRedundancy      = 3;
hydra.PoolPrms-retryAttempts               = 0;

hydra.Prms-maxResultWaitSec = 600;

hydra.VmPrms-extraVMArgs = "-Xmx1000m";    
