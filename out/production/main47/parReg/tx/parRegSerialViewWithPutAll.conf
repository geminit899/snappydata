hydra.Prms-testRequirement = "Verify view of tx and non-tx threads.  Verify that cacheListeners, cacheWriters and TransactionListeners are invoked as expected";
hydra.Prms-testDescription = "In this serial round-robin test, one thread starts a transaction and does multiple operations on colocated entries in partitionedRegions.  The test verifies that the cacheWriter is verified inline with the operations.  In addition, each VM verifies it's view of the data for the affected entries with the txThread verifying it sees the TxState and the other threads verifying that those changes are not visible until commit time.  Cache and TxListeners are also invoked and the contents of those events validated.";

include $JTESTS/parReg/tx/parRegSerialView.conf;

// with PutAll, we cannot verify event ordering in the TxOps
tx.TxPrms-checkTxEventOrder = false;

// with PutAll, we cannot verify event counts (multiple updates to same entry appear as 
// multiple entries in OpList yet are a single entry in the putAll Map)
tx.TxPrms-checkEventCounters = false;

// todo@lhughes -- add more ops as implemented in pr tx for product
tx.TxPrms-operations = 
          entry-create entry-update entry-destroy entry-inval
          entry-create entry-update entry-destroy entry-inval
          entry-create entry-update entry-destroy entry-inval
          entry-create entry-update entry-destroy entry-inval
          putAll putAll 
          entry-getWithNewKey entry-getWithExistingKey 
          ;

parReg.ParRegPrms-numPutAllNewKeys = 1;
parReg.ParRegPrms-numPutAllExistingKeys = RANGE 1 100 EGNAR;
