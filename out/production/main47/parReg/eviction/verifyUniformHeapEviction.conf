hydra.Prms-testDescription = "
This test is for verifying that heap eviction evicts uniformly across the buckets if the buckets are evenly populated.
This test uniformly populates the bucket with same number of entries. But, the population of buckets is done sequentially.
All entries of bucket 0 is populated prior to populating any entry in bucket 1 and so on till the last bucket.
This test expects that when the eviction gets triggered, it will keep evicting uniformly across the buckets. Hence ideally
no bucket will evict too much or too less. (However test takes care of tolerance considering that the thread sorter interval
can affect very few buckets to get affected)
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK  taskClass = parReg.eviction.EvictionBehaviorTest taskMethod = HydraTask_initialize
		  runMode=always;

INITTASK  taskClass = parReg.eviction.EvictionBehaviorTest taskMethod = HydraTask_populateSequentiallyAndEvenly
		  runMode=always;

INITTASK  taskClass = parReg.eviction.EvictionBehaviorTest taskMethod = HydraTask_logRegionSize;	
		  
INITTASK  taskClass = parReg.eviction.EvictionBehaviorTest taskMethod = HydraTask_printBucketAndDiskEntries;

CLOSETASK  taskClass = parReg.eviction.EvictionBehaviorTest taskMethod = HydraTask_verifyUniformBucketEviction;		  	  
		  


hydra.Prms-totalTaskTimeSec = 360;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-resourceManagerName = manager;

hydra.ResourceManagerPrms-names = manager;
hydra.ResourceManagerPrms-evictionHeapPercentage = 75;
hydra.ResourceManagerPrms-criticalHeapPercentage = 99;


hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = clientRegion;
hydra.RegionPrms-regionName     = clientRegion;
hydra.RegionPrms-dataPolicy     = partition;

hydra.RegionPrms-partitionName  = pr;
								  								  
hydra.RegionPrms-evictionAttributes	= lruHeapPercentage default overflowToDisk;

hydra.RegionPrms-diskSynchronous = true;

hydra.DiskStorePrms-queueSize = 5;
hydra.DiskStorePrms-maxOplogSize = 10240;
hydra.DiskStorePrms-autoCompact = true;

parReg.eviction.EvictionPrms-maxEntries = 2712;	
parReg.eviction.EvictionPrms-pauseAfterEvictionThreshold = false;					  

hydra.PartitionPrms-names       = pr;								
hydra.PartitionPrms-localMaxMemory	= default;								
hydra.PartitionPrms-redundantCopies = 0;
hydra.PartitionPrms-totalNumBuckets = 64;

hydra.Prms-maxResultWaitSec = 600;

hydra.VmPrms-extraVMArgs = "-Xms2048m -Xmx2048m";

hydra.VmPrms-extraVMArgsSUN += "-Dgemfire.HeapLRUCapacityController.higherEntryCountBucketCalculationInterval=10";

hydra.VmPrms-extraVMArgsSUN += "-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=60 -Dgemfire.memoryEventTolerance=0";

hydra.VmPrms-extraVMArgsJRockit += -Xgc:gencon;
hydra.VmPrms-extraVMArgsJRockit += -XXgcTrigger90;
hydra.VmPrms-extraVMArgsIBM += "-Xgcpolicy:gencon -verbose:sizes";


