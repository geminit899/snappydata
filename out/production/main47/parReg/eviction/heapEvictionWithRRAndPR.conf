hydra.Prms-testDescription = "
PR and replicated region in the same VM. Replicated region uses async disk writers with a large byte buffer count. This
test is tuned to go OOME in a short time in case of no eviction.
Verify that heap based eviction happens correctly.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

THREADGROUP verifyThreads totalThreads = fcn "${peerVMsPerHost} * ${peerHosts}" ncf
                          totalVMs = fcn "${peerVMsPerHost} * ${peerHosts}" ncf;

INITTASK  taskClass = parReg.eviction.ParRegHeapEvictionTest taskMethod = HydraTask_initialize
          threadGroups = verifyThreads
		  runMode=always;

INITTASK  taskClass = parReg.eviction.ParRegHeapEvictionTest taskMethod = HydraTask_updateBB
          threadGroups = verifyThreads;		  
		  
INITTASK  taskClass = parReg.eviction.ParRegHeapEvictionTest taskMethod = HydraTask_createRegions
          threadGroups = verifyThreads
		  runMode=always;
		  
TASK  taskClass = parReg.eviction.ParRegHeapEvictionTest taskMethod = HydraTask_populateRegions
      threadGroups = default
      endInterval = 60 ;
      
TASK  taskClass = parReg.eviction.ParRegHeapEvictionTest taskMethod = HydraTask_verifyEvictionBehavior
      threadGroups = verifyThreads;      		  

hydra.Prms-totalTaskTimeSec = 900;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-resourceManagerName = manager;

hydra.ResourceManagerPrms-names = manager;
hydra.ResourceManagerPrms-evictionHeapPercentage = 50;
hydra.ResourceManagerPrms-criticalHeapPercentage = 99;


hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = replicatedRegion partitionedRegion;
hydra.RegionPrms-regionName     = replicatedRegion partitionedRegion;
hydra.RegionPrms-dataPolicy     = replicate partition;
hydra.RegionPrms-partitionName  = none      pr;								  
hydra.RegionPrms-evictionAttributes	= lruHeapPercentage default overflowToDisk;
hydra.RegionPrms-diskStoreName  = asynchWrite synchWrite;
hydra.RegionPrms-diskSynchronous = false       true;

hydra.DiskStorePrms-names       = asynchWrite synchWrite;
hydra.DiskStorePrms-maxOplogSize= 512	10240;
hydra.DiskStorePrms-queueSize = 5  default;

hydra.PartitionPrms-names       = pr;									
hydra.PartitionPrms-localMaxMemory	= default;								
hydra.PartitionPrms-redundantCopies = 	 ${redundantCopies} ;

hydra.Prms-maxResultWaitSec = 1200;
hydra.VmPrms-extraVMArgs = "-Xms1000m -Xmx1000m ";

hydra.VmPrms-extraVMArgsSUN += "-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=10";

hydra.VmPrms-extraVMArgsJRockit += -Xgc:gencon;
hydra.VmPrms-extraVMArgsJRockit += -XXgcTrigger90;

hydra.VmPrms-extraVMArgsIBM += "-Xgcpolicy:gencon -verbose:sizes";

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = ONEOF 10000 20000 30000 40000 50000 60000 70000 80000 90000 100000 FOENO;
util.ValueHolderPrms-useExtraObject = true;
