hydra.Prms-testDescription = "
In this test, there are 2 PRs with same eviction threshold. Both PRs are populated sequentially in
their respective buckets until the eviction threshold is reached. Then only one PR bucket is populated
to trigger the eviction, with delay between puts.

The test verifies that both the PRs did evict and both of them evicted their buckets in proportion
to the bucket sizes.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_initialize
		  runMode=always;

INITTASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_putUnEvenlyTillThreshold
		  runMode=always;		  		  
		  
INITTASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_putExtraKeysWithSleep;	  
		  
INITTASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_logRegionSize;	
		  
INITTASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_printBucketAndDiskEntries;

CLOSETASK  taskClass = parReg.eviction.MultiPRHeapEvictionBehaviorTest taskMethod = HydraTask_verifyProportionateEviction;		  	  
		  


hydra.Prms-totalTaskTimeSec = 360;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-resourceManagerName = manager;

hydra.ResourceManagerPrms-names = manager;
hydra.ResourceManagerPrms-evictionHeapPercentage = 60;
hydra.ResourceManagerPrms-criticalHeapPercentage = 80;


hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = regionA       regionB;
hydra.RegionPrms-regionName     = clientRegionA clientRegionB;
hydra.RegionPrms-dataPolicy     = partition;

hydra.RegionPrms-partitionName  = pr;
								  								  
hydra.RegionPrms-evictionAttributes	= lruHeapPercentage default overflowToDisk;
hydra.RegionPrms-diskSynchronous = true;

hydra.DiskStorePrms-queueSize = 5;
hydra.DiskStorePrms-maxOplogSize = 10240;
hydra.DiskStorePrms-autoCompact = true;

//hydra.RegionPrms-diskStoreName  = disk;
//hydra.DiskStorePrms-names       = disk;
//hydra.DiskStorePrms-synchronous = true; 
//hydra.DiskStorePrms-bytesThreshold = 512;
//hydra.DiskStorePrms-rollOplogs = true;
	

parReg.eviction.EvictionPrms-maxEntries = 1356;	
parReg.eviction.EvictionPrms-pauseAfterEvictionThreshold = true;					  

hydra.PartitionPrms-names       = pr;								
hydra.PartitionPrms-localMaxMemory	= default; 	
hydra.PartitionPrms-redundantCopies = 0;
hydra.PartitionPrms-totalNumBuckets = 20;

hydra.Prms-maxResultWaitSec = 1200;

hydra.VmPrms-extraVMArgs = "-Xms2048m -Xmx2048m";

hydra.VmPrms-extraVMArgsSUN += "-Dgemfire.HeapLRUCapacityController.inlineEvictionThreshold=1 -Dgemfire.HeapLRUCapacityController.higherEntryCountBucketCalculationInterval=10";

hydra.VmPrms-extraVMArgsSUN += "-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=45 -Dgemfire.memoryEventTolerance=0";

hydra.VmPrms-extraVMArgsJRockit += -Xgc:gencon;
hydra.VmPrms-extraVMArgsJRockit += -XXgcTrigger90;
hydra.VmPrms-extraVMArgsIBM += "-Xgcpolicy:gencon -verbose:sizes";

