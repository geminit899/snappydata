hydra.Prms-testRequirement = "
Test to verify the expiration actions and listener events of TTL and idleTimeout 
expirations on VM Partitioned Regions.
";

hydra.Prms-testDescription = "
This test is for testing the entry expiration action - destroy and invalidate
for the PR region.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparamsN.inc;

hydra.ClientPrms-vmQuantities = 1;
hydra.ClientPrms-vmThreads    = 8;

THREADGROUP controlTTLDestroyThread            totalThreads = 1 clientNames = client1; 
THREADGROUP controlIdleTODestroyThread         totalThreads = 1 clientNames = client1; 
THREADGROUP controlTTLInvalThread              totalThreads = 1 clientNames = client1;
THREADGROUP controlIdleTOInvalThread           totalThreads = 1 clientNames = client1;
THREADGROUP customTTLDestroyThread             totalThreads = 1 clientNames = client1; 
THREADGROUP customIdleTODestroyThread          totalThreads = 1 clientNames = client1; 
THREADGROUP customTTLInvalThread               totalThreads = 1 clientNames = client1;
THREADGROUP customIdleTOInvalThread            totalThreads = 1 clientNames = client1; 
 

STARTTASK    taskClass   = parReg.eviction.ParRegExpirationTest taskMethod  = StartTask_initialize;

INITTASK     taskClass   = parReg.eviction.ParRegExpirationTest taskMethod  = HydraTask_initializeControlThread
			threadGroups = controlTTLDestroyThread, controlIdleTODestroyThread, controlTTLInvalThread, controlIdleTOInvalThread,
			customTTLDestroyThread,  customIdleTODestroyThread, customTTLInvalThread, customIdleTOInvalThread,
			default 
			runMode = always;
			

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_controlEntryTTLDestroy
                threadGroups = controlTTLDestroyThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_controlEntryTTLInval
                threadGroups = controlTTLInvalThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_controlEntryIdleTODestroy
                threadGroups = controlIdleTODestroyThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_controlEntryIdleTOInval
                threadGroups = controlIdleTOInvalThread;
                
TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_customEntryTTLDestroy
                threadGroups = customTTLDestroyThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_customEntryTTLInval
                threadGroups = customTTLInvalThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_customEntryIdleTODestroy
                threadGroups = customIdleTODestroyThread;

TASK         taskClass   = parReg.eviction.ParRegExpirationTest 
                taskMethod  = HydraTask_customEntryIdleTOInval
                threadGroups = customIdleTOInvalThread;  
                
TASK       taskClass   = parReg.eviction.ParRegExpirationTest taskMethod  = killClient
 	    	startInterval = 10
 	    	threadGroups = default
            maxTimesToRun = 1;        
                                 
RANDOMINCLUDE $JTESTS/memscale/configs/enableOffHeap.conf;
INCLUDE $JTESTS/memscale/configs/verifyOffHeap.conf;


hydra.RegionPrms-names          =  TTLDestroy		TTLInval  	IdleTODestroy	 IdleTOInval	CustomTTLDestroy		CustomTTLInval  	CustomIdleTODestroy	 CustomIdleTOInval;
hydra.RegionPrms-regionName     =  TTLDestroy		TTLInval  	IdleTODestroy	 IdleTOInval	CustomTTLDestroy		CustomTTLInval  	CustomIdleTODestroy	 CustomIdleTOInval;
hydra.RegionPrms-cacheListeners =  parReg.eviction.ParRegTTLDestroyListener  , parReg.eviction.ParRegTTLInvalListener ,
								   parReg.eviction.ParRegIdleTODestroyListener	, parReg.eviction.ParRegIdleTOInvalListener,
								   parReg.eviction.ParRegCustomTTLDestroyListener  , parReg.eviction.ParRegCustomTTLInvalListener ,
								   parReg.eviction.ParRegCustomIdleTODestroyListener	, parReg.eviction.ParRegCustomIdleTOInvalListener;
								   
hydra.RegionPrms-statisticsEnabled       =	true;
hydra.RegionPrms-customEntryIdleTimeout  = none		none	none	none	none	none	parReg.eviction.ParRegCustomExpiry	parReg.eviction.ParRegCustomExpiry;
hydra.RegionPrms-customEntryTimeToLive  = none		none	none	none	parReg.eviction.ParRegCustomExpiry	parReg.eviction.ParRegCustomExpiry		none	none;	
hydra.RegionPrms-entryTimeToLive =  420 destroy, 420 invalidate, 	none,	 none, none,	 none, 	none,	 none;
hydra.RegionPrms-entryIdleTimeout = none,	 none, 420 destroy, 420 invalidate, none,	 none, none,	 none;

hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-partitionName  = pr;


hydra.PartitionPrms-names       	= pr;
hydra.PartitionPrms-redundantCopies = 3;

hydra.Prms-serialExecution = false;


hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;
util.TestHelperPrms-minTaskGranularitySec = 30;
hydra.Prms-totalTaskTimeSec = 30;
hydra.Prms-maxResultWaitSec = 1200;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

