hydra.Prms-testDescription = "
This test is for testing PR eviciton with single PR, default number of buckets.
The test populates the PR with heavy objects and expects the test to run long 
time without OOME . In this test, the eviciton action is local destroy. 
Test is run with different redundantcopies.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK  taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_initialize
		  runMode=always;

INITTASK  taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_createRegions
		  runMode=always;
		  
TASK  taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_populateRegions;		  

CLOSETASK      taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_dumpBuckets;

CLOSETASK      taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_verifyPR;

CLOSETASK      taskClass = parReg.ColocationAndEvictionTest taskMethod = HydraTask_verifyEvictionLocalDestroy;

hydra.Prms-totalTaskTimeSec = 360;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-resourceManagerName = manager;

hydra.ResourceManagerPrms-names = manager;
hydra.ResourceManagerPrms-evictionHeapPercentage = 70;
hydra.ResourceManagerPrms-criticalHeapPercentage = 99;


hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = region1 aRegion1 ;

hydra.RegionPrms-regionName     = clientRegion1	clientRegion1;

hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-partitionName  = pr1 pr11;
								  								  
hydra.RegionPrms-evictionAttributes	= lruHeapPercentage default default;
parReg.ParRegPrms-isEvictionTest = true;
								  

hydra.PartitionPrms-names       = pr1 pr11;								
hydra.PartitionPrms-localMaxMemory	= default	0	;								
hydra.PartitionPrms-redundantCopies = 	 ${redundantCopies} ;

hydra.Prms-maxResultWaitSec = 600;

hydra.VmPrms-extraVMArgs = "-Xms1000m -Xmx1000m";
parReg.ParRegPrms-numberOfAccessors=${numOfAccessors};

hydra.VmPrms-extraVMArgsSUN += "-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=10 -Dgemfire.memoryEventTolerance=0";

hydra.VmPrms-extraVMArgsJRockit += -Xgc:gencon;
hydra.VmPrms-extraVMArgsJRockit += -XXgcTrigger90;

hydra.VmPrms-extraVMArgsIBM += "-Xgcpolicy:gencon -verbose:sizes";

//hydra.VmPrms-extraVMArgsJRockit +=-XgcReport;

//percentage to the gctrigger is based on evictionHeapPercentage and criticalPercentage and is calculated as
//percentage=100 - (evictionHeapPercentage - ((criticalPercentage - evictionPercentage)/2)), assuming criticalPercentage != 0
//The percentage needs to be changed, if there are any changes done to evictionHeapPercentage or criticalHeapPercentage.

