include $JTESTS/newWan/serial/filters/hctEventTransportFilterHA.conf;

hydra.Prms-testDescription += " Use colocated persistence regions.";

hydra.RegionPrms-names			= bridgeRegion1 bridgeRegion2 bridgeRegion3 clientRegion1 clientRegion2 clientRegion3;
hydra.RegionPrms-regionName		= bridgeRegion1 bridgeRegion2 bridgeRegion3 bridgeRegion1 bridgeRegion2 bridgeRegion3;
hydra.RegionPrms-dataPolicy     = persistentPartition     persistentPartition     persistentPartition     default       default       default;
hydra.RegionPrms-scope          = default       default       default       local         local         local;
hydra.RegionPrms-poolName		= none        	none          none          brloader      brloader      brloader;
hydra.RegionPrms-partitionName  = pr1           pr2           pr3           none          none          none;
hydra.RegionPrms-diskStoreName  = diskStore1    diskStore1    diskStore1    none          none          none;
hydra.RegionPrms-diskSynchronous = true;
hydra.PartitionPrms-names       = pr1 pr2 pr3;
hydra.PartitionPrms-colocatedWith = none bridgeRegion1 bridgeRegion2;
hydra.PartitionPrms-redundantCopies = 	 ${redundantCopies} ;

hydra.GatewaySenderPrms-persistenceEnabled = false;
hydra.GatewaySenderPrms-diskStoreName = disk;

hydra.DiskStorePrms-names 			= disk diskStore1;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;

util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;
newWan.serial.filters.WanFilterTestPrms-numKeysPerTask = 10;  //reduce it as number of regions increase because of colocation

ENDTASK     taskClass   = util.PersistenceUtil  taskMethod = HydraTask_doOfflineValAndCompactionOnce; 