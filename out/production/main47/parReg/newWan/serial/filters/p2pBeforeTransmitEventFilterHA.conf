include $JTESTS/newWan/serial/filters/p2pBeforeTransmitEventFilterHA.conf;

hydra.Prms-testDescription += " Use colocated persistence regions.";

hydra.RegionPrms-names			= peerRegion1 peerRegion2 peerRegion3;
hydra.RegionPrms-regionName		= peerRegion1 peerRegion2 peerRegion3;
hydra.RegionPrms-dataPolicy     = persistentPartition;
hydra.RegionPrms-diskStoreName   	= diskStore1;
hydra.RegionPrms-diskSynchronous 	= true;
hydra.RegionPrms-scope          = default;
hydra.RegionPrms-partitionName  = pr1 pr2 pr3;
hydra.PartitionPrms-names       = pr1 pr2 pr3;
hydra.PartitionPrms-colocatedWith = none peerRegion1 peerRegion2;
hydra.PartitionPrms-redundantCopies = 	 ${redundantCopies} ;


hydra.GatewaySenderPrms-persistenceEnabled = false;
hydra.GatewaySenderPrms-diskStoreName = disk;

hydra.DiskStorePrms-names 			= disk diskStore1;
hydra.DiskStorePrms-queueSize = ONEOF 1 5 10 20 FOENO;
hydra.DiskStorePrms-timeInterval = oneof 1 10 50 500 1000 2000 foeno;

util.StopStartPrms-numVMsToStop = RANGE 1 ${redundantCopies} EGNAR;
newWan.serial.filters.WanFilterTestPrms-numKeysPerTask = 10;  //reduce it as number of regions increase because of colocation

ENDTASK     taskClass   = util.PersistenceUtil  taskMethod = HydraTask_doOfflineValAndCompactionOnce;      