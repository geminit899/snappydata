INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_2.inc;

THREADGROUP singleAccessorThread totalThreads = 1
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
    ncf;
THREADGROUP accessorThreads
    totalThreads = fcn
                   (${${A}Hosts} * ${${A}VMsPerHost} * ${${A}ThreadsPerVM}) - 1
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP part1DataStoreThreads
    totalThreads = fcn
                   (${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}) / 2
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", (${${B}Hosts} / 2), true)"
                   ncf;
// default threads are part2 of the dataStoreThreads

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_initialize
             threadGroups = part1DataStoreThreads;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_initialize
             parReg.ParRegPrms-createAccessor=true
             threadGroups = accessorThreads, singleAccessorThread;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_load
             threadGroups = part1DataStoreThreads,accessorThreads,singleAccessorThread;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_verifyPrimaryColocation
             threadGroups = part1DataStoreThreads;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_writeSnapshot
             threadGroups = singleAccessorThread;

// now initialize the remaining dataStore jvms; this will cause rebalance to have work to do
INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_initialize
             threadGroups = default;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_verifyPrimaryColocation
             threadGroups = part1DataStoreThreads;

// this will only call rebalance in one jvm even if the task is run in multiple threads; first one there wins!
INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_rebalance
             threadGroups = part1DataStoreThreads,default;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_verifyPrimaryColocation
             threadGroups = part1DataStoreThreads, default;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_verifyPRs
             threadGroups = part1DataStoreThreads,default;

INITTASK     taskClass   = parReg.partitionMan.PartitionManTest  taskMethod = HydraTask_verifyFromSnapshot
             threadGroups = part1DataStoreThreads,default;

hydra.Prms-maxResultWaitSec = 1800;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = accessor1  accessor2  accessor3  accessor4  accessor5  accessor6  accessor7  accessor8  accessor9  accessor10
                                  accessor11 accessor12 accessor13 accessor14 accessor15 accessor16 accessor17 accessor18 accessor19 accessor20
                                  dataStore1  dataStore2  dataStore3  dataStore4  dataStore5  dataStore6  dataStore7  dataStore8  dataStore9  dataStore10
                                  dataStore11 dataStore12 dataStore13 dataStore14 dataStore15 dataStore16 dataStore17 dataStore18 dataStore19 dataStore20;
hydra.RegionPrms-regionName     = pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10 pr11 pr12 pr13 pr14 pr15 pr16 pr17 pr18 pr19 pr20
                                  pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10 pr11 pr12 pr13 pr14 pr15 pr16 pr17 pr18 pr19 pr20;
hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-partitionName  = prAccessor  prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor 
                                  prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor prAccessor
                                  prWithListener pr pr pr pr pr pr pr pr pr pr pr pr pr pr pr pr pr pr pr;

hydra.PartitionPrms-names              = prAccessor   prWithListener                  pr;
hydra.PartitionPrms-redundantCopies    = ${redundantCopies};
hydra.PartitionPrms-localMaxMemory     = 0            default                         default;
hydra.PartitionPrms-partitionListeners = none,        parReg.partitionMan.PRListener, none;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 10;
util.ValueHolderPrms-useExtraObject = true;

parReg.ParRegPrms-upperThreshold = 200;
