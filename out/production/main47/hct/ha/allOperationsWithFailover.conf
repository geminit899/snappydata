INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;
INCLUDE $JTESTS/hct/hctparams.inc;

hydra.Prms-totalTaskTimeSec =28800;
hydra.Prms-maxResultWaitSec = 28800;
hct.ha.HAClientQueuePrms-opCode = RANGE 1 7 EGNAR;
hydra.GemFirePrms-conserveSockets = true;
hydra.GemFirePrms-logLevel = info;
hct.ha.HAClientQueuePrms-numPutThreads = 1;
hct.ha.HAClientQueuePrms-numKeyRangePerThread = 5;
hct.HctPrms-killInterval=300;
hct.HctPrms-restartWaitSec =100;

hydra.BridgePrms-names                = bridge;


hydra.PoolPrms-names                       = brloader;
hydra.PoolPrms-minConnections        = 3;
hydra.PoolPrms-subscriptionEnabled = true;
hydra.PoolPrms-threadLocalConnections         = true;
hydra.PoolPrms-subscriptionRedundancy             = -1;
hydra.PoolPrms-retryInterval               = 100;
hydra.PoolPrms-readTimeout                 = 60000;

hydra.CachePrms-names        = bridge     edge;

hydra.RegionPrms-names       = bridge     edge;
hydra.RegionPrms-poolName = none       brloader;
hydra.RegionPrms-enableSubscriptionConflation = true default;
hydra.RegionPrms-dataPolicy  = replicated default;
hydra.RegionPrms-scope       = dack       dack;

hydra.Prms-testDescription = "Tests get operations on the edge(s) of a hierarchical cache. ";

// make all VMs single-threaded
hydra.ClientPrms-vmThreads    = 1;

THREADGROUP bridge
  totalThreads = fcn ${bridgeHosts} * ${bridgeVMsPerHost} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)" ncf;
THREADGROUP edge
  totalThreads = fcn ${edgeHosts} * ${edgeVMsPerHost} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)" ncf;

STARTTASK  taskClass   = hct.HierCache    taskMethod  = initBlackboard
           clientNames = edge1;

INITTASK taskClass   = hct.ha.HAClientQueue  taskMethod = initCacheServer
        runMode = always
        hydra.ConfigPrms-cacheConfig  = bridge
        hydra.ConfigPrms-regionConfig = bridge
        hydra.ConfigPrms-bridgeConfig = bridge
        threadGroups = bridge;

// Setup cache and regions for edge caches            
INITTASK taskClass   = hct.ha.Feeder    taskMethod  = initTaskForCacheClientsDoingRandomOperations
        hydra.ConfigPrms-cacheConfig  = edge
        hydra.ConfigPrms-regionConfig = edge
        threadGroups = edge;

TASK    	taskClass   = hct.ha.Feeder    taskMethod  = feederTask
        threadGroups = edge;
hct.ha.HAClientQueuePrms-maxClientsCanKill = 2;

TASK    taskClass   = hct.ha.HACache     taskMethod  = killServer
     maxThreads = 1 
     maxTimesToRun = 10000
        threadGroups = edge;

CLOSETASK    	taskClass   = hct.ha.Feeder    taskMethod  = waitForFeederThreadsToComplete
        threadGroups = edge;
