INCLUDE $JTESTS/hct/ha/clientQConflation.inc;



hct.ha.HAClientQueuePrms-putLastKey=true;
hct.ha.HAClientQueuePrms-precreateLastKeyAtClient=false;
hydra.GemFirePrms-logLevel=info;


      
hydra.RegionPrms-cacheListeners =
      hct.ha.HAServerEventListener, // bridge
      none, // feed
      hct.ha.HAFailoverClientListener, // defaultedge
      hct.ha.HANoFailoverConflationEnabledClientListener, // conflationedge
      hct.ha.HAFailoverClientListener; // noconflationedge

      
hydra.RegionPrms-enableSubscriptionConflation = false default default;
hydra.PoolPrms-subscriptionRedundancy = 3;
hydra.PoolPrms-readTimeout                 = 60000;
hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 1500;

hct.ha.HAClientQueuePrms-delayDispatcherStart=true;

STARTTASK  taskClass   = hct.HierCache    taskMethod  = initBlackboard
           clientNames = defaultEdge2;
           
           

// Setup cache and regions for edge caches
INITTASK   taskClass   = hct.ha.HAClientQueue taskMethod  = initCacheClientWithConflation
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = defaultedge;

// Setup cache and regions for edge caches
INITTASK   taskClass   = hct.ha.HAClientQueue taskMethod  = initCacheClientWithConflation
           hydra.ConfigPrms-cacheConfig  = conflationedge
           hydra.ConfigPrms-regionConfig = conflationedge
           threadGroups = conflationedge;
           
// Setup cache and regions for edge caches
INITTASK   taskClass   = hct.ha.HAClientQueue taskMethod  = initCacheClientWithConflation
           hydra.ConfigPrms-cacheConfig  = noconflationedge
           hydra.ConfigPrms-regionConfig = noconflationedge
           threadGroups = noconflationedge;
           
// Setup cache and regions for feeder			
INITTASK    taskClass   = hct.ha.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;             
           
         
TASK    	taskClass   = hct.ha.Feeder    taskMethod  = feederTask
            threadGroups = feed	   ;
            
TASK    taskClass   = hct.ha.HACache     taskMethod  = killServer
     maxThreads = 1 
     startInterval = 60
     threadGroups = defaultedge,conflationedge,noconflationedge
//     maxTimesToRun = 5;
		;            

CLOSETASK   taskClass   = hct.ha.Feeder    taskMethod  = closeTask
            threadGroups = feed;
            
CLOSETASK   taskClass   = hct.ha.HAServerEventListener    taskMethod  = putHAStatsInBlackboard
            threadGroups = bridge;            

CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = checkClientConflation
            threadGroups = conflationedge;
            
CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = validateOpCountsNoFailoverConflationEnabled
            threadGroups = conflationedge;            

CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = verifyNoConflation
            threadGroups = defaultedge,noconflationedge;
            
CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = validateOpCountsForNoFailover
            threadGroups = defaultedge,noconflationedge;
                        
CLOSETASK   taskClass   = hct.ha.Feeder    taskMethod  = populateSharedMapWithRegionData
            threadGroups = feed;

CLOSETASK   taskClass   = hct.ha.HAClientQueue    taskMethod  = verifyDataInRegion
            threadGroups = defaultedge,conflationedge,noconflationedge;            

