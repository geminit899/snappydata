INCLUDE $JTESTS/hct/ha/csTransactions.inc;
hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 1500;

hct.HctPrms-receiveValuesAsInvalidates = false;
hydra.PoolPrms-subscriptionRedundancy = 4;
hydra.PoolPrms-pingInterval = 100;
hydra.PoolPrms-readTimeout = 60000;
// HAOverflow variables
hydra.BridgePrms-evictionPolicy = mem;
hydra.BridgePrms-diskStoreName = disk;
hydra.DiskStorePrms-names = disk;
hydra.BridgePrms-capacity = 5;
hydra.RegionPrms-cacheListeners =
      none, // bridge
      hct.ha.HANoFailoverConflationEnabledClientListener; // edge
hydra.RegionPrms-enableSubscriptionConflation = true default default;
hct.ha.HAClientQueuePrms-entryOperations=ONEOF put invalidate destroy FOENO;
hct.HctPrms-regionName = csTransactions;


// Setup cache and regions for edge caches            
INITTASK   taskClass   = hct.ha.HAClientQueue taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = edge;

INITTASK    taskClass   = hct.ha.Feeder    taskMethod  = initCSTransactionsTask
           hydra.ConfigPrms-cacheConfig  = bridge
           hydra.ConfigPrms-regionConfig = bridge
           threadGroups = bridge;

TASK    	taskClass   = hct.ha.Feeder    taskMethod  = feederTask
            threadGroups = bridge;

CLOSETASK    	taskClass   = hct.ha.Feeder    taskMethod  = waitForFeederThreadsToComplete
            threadGroups = bridge;

CLOSETASK    	taskClass   = hct.ha.Feeder    taskMethod  = populateSharedMapWithRegionData
            threadGroups = bridge;

CLOSETASK   taskClass   = hct.ha.HAClientQueue    taskMethod  = verifyDataInRegion
            threadGroups = edge;
            
CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = validateOpCountsNoFailoverConflationEnabled
            threadGroups = edge;
