INCLUDE $JTESTS/hct/ha/ha.inc;



hct.ha.HAClientQueuePrms-putLastKey=true;
hct.ha.HAClientQueuePrms-precreateLastKeyAtClient=true;
hydra.GemFirePrms-logLevel=info;
hydra.GemFirePrms-deltaPropagation=false; // for validations to work.
hydra.RegionPrms-cacheListeners =
      none, // bridge
      none,                         // feed
      hct.ha.HAClientInvalidatesListener;         // edge
hydra.RegionPrms-enableSubscriptionConflation = true default default;
hydra.PoolPrms-subscriptionRedundancy = 3;
hydra.PoolPrms-readTimeout                 = 60000;
hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 1500;

hct.ha.HAClientQueuePrms-delayDispatcherStart=true;


// Setup cache and regions for feeder			
INITTASK    taskClass   = hct.ha.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;

// Setup cache and regions for edge caches
INITTASK   taskClass   = hct.ha.HAClientQueue taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = edge;

TASK    	taskClass   = hct.ha.Feeder    taskMethod  = feederTask
            threadGroups = feed	   ;

CLOSETASK   taskClass   = hct.ha.Feeder    taskMethod  = closeTask
            threadGroups = feed;
            
CLOSETASK   taskClass   = hct.ha.HAServerEventListener    taskMethod  = putHAStatsInBlackboard
            threadGroups = bridge;            

CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = checkForConflation
            threadGroups = edge;

CLOSETASK   taskClass   = hct.ha.Validator    taskMethod  = validateInvalidatesConflationEnabledWithNoFailover
            threadGroups = edge;
