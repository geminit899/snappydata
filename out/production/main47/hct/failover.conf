INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;
INCLUDE $JTESTS/hct/hctparams.inc;
INCLUDE $JTESTS/hct/hctconfig.inc;

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-maxResultWaitSec = 300;


hydra.Prms-testDescription = "Tests get operations on the edge(s) of a hierarchical cache - periodically stopping servers and checking number of connections ";

hydra.VmPrms-extraVMArgs  = fcn "hct.HctPrms.serverVmArgs(${bridgeHosts}, \"${hc.serverMemSize}\", true)" ncf
                             ,
                            fcn "hydra.TestConfigFcns.duplicate(\"-Xmx250m -Xms250m\", ${edgeHosts}*${edgeVMsPerHost}, true)" ncf;

// override number of threads in topology_hct.inc
// recycleConnection requires APIs that are not threadsafe (if multiple
// threads in the VM
hydra.ClientPrms-vmThreads    = fcn "hydra.TestConfigFcns.duplicate
                                    (\"1\", ${bridgeHosts})"
                                ncf // bridges
                                2   // first edge has extra killer thread
                                1;  // remaining edges have only one

THREADGROUP bridge
  totalThreads = fcn ${bridgeHosts} * ${bridgeVMsPerHost} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)" ncf;

THREADGROUP edgeInit // one per edge VM
  totalThreads = fcn "${edgeHosts} * ${edgeVMsPerHost}" ncf
  totalVms= fcn "${edgeHosts}* ${edgeVMsPerHost}" ncf;

THREADGROUP killer   totalThreads = 1 totalVms = 1 clientNames = edge1;

hydra.GemFirePrms-conserveSockets = true;

hydra.PoolPrms-minConnections = ${connectionsPerServer};
hydra.PoolPrms-threadLocalConnections = ${threadLocalConnections};

STARTTASK  taskClass   = hct.HierCache    taskMethod  = initBlackboard
           clientNames = edge1;

INITTASK    taskClass   = hct.HierCache    taskMethod  = initServerRegion
            hydra.ConfigPrms-cacheConfig  = bridge
            hydra.ConfigPrms-regionConfig = bridge
            hydra.ConfigPrms-bridgeConfig = bridge
            runMode = always
            threadGroups = bridge;

INITTASK    taskClass   = hct.HierCache    taskMethod  = initEdgeRegion
            hydra.ConfigPrms-cacheConfig  = edge
            hydra.ConfigPrms-regionConfig = edge
            runMode = always
            threadGroups = edgeInit;

// Have clients accessing edge cache which uses cachebridge loader
TASK    taskClass   = hct.HierCache     taskMethod  = doGetBatch
        threadGroups = edgeInit, default;

// Shutdown servers 1 at a time ... check netstat
TASK    taskClass   = hct.HierCache     taskMethod  = stopServers
        maxTimesToRun = 1
        threadGroups = killer
;
