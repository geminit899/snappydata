include $JTESTS/dlock/crashGrantorWithLock_global.conf;


hydra.Prms-testDescription = "
Test distributed lock service:  Condition:   Lock Service Grantor has lock, 
other threads are waiting for lock, Lock Service Grantor crashes 
(via disconnect, TBD add vm crashes, hangs). After crash of Grantor,  
verify remaining threads continue to successfully get and release locks.  
In this test scope is global and useEntryLocks is true (locks are acquired
via region.getDistributedLock())";


hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 1200; //600;

hydra.ClientPrms-vmQuantities = 3;
hydra.ClientPrms-vmThreads    = 1; // (was 2) workaround for 29372

dlock.DLockPrms-blackboardName = "Global";
dlock.DLockPrms-blackboardType = "rmi";

dlock.DLockPrms-scope = global;
dlock.DLockPrms-numTimesToEnterLock = RANGE 1 10 EGNAR;

dlock.DLockPrms-useEntryLock = true;
dlock.DLockPrms-getLockFirst = true;

dlock.DLockPrms-numTimesToCrash = 1;
dlock.DLockPrms-crashGrantor = true;
