include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/systemparams2.inc;

hydra.Prms-testDescription = "
While doing random lock/unlock, other threads request to become
the lock grantor.";

INITTASK  taskClass = dlock.BasicDLockClient taskMethod = createCacheTask
          threadGroups = grantor
          ;

INITTASK  taskClass = dlock.BasicDLockClient taskMethod = createDataTask
	  threadGroups = grantor
          ;

INITTASK  taskClass = dlock.BasicDLockClient taskMethod = initTask
          ;

TASK      taskClass = dlock.BasicDLockClient taskMethod = randomLockTask
          ;

TASK      taskClass = dlock.GrantorTest taskMethod = becomeGrantorTask
          threadGroups = grantor
          ;

CLOSETASK taskclass = dlock.GrantorTest taskMethod = countGrantorsTask
          threadGroups = grantor
          ;

CLOSETASK taskClass = dlock.BasicDLockClient taskMethod = closeTask
          ;

CLOSETASK taskclass = dlock.GrantorTest taskMethod = validateTask
          threadGroups = grantor
          ;

CLOSETASK taskClass = dlock.BasicDLockClient taskMethod = closeCacheTask
          threadGroups = grantor
          ;

ENDTASK   taskClass = dlock.DLockBlackboard  taskMethod = printBlackboard
          clientNames = client1
          ;



THREADGROUP grantor totalThreads = 4 totalVMs = 4 ;
dlock.DLockPrms-datatypes  =
                                     dlock.lockable.StringWrapper;
//                                     dlock.lockable.ArrayOfPrimLongWrapper
//                                     dlock.lockable.HashMapWrapper
//                                     dlock.lockable.VectorWrapper
//                                     dlock.lockable.HashtableWrapper
//                                     dlock.lockable.ArrayListWrapper
//                                     dlock.lockable.ArrayOfObjectWrapper
//                                     dlock.lockable.SyncArrayListWrapper
//                                     dlock.lockable.IntegerWrapper
//                                     dlock.lockable.HashSetWrapper
//                                     dlock.lockable.SyncHashMapWrapper
//                                     dlock.lockable.LinkedListWrapper
//                                     ;
dlock.DLockPrms-datasizes  =  100
					;

hydra.ClientPrms-vmQuantities = 2;
hydra.ClientPrms-vmThreads    = 4; 

hydra.Prms-totalTaskTimeSec = 120;
hydra.Prms-maxResultWaitSec = 1200;

dlock.DLockPrms-useEntryLock = true;
dlock.DLockPrms-getLockFirst = true;
dlock.DLockPrms-iterations = 20;
dlock.DLockPrms-numToLock   = oneof 1 2 3 4 5 10 foeno;

// set lease time and lock timeout high so Hydra will timeout hung client
dlock.DLockPrms-cacheLeaseTime = 300000;
dlock.DLockPrms-cacheLockTimeout = 300000;

dlock.DLockPrms-blackboardName = "Global";
dlock.DLockPrms-blackboardType = "rmi";

dlock.DLockPrms-scope = global;
dlock.DLockPrms-numTimesToEnterLock = RANGE 1 10 EGNAR;
