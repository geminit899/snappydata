hydra.Prms-testRequirement = "Test delta implementations that contain errors with non-pr regions in a peer configuration";
hydra.Prms-testDescription = "
Run various bad delta test cases
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initializeClient
             delta.DeltaPropagationPrms-regionPrmsName=clientRegion
             runMode = always;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_loadBadDeltaToUpperThreshold;

TASK         taskClass   = delta.DeltaTest  taskMethod = HydraTask_badDeltaController;

hydra.Prms-maxResultWaitSec = 300;
hydra.Prms-totalTaskTimeSec = 600; // test is workload based, but won't run longer than 10 minutes
hydra.Prms-serialExecution = true;
hydra.Prms-roundRobin = true;

hydra.GemFirePrms-conserveSockets = true;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-cloningEnabled = ONEOF true false FOENO;

delta.DeltaPropagationPrms-upperThreshold = 300;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names          = clientRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = ONEOF ack global FOENO;
hydra.RegionPrms-dataPolicy     = replicate;
hydra.RegionPrms-cacheListeners = delta.BadDeltaTestListener;

