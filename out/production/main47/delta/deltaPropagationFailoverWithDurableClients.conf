INCLUDE $JTESTS/delta/delta.inc;
INCLUDE $JTESTS/hydraconfig/topology_3.inc;
hct.HctPrms-receiveValuesAsInvalidates = false;
hydra.PoolPrms-subscriptionRedundancy = 3;
hydra.PoolPrms-pingInterval = 100;
hydra.PoolPrms-readTimeout                 = 60000;
hydra.RegionPrms-cacheListeners =
      none, // bridge
      none, // feed
      delta.DeltaDurableClientValidationListener;  // edge
      
hct.HctPrms-killInterval=300;
hct.HctPrms-restartWaitSec =100;  

//for durable client
hydra.GemFirePrms-enableDurableClient = false false true;
hydra.GemFirePrms-durableClientTimeout = 500;

hydra.RegionPrms-cloningEnabled = true	true	false;
hydra.RegionPrms-enableSubscriptionConflation=false false false;
delta.DeltaPropagationPrms-entryOperations=ONEOF put destroy put FOENO;
hydra.GemFirePrms-logLevel = info;
// make bridges be peers make feed and edges be loners
hydra.GemFirePrms-distributedSystem =
  fcn "hydra.TestConfigFcns.duplicate(\"ds\",    ${bridgeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"loner\",    ${feedHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"loner\", ${edgeHosts})" ncf;

hydra.CachePrms-names        = bridge     feed       edge;

hydra.RegionPrms-names       = bridge     feed       edge;
hydra.RegionPrms-poolName = none       brloader       brloader;
hydra.RegionPrms-dataPolicy  = replicate  default  default;

STARTTASK  taskClass   = hct.HierCache    taskMethod  = initBlackboard
           clientNames = feed1;

// Setup cache and regions for edge caches            
INITTASK   taskClass   = delta.DeltaPropagation taskMethod  = initDurableCacheClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = edge
           runMode=always;

// Setup cache and regions for feeder			
INITTASK    taskClass   = delta.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;                       

TASK    	taskClass   = delta.Feeder    taskMethod  = feederTask
            threadGroups = feed;
            
TASK    	taskClass   = delta.DeltaCache     taskMethod  = killClient
     		maxThreads = 1 
     		startInterval = 60
     		threadGroups = edge
     		maxTimesToRun = 3;
     		
TASK    	taskClass   = delta.DeltaCache     taskMethod  = killServer
     		maxThreads = 1 
     		startInterval = 60
     		threadGroups = edge
     		maxTimesToRun = 3;

CLOSETASK   taskClass   = delta.Feeder    taskMethod  = closeTask
            threadGroups = feed;
            
CLOSETASK   taskClass   = delta.DeltaPropagation    taskMethod  = waitForLastKeyReceivedAtClient
            threadGroups = edge;
            
CLOSETASK   taskClass   = delta.Validator    taskMethod  = validateToAndFromDeltaCountForDurable
            threadGroups = edge;
            
