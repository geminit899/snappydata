INCLUDE $JTESTS/delta/delta.inc;
INCLUDE $JTESTS/hydraconfig/topology_3.inc;

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 900;

hct.HctPrms-receiveValuesAsInvalidates = false;

hydra.PoolPrms-subscriptionRedundancy  = -1;
hydra.PoolPrms-pingInterval            = 100;
hydra.PoolPrms-readTimeout             = 60000;
hydra.PoolPrms-minConnections          = 5;
hydra.PoolPrms-subscriptionAckInterval = 1000;

delta.DeltaPropagationPrms-entryOperations = ONEOF put invalidate put put destroy put FOENO;
hct.ha.HAClientQueuePrms-delayDispatcherStart = false;
delta.DeltaPropagationPrms-enableFailure   = true;

// Make bridges as peer; feed and edges as loners
hydra.GemFirePrms-distributedSystem =
  fcn "hydra.TestConfigFcns.duplicate(\"ds\",    ${bridgeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"ds\", ${feedHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"loner\", ${edgeHosts})" ncf;
hydra.GemFirePrms-logLevel          = info;
//hydra.GemFirePrms-deltaPropagation  = ${propagateDelta};

hydra.CachePrms-names               = bridge feed edge;

hydra.RegionPrms-names                        = bridge feed edge;
hydra.RegionPrms-poolName                     = none none brloader;
hydra.RegionPrms-dataPolicy                   = replicate replicate default;
hydra.RegionPrms-cloningEnabled               = false false false;
hydra.RegionPrms-enableSubscriptionConflation = false false default;
hydra.RegionPrms-cacheListeners =
      delta.DeltaClientValidationListener, // bridge
      none, // feed
      none; // edge

// Setup cache and regions for edge caches            
INITTASK   taskClass   = delta.DeltaPropagation taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = edge;
           
INITTASK   taskClass   = delta.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;

TASK       taskClass   = delta.Feeder    taskMethod  = feederTask
           threadGroups = feed;

CLOSETASK  taskClass   = delta.Feeder    taskMethod  = waitForFeederThreadsToComplete
           threadGroups = feed;

CLOSETASK  taskClass   = delta.Feeder    taskMethod  = verifyDeltaFailuresInP2P
           threadGroups = bridge;
