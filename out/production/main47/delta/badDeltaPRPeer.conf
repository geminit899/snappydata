hydra.Prms-testRequirement = "Test delta implementations that contain errors with PRs in a peer configuration";
hydra.Prms-testDescription = "
Run various bad delta test cases
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_2.inc;

THREADGROUP accessorThreads
    totalThreads = fcn
                   ${${A}Hosts} * ${${A}VMsPerHost} * ${${A}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP dataStoreThreads
    totalThreads = fcn
                   ${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initRedundantCopies
             threadGroups = accessorThreads;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initializeClient
             delta.DeltaPropagationPrms-regionPrmsName=accessorRegion
             threadGroups = accessorThreads
             runMode = always;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initializeClient
             delta.DeltaPropagationPrms-regionPrmsName=dataStoreRegion
             threadGroups = dataStoreThreads
             runMode = always;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_loadBadDeltaToUpperThreshold
             threadGroups = accessorThreads;

TASK         taskClass   = delta.DeltaTest  taskMethod = HydraTask_badDeltaController
             threadGroups = accessorThreads, dataStoreThreads;

hydra.Prms-maxResultWaitSec = 300;
hydra.Prms-totalTaskTimeSec = 600; // test is workload based, but won't run longer than 10 minutes
hydra.Prms-serialExecution = true;
hydra.Prms-roundRobin = true;

hydra.GemFirePrms-conserveSockets = true;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-cloningEnabled = ONEOF true false FOENO;

delta.DeltaPropagationPrms-upperThreshold = 300;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names          = accessorRegion          dataStoreRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = default;
hydra.RegionPrms-dataPolicy     = partition;
hydra.RegionPrms-interestPolicy = all;
hydra.RegionPrms-cacheListeners = delta.BadDeltaTestListener;
hydra.RegionPrms-partitionName  = accessorPR              dataStorePR;

hydra.PartitionPrms-names           = accessorPR          dataStorePR;
hydra.PartitionPrms-localMaxMemory  = 0                   default;

delta.DeltaPropagationPrms-redundantCopies = ${redundantCopies};

