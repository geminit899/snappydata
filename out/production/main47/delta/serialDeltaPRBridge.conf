hydra.Prms-testRequirement = "Test delta propagation with careful validation in a bridge configuration with PR";
hydra.Prms-testDescription = "
This test executes operations on entries on a region and carefully
validates for correctness with delta propagation.  The test uses serial 
round robin; the first thread in the round does random operations, then 
all other threads in the round verify the state of the region and write 
that vm's delta information to the blackboard. After the last thread in the 
round verifies, it reads all the delta information from the blackboard 
and verifies delta behavior. It then becomes the first in the next round, 
thus the thread/vm doing the random operation changes for each round. 
";

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initRedundantCopies
             threadGroups = edgeThreads;

INCLUDE $JTESTS/delta/serialDeltaReplicateBridge.conf;

hydra.RegionPrms-names          = clientRegion             serverRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = local                    default;
hydra.RegionPrms-poolName       = edgeDescript             none;
hydra.RegionPrms-dataPolicy     = normal                   partition;
hydra.RegionPrms-interestPolicy = all;
hydra.RegionPrms-cacheListeners = util.SilenceListener
                                  delta.DeltaTestListener, delta.DeltaTestListener;
hydra.RegionPrms-partitionName  = none                     pr;

hydra.PartitionPrms-names           = pr;
hydra.PartitionPrms-localMaxMemory  = default;

delta.DeltaPropagationPrms-redundantCopies = ${redundantCopies};

// define the edge clients
hydra.PoolPrms-names                  = edgeDescript;
hydra.PoolPrms-minConnections         = 2;
hydra.PoolPrms-subscriptionEnabled    = true;
hydra.PoolPrms-threadLocalConnections = true;
hydra.PoolPrms-readTimeout            = 800000;
hydra.PoolPrms-subscriptionRedundancy = RANGE 0 fcn ${bridgeHosts} * ${bridgeVMsPerHost} ncf EGNAR;

// define the bridge servers
hydra.BridgePrms-names                = bridge;
