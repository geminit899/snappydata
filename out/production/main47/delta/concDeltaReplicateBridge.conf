hydra.Prms-testRequirement = "Test delta propagation in a concurrent test with validation in a bridge configuration with replicate regions";
hydra.Prms-testDescription = "
This test executes concurrent operations on entries on a region, then
pauses and does validation.
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;

THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;         

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initializeBridgeServer
             delta.DeltaPropagationPrms-regionPrmsName=serverRegion
             threadGroups = bridgeThreads
             runMode = always;

INITTASK     taskClass   = delta.DeltaTest  taskMethod = HydraTask_initializeClient
             delta.DeltaPropagationPrms-regionPrmsName=clientRegion
             threadGroups = edgeThreads
             runMode = always;

TASK         taskClass   = delta.DeltaTest  taskMethod = HydraTask_doConcOpsAndVerify
             threadGroups = bridgeThreads, edgeThreads;

INCLUDE $JTESTS/delta/concDelta.inc;

hydra.RegionPrms-names          = clientRegion             serverRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = local                    ONEOF ack global FOENO;
hydra.RegionPrms-poolName       = edgeDescript             none;
hydra.RegionPrms-dataPolicy     = normal                   replicate;
hydra.RegionPrms-cacheListeners = util.SilenceListener
                                  delta.DeltaTestListener, delta.DeltaTestListener;
hydra.RegionPrms-partitionName  = none                     none;

// define the edge clients
hydra.PoolPrms-names                  = edgeDescript;
hydra.PoolPrms-minConnections         = 2;
hydra.PoolPrms-subscriptionEnabled    = true;
hydra.PoolPrms-threadLocalConnections = true;
hydra.PoolPrms-readTimeout            = 800000;
hydra.PoolPrms-subscriptionRedundancy = RANGE 0 fcn ${bridgeHosts} * ${bridgeVMsPerHost} ncf EGNAR;

// define the bridge servers
hydra.BridgePrms-names                = bridge;

