hydra.Prms-testRequirement = "Test pre-6.5 disk file conversion to 6.5 (or later, but < 7.0)";
hydra.Prms-testDescription = "
   The test creates 2 distributed systems: one pre-6.5 and the other 6.5 or later
   In the pre-6.5 distributed system:
      1) create regions
      2) do random ops to create data, while ops are running take down the old
         version vms one at a time so each vm will have different data on its
         disk files
   Convert pre-6.5 disk files
   In the 6.5 or later distributed system
      1) initialize with converted disk files
      2) choose a vm at random to write a snapshot to the bb, others must match it
";

INCLUDE $JTESTS/diskRecovery/concConvertPre65.inc;

// 1) The following regions are defined using 6.5 attributes (DiskStores); hydra will automatically
//    convert these regions to pre-6.5 DiskWriteAttributes for the pre-6.5 system. 
// 2) Note that in pre-6.5 GemFire, persistent PRs did not exist; disk for PRs only existed as
//    overflow-to-disk, so any regions defined as PRs have overflow-to-disk (remember that even
//    though the regions are defined in 6.5 notation, the point of the test is to convert pre-6.5
//    disk files to 6.5, and overflow-to-disk for PRs is what is available pre-6.5 for conversion).
// 3) The 6.5 DiskStore configuration is used to 1) create a 6.5 xml file for conversion (see
//    diskRecovery.RecoveryPrms-convertWithNewVersionXml and 2) create the regions in the vm
//    after the conversion.
hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names              = // regions with their own DiskStore
                                      persistRegion
                                      replicateRegion
                                      persistWithOverflow
                                      replicateWithOverflow
                                      PRWithOverflow
                                      redun1PRWithOverflow
                                      redun2PRWithOverflow
                                      redun3PRWithOverflow

                                      // regions that share a DiskStore
                                      persistRegionShared
                                      persistWithOverflowShared
                                      replicateWithOverflowShared
                                      PRWithOverflowShared
                                      redun1PRWithOverflowShared
                                      redun2PRWithOverflowShared
                                      redun3PRWithOverflowShared;

hydra.RegionPrms-dataPolicy         = persistentReplicate
                                      replicate
                                      persistentReplicate
                                      replicate
                                      partitioned
                                      partitioned
                                      partitioned
                                      partitioned

                                      persistentReplicate
                                      persistentReplicate
                                      replicate
                                      partitioned
                                      partitioned
                                      partitioned
                                      partitioned;

hydra.RegionPrms-diskStoreName      = diskStore1         
                                      none
                                      diskStore2
                                      diskStore3
                                      diskStore4
                                      diskStore5
                                      diskStore6
                                      diskStore7

                                      sharedDiskStore
                                      sharedDiskStore
                                      sharedDiskStore
                                      sharedDiskStore
                                      sharedDiskStore
                                      sharedDiskStore
                                      sharedDiskStore;

hydra.RegionPrms-scope              = ONEOF ack global noack FOENO
                                      ONEOF ack global noack FOENO
                                      ONEOF ack global noack FOENO
                                      ONEOF ack global noack FOENO
                                      default
                                      default
                                      default
                                      default

                                      ONEOF ack global noack FOENO
                                      ONEOF ack global noack FOENO
                                      ONEOF ack global noack FOENO
                                      default
                                      default
                                      default
                                      default;

hydra.RegionPrms-diskSynchronous    = ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO

                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO
                                      ONEOF true false FOENO;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
hydra.RegionPrms-evictionAttributes = none,
                                      none,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,

                                      none,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk,
                                      lruEntryCount 30 overflowToDisk;
                                   
hydra.RegionPrms-partitionName      = none none none none PR redun1PR redun2PR redun3PR
                                      none none none PR redun1PR redun2PR redun3PR;

hydra.DiskStorePrms-names = sharedDiskStore diskStore1 diskStore2 diskStore3 diskStore4 diskStore5 diskStore6 diskStore7;
hydra.DiskStorePrms-diskDirNum = ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO
                                 ONEOF 1 2 3 4 5 FOENO;

hydra.DiskStorePrms-autoCompact = true;
hydra.DiskStorePrms-maxOplogSize = 1; // frequent new logs

hydra.PartitionPrms-names           = PR     redun1PR redun2PR redun3PR;
hydra.PartitionPrms-redundantCopies = 0      1        2        3;
