hydra.Prms-testRequirement = "Test region operations on many regions (replicate, pr and normal) that share more than one disk store. Some regions are persistent, some overflow to disk, some are both, some are neither";
hydra.Prms-testDescription = "
";

INCLUDE $JTESTS/diskRecovery/multiDiskStore.inc;

CLOSETASK    taskClass   = diskRecovery.RecoveryTest  taskMethod = HydraTask_waitForMyStartupRecovery
             threadGroups = workThreads;

CLOSETASK    taskClass   = diskRecovery.RecoveryTest  taskMethod = HydraTask_verifyPRs
             threadGroups = workThreads;

RANDOMINCLUDE $JTESTS/memscale/configs/enableOffHeap.conf;
INCLUDE $JTESTS/memscale/configs/verifyOffHeap.conf;

hydra.RegionPrms-names              = 
                                      pr
                                      prOverflow
                                      prPersist
                                      prPersistOverflow

                                      replicate
                                      replicateOverflow
                                      replicatePersist
                                      replicatePersistOverflow;
hydra.RegionPrms-dataPolicy         = 
                                      partitioned partitioned persistentPartition persistentPartition
                                      replicate replicate persistentReplicate persistentReplicate;
hydra.RegionPrms-scope              = 
                                      default default default default
                                      ONEOF ack noAck FOENO
                                      ONEOF ack noAck FOENO
                                      ONEOF ack noAck FOENO
                                      ONEOF ack noAck FOENO;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
hydra.RegionPrms-partitionName      = 
                                      pr pr pr pr
                                      none none none none;
// fool hydra; diskStore names will be randomly chosen at runtime from hydra.DiskStorePrms.names, but hydra requires 
// it get defined here anyway
hydra.RegionPrms-diskStoreName      = 
                                      none notUsed notUsed notUsed
                                      none notUsed notUsed notUsed;
hydra.RegionPrms-evictionAttributes = 
                                      none, lruEntryCount 50 overflowToDisk, none, lruEntryCount 50 overflowToDisk,
                                      none, lruEntryCount 50 overflowToDisk, none, lruEntryCount 50 overflowToDisk;
hydra.RegionPrms-diskSynchronous    = ONEOF true false FOENO;

hydra.PartitionPrms-names = pr;
hydra.PartitionPrms-redundantCopies = ONEOF 1 2 3 FOENO;

diskRecovery.RecoveryPrms-numRootRegions = 10;
diskRecovery.RecoveryPrms-numSubregions = 2;
diskRecovery.RecoveryPrms-regionHierarchyDepth = 2;
diskRecovery.RecoveryPrms-maxNumEntriesPerRegion = 200;


