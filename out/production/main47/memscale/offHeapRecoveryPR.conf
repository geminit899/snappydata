hydra.Prms-testRequirement = "Verify that recovery with off-heap regions does not first recovery into heap memory";
hydra.Prms-testDescription = "
Configure the test to use a heap too small to accomodate the entries of the regions to verify that the product recovers directly to off-heap memory
rather than recovering to heap, then transferring to off-heap.
";

INCLUDE $JTESTS/memscale/offHeapRecoveryReplicate.conf;

hydra.RegionPrms-names              = prPersist;
hydra.RegionPrms-dataPolicy         = persistentPartition;
hydra.RegionPrms-scope              = default;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
hydra.RegionPrms-partitionName      = pr;
// fool hydra; diskStore names will be randomly chosen at runtime from hydra.DiskStorePrms.names, but hydra requires 
// it get defined here anyway
hydra.RegionPrms-evictionAttributes = none;
hydra.RegionPrms-diskSynchronous    = ONEOF true false FOENO;

hydra.PartitionPrms-names = pr;
hydra.PartitionPrms-redundantCopies = 3;

diskRecovery.RecoveryPrms-lowerThreshold = 7999;
diskRecovery.RecoveryPrms-upperThreshold = 8050;
diskRecovery.RecoveryPrms-lowerThresholdOperations = ONEOF add putAll cacheOperations FOENO;
diskRecovery.RecoveryPrms-upperThresholdOperations = ONEOF destroy cacheOperations FOENO;

// ============================================================
// number of regions, payload size and heap set such that we cannot contain all entries in heap
diskRecovery.RecoveryPrms-numRootRegions = 1;
diskRecovery.RecoveryPrms-numSubregions = 0;
diskRecovery.RecoveryPrms-regionHierarchyDepth = 1;

diskRecovery.RecoveryPrms-maxNumEntriesPerRegion = 8000;

hydra.VmPrms-extraVMArgs += "-Xmx125m";

hydra.GemFirePrms-offHeapMemorySize=500m;
hydra.RegionPrms-enableOffHeapMemory = true;

