hydra.Prms-testDescription = "Ensure data consistency when some members run out of off-heap memory (and thus close their caches";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_3_locator.inc;

THREADGROUP locatorThreads
    totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                       * ${locatorThreadsPerVM}
                   ncf           
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"locator\", ${locatorHosts}, true)"
                   ncf;    
THREADGROUP accessorThreads
    totalThreads = fcn ${${A}Hosts} * ${${A}VMsPerHost}
                                    * ${${A}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP dataStoreThreads
    totalThreads = fcn ${${B}Hosts} * ${${B}VMsPerHost}
                                    * ${${B}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;
THREADGROUP oomDataStoreThreads
    totalThreads = fcn ${${C}Hosts} * ${${C}VMsPerHost}
                                    * ${${C}ThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${C}\", ${${C}Hosts}, true)"
                   ncf;

// init locators
INITTASK taskClass    = memscale.OffHeapStressTest taskMethod = HydraTask_createLocator
         runMode      = always
         threadGroups = locatorThreads;
INITTASK taskClass    = memscale.OffHeapStressTest taskMethod = HydraTask_startLocatorAndDS
         runMode      = always
         threadGroups = locatorThreads;

// init cache and regions
INITTASK taskClass    = memscale.OffHeapStressTest taskMethod   = HydraTask_initializeRegions
         threadGroups = dataStoreThreads, oomDataStoreThreads;
INITTASK taskClass    = memscale.OffHeapStressTest taskMethod   = HydraTask_initializeRegions
         management.test.cli.CommandPrms-createProxyRegions=true
         threadGroups = accessorThreads;

INITTASK taskClass = memscale.OffHeapMemoryLifecycleListener taskMethod = install runMode=always;

TASK     taskClass    = memscale.OffHeapStressTest taskMethod   = HydraTask_offHeapCeilingTest
         management.test.cli.CommandPrms-createProxyRegions=true
         threadGroups = accessorThreads;
TASK     taskClass    = memscale.OffHeapStressTest taskMethod   = HydraTask_offHeapCeilingTest
         threadGroups = dataStoreThreads;
TASK     taskClass    = memscale.OffHeapStressTest taskMethod   = HydraTask_offHeapCeilingTestOOM
         threadGroups = oomDataStoreThreads;

CLOSETASK    taskClass   = memscale.OffHeapStressTest  taskMethod = logDurationHistory
             threadGroups = accessorThreads,dataStoreThreads,oomDataStoreThreads;
// test fails earlier now for 49735
//CLOSETASK    taskClass   = memscale.OffHeapStressTest  taskMethod = checkOperationTimes
//             threadGroups = accessorThreads,dataStoreThreads,oomDataStoreThreads;

// look for off-heap memory leaks
CLOSETASK    taskClass   = memscale.OffHeapHelper  taskMethod = verifyOffHeapMemoryConsistencyOnce
             threadGroups = accessorThreads,dataStoreThreads,oomDataStoreThreads;
CLOSETASK    taskClass   = memscale.OffHeapHelper  taskMethod = closeAllRegions
             threadGroups = accessorThreads,dataStoreThreads,oomDataStoreThreads;
CLOSETASK    taskClass   = memscale.OffHeapHelper  taskMethod = verifyOffHeapMemoryConsistencyOnce
             threadGroups = accessorThreads,dataStoreThreads,oomDataStoreThreads;
ENDTASK      taskClass = memscale.OffHeapMemoryLifecycleListener taskMethod = checkForErrors;
ENDTASK      taskClass = util.LogChecker taskMethod = HydraTask_checkLogs;

hydra.Prms-totalTaskTimeSec=7200; // test is workload based
hydra.Prms-maxResultWaitSec = 600;

memscale.MemScalePrms-numberExecutionCycles = 10;

// this is the number of OOM members
memscale.MemScalePrms-numMembers = fcn ${${C}Hosts} * ${${C}VMsPerHost} ncf;
memscale.MemScalePrms-numThreads1 = fcn (${${A}Hosts} * ${${A}VMsPerHost} * ${${A}ThreadsPerVM}) +
                                        (${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}) ncf;
memscale.MemScalePrms-numThreads2 = fcn (${${A}Hosts} * ${${A}VMsPerHost} * ${${A}ThreadsPerVM}) +
                                        (${${B}Hosts} * ${${B}VMsPerHost} * ${${B}ThreadsPerVM}) +
                                        (${${C}Hosts} * ${${C}VMsPerHost} * ${${C}ThreadsPerVM}) ncf;

hydra.GemFirePrms-offHeapMemorySize =
  fcn "hydra.TestConfigFcns.duplicate(\"0m\", ${locatorHosts} * ${locatorVMsPerHost}, false)" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"0m\", ${accessorHosts} * ${accessorVMsPerHost}, false)" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"800m\", ${dataStoreHosts} * ${dataStoreVMsPerHost}, false)" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"150m\", ${oomDataStoreHosts} * ${oomDataStoreVMsPerHost}, false)" ncf;

hydra.CachePrms-names               = cache1;

// borrow region definitions and initialization from another test
INCLUDE $JTESTS/management/test/cli/regions.inc;
hydra.RegionPrms-poolName = none; // override pool settings in regions.inc since this is a peer test
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
hydra.RegionPrms-evictionAttributes = none;
hydra.RegionPrms-enableOffHeapMemory = // non-persistent regions
                                      true
                                      true
                                      true
                                      true
                                      // accessors for the above persistent regions
                                      false
                                      false
                                      false
                                      false

                                      // colocated regions
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      // accessors for the above persistent colocated regions
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false

                                      // clientRegions for non-persistence
                                      false
                                      false
                                      false
                                      false

                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false

                                      // persistent regions
                                      true
                                      true
                                      true
                                      true
                                      // accessors for the above persistent regions
                                      false
                                      false
                                      false
                                      false

                                      // persistent colocated regions
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      true
                                      // accessors for the above persistent colocated regions
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false

                                      // client regions for persistence
                                      false
                                      false
                                      false
                                      false

                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
                                      false
;

hydra.VmPrms-extraVMArgs += "-Xmx400m";

//hydra.VmPrms-extraVMArgs += "-Dgemfire.OFF_HEAP_TOTAL_SIZE=10m -Dgemfire.OFF_HEAP_SLAB_SIZE=1m -D/colPR_6:OFF_HEAP=true -D/colPR_3:OFF_HEAP=true -D/colAnchorPR_1:OFF_HEAP=true -D/colPR_4:OFF_HEAP=true -D/replicate_region2:OFF_HEAP=true -D/replicate_region1:OFF_HEAP=true -D/colPR_8:OFF_HEAP=true -D/colPR_7:OFF_HEAP=true -D/PR_region1:OFF_HEAP=true -D/colPR_10:OFF_HEAP=true -D/PR_region2:OFF_HEAP=true -D/colAnchorPR_2:OFF_HEAP=true -D/colPR_5:OFF_HEAP=true -D/colPR_9:OFF_HEAP=true";

