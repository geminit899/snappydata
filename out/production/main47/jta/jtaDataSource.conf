hydra.Prms-testRequirement = "Test entry put/update/get events";
hydra.Prms-testDescription = " This test concurrently executes put/update/get operations in database in a (JNDIContext) transactional environment to test behavior of transactions in multi-threaded scenario.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams1.inc;

hydra.ClientPrms-vmQuantities   = 1;
hydra.ClientPrms-vmThreads    = 3;

hydra.VmPrms-extraClassPaths        =   $GEMFIRE/lib/gemfire.jar $JTESTS/lib/derby.jar; 

// create database table
STARTTASK    taskClass   = jta.JtaDataSourceHydraTest taskMethod  = startTask;

// create cache and regions
INITTASK     taskClass   = jta.JtaDataSourceHydraTest taskMethod = initTask;

// execute tx on dataSource (database)
TASK         taskClass   = jta.JtaDataSourceHydraTest taskMethod  = testTask 
             maxTimesToRun=20;

//display operation counters
CLOSETASK      taskClass   = jta.JtaDataSourceHydraTest taskMethod  = closeTask;

// display contents of dataSource table
ENDTASK      taskClass   = jta.JtaDataSourceHydraTest taskMethod  = endTask;

hydra.GemFirePrms-stopSystemsAfterTest = true;

hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 1200;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 360;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 1800;

// Logging params
hydra.log.LogPrms-file_logging = true;

jta.JtaPrms-numberOfEvents=20;
jta.JtaPrms-numberOfRandomRegions=0;
jta.JtaPrms-entryOperations = ONEOF put update get FOENO; 

jta.JtaPrms-cacheXmlFile = $JTESTS/jta/cachejta.xml;

// region parameters to override from xml
hydra.ConfigPrms-regionConfig   = region1;
hydra.RegionPrms-names          = region1;
hydra.RegionPrms-regionName     = jtaRegion;
hydra.RegionPrms-scope          = local;

