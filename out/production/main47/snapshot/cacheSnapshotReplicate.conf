hydra.Prms-testRequirement = "Test region operations on many replicate regions that share more than one disk store. Some regions
are persistent, some overflow to disk";
hydra.Prms-testDescription = "
";

INCLUDE $JTESTS/snapshot/cacheSnapshot.inc;

hydra.RegionPrms-names              = replicateOverflow
                                      replicatePersist
                                      replicatePersistOverflow;
hydra.RegionPrms-dataPolicy         = replicate persistentReplicate persistentReplicate;
hydra.PartitionPrms-names           = pr;

hydra.RegionPrms-scope              = ONEOF ack noAck global FOENO
                                      ONEOF ack noAck global FOENO
                                      ONEOF ack noAck global FOENO;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
// fool hydra; diskStore names will be randomly chosen at runtime from hydra.DiskStorePrms.names, but hydra requires 
// it get defined here anyway
hydra.RegionPrms-diskStoreName      = notUsed;
hydra.RegionPrms-evictionAttributes = lruEntryCount 50 overflowToDisk, none, lruEntryCount 50 overflowToDisk;
hydra.RegionPrms-diskSynchronous    = ONEOF true false FOENO;

diskRecovery.RecoveryPrms-numRootRegions = 30;
diskRecovery.RecoveryPrms-numSubregions = 3;
diskRecovery.RecoveryPrms-regionHierarchyDepth = 2;
diskRecovery.RecoveryPrms-maxNumEntriesPerRegion = 200;


