INCLUDE $JTESTS/durableClients/durableClientQConflation.inc;

hydra.GemFirePrms-conflateEvents =
  fcn "hydra.TestConfigFcns.duplicate(\"false\",    ${bridgeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"false\",    ${feedHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"server\", ${defaultEdgeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"true\", ${conflationEdgeHosts})" ncf
  fcn "hydra.TestConfigFcns.duplicate(\"false\", ${noConflationEdgeHosts})" ncf;

hydra.RegionPrms-cacheListeners =
      hct.EventListener, // bridge
      hct.EventListener,                         // feed
      durableClients.EventListenerConflation,
      durableClients.EventListenerConflation,
      durableClients.EventListener;         // edge

hydra.Prms-totalTaskTimeSec = 100;

hydra.Prms-maxResultWaitSec = 600;
hydra.PoolPrms-subscriptionRedundancy = 3;
hydra.GemFirePrms-durableClientTimeout = 500;
durableClients.DurableClientsPrms-numberOfRegions=1;
//durableClients.DurableClientsPrms-regionRange= oneof 1 2 3 4 5 foeno;
durableClients.DurableClientsPrms-putLastKey = true;

durableClients.DurableClientsPrms-isExpirationTest = true;

hydra.RegionPrms-enableSubscriptionConflation = true default default default default;

durableClients.DurableClientsPrms-registerInterestKeys = allKeys;
durableClients.DurableClientsPrms-interestResultPolicy = keys;

INITTASK    taskClass   = durableClients.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;
        
INITTASK   taskClass   = durableClients.DurableClientsTest taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = defaultedge
           runMode = always;
           
INITTASK   taskClass   = durableClients.DurableClientsTest taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = conflationedge
           hydra.ConfigPrms-regionConfig = conflationedge
           threadGroups = conflationedge
           runMode = always;
           
INITTASK   taskClass   = durableClients.DurableClientsTest taskMethod  = initCacheClient
           hydra.ConfigPrms-cacheConfig  = noconflationedge
           hydra.ConfigPrms-regionConfig = noconflationedge
           threadGroups = noconflationedge,reference
           runMode = always;                      
           
INITTASK   taskClass = durableClients.DurableClientsTest taskMethod = mentionReferenceInBlackboard
           threadGroups = reference;
           
INITTASK   taskClass   = durableClients.DurableClientsTest taskMethod  = registerInterest
           threadGroups = conflationedge,noconflationedge,defaultedge,reference
           runMode = always;

TASK        taskClass   = durableClients.Feeder    taskMethod  = feederTask
            threadGroups = feed	   ;
            
TASK       taskClass   = durableClients.DurableClientsTest taskMethod  = killClient
           threadGroups = conflationedge
           maxTimesToRun = 3; 

TASK       taskClass   = durableClients.DurableClientsTest taskMethod  = killClient
           threadGroups = noconflationedge
           maxTimesToRun = 3; 
           
TASK       taskClass   = durableClients.DurableClientsTest taskMethod  = killClient
           threadGroups = defaultedge
           maxTimesToRun = 3;                                   
            

CLOSETASK   taskClass   = durableClients.Feeder    taskMethod  = closeTask
            threadGroups = feed;
                                
CLOSETASK   taskClass   = durableClients.Feeder    taskMethod  = populateSharedMapWithRegionData
            threadGroups = feed; 
            
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = getConflationStats
           threadGroups = bridge;            
            
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = waitForLastKeyReceivedAtClient
           threadGroups = conflationedge,noconflationedge,defaultedge,reference
           batch;                        
           
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = validateEventsReceived
           threadGroups = noconflationedge;

CLOSETASK   taskClass   = durableClients.DurableClientsTest    taskMethod  = verifyDataInRegion
            threadGroups = conflationedge,noconflationedge,defaultedge, reference; 
            
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = verifyIndividualConflation
           threadGroups = conflationedge,defaultedge;            
           
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = verifyNoConflation
           threadGroups = noconflationedge, reference; 

          
