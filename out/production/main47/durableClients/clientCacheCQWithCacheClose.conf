INCLUDE $JTESTS/durableClients/durableClients.inc;

hydra.RegionPrms-cacheListeners =
      none, // bridge
      none,                         // feed
      durableClients.EventListener;         // cq edge
      
hydra.Prms-totalTaskTimeSec = 100;
hydra.Prms-maxResultWaitSec = 600;

hydra.PoolPrms-subscriptionRedundancy = 3;
hydra.PoolPrms-freeConnectionTimeout = 60000;
durableClients.DurableClientsPrms-putLastKey = true;

hydra.Prms-manageLocatorAgents = true;
      
// ClientCache prms (used when useClientCache => true)
durableClients.DurableClientsPrms-useClientCache = oneof true false foeno;
hydra.ClientCachePrms-names                 = edge;

hydra.ClientRegionPrms-names                = edge;
hydra.ClientRegionPrms-poolName             = brloader;
hydra.ClientRegionPrms-clientRegionShortcut = CACHING_PROXY;
hydra.ClientRegionPrms-cacheListeners       = durableClients.EventListener;

//durableClients.DurableClientsPrms-numberOfRegions=1;
//durableClients.DurableClientsPrms-regionRange= 1;

durableClients.DurableClientsPrms-numberOfRegions=5;
durableClients.DurableClientsPrms-regionRange= oneof 1 2 3 4 5 foeno;

// Setup cache and regions for edge caches
           
INITTASK    taskClass   = durableClients.Feeder    taskMethod  = initTask
           hydra.ConfigPrms-cacheConfig  = feed
           hydra.ConfigPrms-regionConfig = feed
           threadGroups = feed;
                  
INITTASK   taskClass   = durableClients.DurableClientsTest taskMethod  = initCQClient
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           // if useClientCache => true
           hydra.ConfigPrms-clientCacheConfig  = edge
           hydra.ConfigPrms-clientRegionConfig = edge
           threadGroups = edge,reference
           runMode = always;
           
INITTASK   taskClass = durableClients.DurableClientsTest taskMethod = mentionReferenceInBlackboard
           threadGroups = reference;
                                           
TASK        taskClass   = durableClients.Feeder    taskMethod  = feederTask
            threadGroups = feed	   ;
            
TASK       taskClass   = durableClients.DurableClientsTest taskMethod  = cqClientNormalShutDown
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           hydra.ConfigPrms-clientCacheConfig  = edge
           hydra.ConfigPrms-clientRegionConfig = edge
           threadGroups = edge
           maxTimesToRun = 3;
           
CLOSETASK   taskClass   = durableClients.Feeder    taskMethod  = closeTask
            threadGroups = feed;
            
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = waitForLastKeyReceivedAtClient
           threadGroups = reference,edge
           batch;                        
           
CLOSETASK   taskClass = durableClients.DurableClientsTest taskMethod = validateEventsReceived
           threadGroups = edge;            

// Servers need antlr jar for query support
hydra.VmPrms-extraClassPaths =
   fcn "hydra.TestConfigFcns.duplicate(\"$GEMFIRE/lib/antlr.jar\", ${bridgeHosts}, true)" ncf;

cq.CQUtilPrms-useCQ = true;
cq.CQUtilPrms-cqListener = durableClients.CQOpListener;
cq.CQUtilPrms-QueryServicePoolName = brloader;

