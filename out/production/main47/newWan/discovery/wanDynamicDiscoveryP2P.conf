//This tests is specific to Jayesh usecase. It won't be added in regression bts.
//Test has to configure with wanSites >= 7
 
//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_p2p_locator.inc;
include $JTESTS/newWan/wan.inc;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription="WAN test for Jayesh use case. Sites are added and removed and DistributedSystemListner invocation is verified.";

//------------------------------------------------------------------------------
// TEST CONFIGURATION
//------------------------------------------------------------------------------

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-maxResultWaitSec = ${resultWaitTime};

hydra.VmPrms-extraVMArgs =  "-Dgemfire.DistributedSystemListner=\"\"", "-Dgemfire.DistributedSystemListner=newWan.discovery.MyDistributedSystemListner",
							"-Dgemfire.DistributedSystemListner=\"\"", "-Dgemfire.DistributedSystemListner=newWan.discovery.MyDistributedSystemListner",
                            "-Dgemfire.DistributedSystemListner=\"\"", "-Dgemfire.DistributedSystemListner=newWan.discovery.MyDistributedSystemListner",
                            "-Dgemfire.DistributedSystemListner=\"\"", "-Dgemfire.DistributedSystemListner=newWan.discovery.MyDistributedSystemListner",
                            "-Dgemfire.DistributedSystemListner=\"\"", "-Dgemfire.DistributedSystemListner=newWan.discovery.MyDistributedSystemListner"
							;

THREADGROUP locatorSiteUp
  totalThreads = fcn ${wanSites} * ${locatorHostsPerSite} 
               * ${locatorVMsPerHost} * ${locatorThreadsPerVM} - 5 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
           (\"locator\", ${wanSites}, ${locatorHostsPerSite}, false, true)" ncf;
                      
THREADGROUP locatorSiteDown
  totalThreads = 1
  clientNames  = locator_1_1
  totalThreads = 1
  clientNames  = locator_2_1
  totalThreads = 1
  clientNames  = locator_3_1
  totalThreads = 1
  clientNames  = locator_4_1
  totalThreads = 1
  clientNames  = locator_5_1    
  ;
                                 
THREADGROUP peerNoOps
  totalThreads = fcn ${wanSites} * ${peerHostsPerSite}
               * ${peerVMsPerHost} * ${peerThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
                 (\"peer\", ${wanSites}, ${peerHostsPerSite}, false, true)" ncf;
                 
hydra.GemFirePrms-remoteDistributedSystems =
     fcn "newWan.WANTest.generateRingRemoteDSName
          (\"ds_\", ${wanSites}, ${locatorHostsPerSite})" ncf         
     ,
     none
     ;  

/** Configures the locators. */
INITTASK taskClass = newWan.WANTest taskMethod = createLocatorTask
         threadGroups = locatorSiteUp;
     
INITTASK taskClass = newWan.discovery.DynamicDiscoveryTest taskMethod = addDistributedSystemToWANTask
         threadGroups = locatorSiteUp;

INITTASK taskClass = newWan.discovery.DynamicDiscoveryTest taskMethod = waitForLocatorDiscoveryTask
         threadGroups = locatorSiteUp;
     
INITTASK taskClass = newWan.WANTest taskMethod = createLocatorTask
         threadGroups = locatorSiteDown;
         
INITTASK taskClass = newWan.discovery.DynamicDiscoveryTest taskMethod = removeDistributedSystemFromWANTask  
     threadGroups = locatorSiteDown ;
         
CLOSETASK taskClass = newWan.discovery.DynamicDiscoveryTest taskMethod = verifyRemoteSiteAddedTask  
     threadGroups = locatorSiteUp ;

CLOSETASK taskClass = newWan.discovery.DynamicDiscoveryTest taskMethod = verifyRemoteSiteRemovedTask  
     threadGroups = locatorSiteUp ;

CLOSETASK taskClass = newWan.discovery.DynamicDiscoveryBB taskMethod = printBlackboard
          threadGroups = locatorSiteUp, peerNoOps, locatorSiteDown;          

CLOSETASK taskClass = newWan.WANTest taskMethod = stopLocatorTask
         threadGroups = locatorSiteUp ;                  
