
hydra.GatewaySenderPrms-gatewayEventFilters = newWan.serial.filters.MyEventFilterBeforeEnqueue;

CLOSETASK taskClass = newWan.serial.filters.WanFilterTest taskMethod = doOpsForEventFilterTask  
     threadGroups = peer;
     
CLOSETASK taskClass = newWan.WANTest taskMethod = waitForQueuesToDrainTask
          threadGroups = peer;

CLOSETASK taskClass = newWan.WANTest taskMethod = printSequentialKeysTask
          threadGroups = peer;
                    
CLOSETASK taskClass = newWan.serial.filters.WanFilterTest taskMethod = validateDoOpsForEventFilterTask
          threadGroups = peer;
          
CLOSETASK taskClass = newWan.serial.filters.WanFilterTest taskMethod = removeEventFilterKeysTask
          threadGroups = peer;
                    
include $JTESTS/newWan/p2pKill.conf;

newWan.WANTestPrms-senderQueueRegionListener 	= none;
hydra.RegionPrms-cacheListeners	 = util.InvisibleSilenceListener;

hydra.Prms-testDescription="WAN test where each site is peer-to-peer in its own distributed system and each VM 
 is a gateway sender and gateway receiver to other sites. Each locator from a site connects to all locators from next site to form a ring topology between sites. 
 Each sender from a site connects to all other remote sites to form all-to-all topology. Peers does random operation and HA of other peers.
 Event filter is applied at all sender which filters out some keys. Validation check that filtered keys are present only in originating site
 and not present is other sites. Then each site removes their filter keys so that at the end all site has consistent data.";

               