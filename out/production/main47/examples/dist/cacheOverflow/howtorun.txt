There are 4 separate tests. To run these examples manually:

Test1 - this is running the equivalent of backupSync.conf
--------------------------------------------------------------------------------
1) Start a gemfire system:

$GEMFIRE/bin/gemfire start 

2) Create directories for overflow/backup.

mkdir dir1
mkdir dir2

3) Run the example to create a persistent backup. 

java -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow -backup -synchronous 3 10000 50 ./dir1 ./dir2

4) Run the example to verify we can read the persistent backup.

java -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow -backup -synchronous -validate 3 10000 50 ./dir1 ./dir2

5) Stop the gemfire system:

$GEMFIRE/bin/gemfire stop



Test2 - this is running the equivalent of backupAsync.conf
--------------------------------------------------------------------------------
1) Start a gemfire system:

$GEMFIRE/bin/gemfire start 

2) Create directories for overflow/backup. Remove them first if they already exist 
   from running the previous test.

mkdir dir1
mkdir dir2

3) Run the example to create a persistent backup. 

java -Xmx250m -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow -backup 3 10000 50 ./dir1 ./dir2

4) Run the example to verify we can read the persistent backup.

java -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow -backup -validate 3 10000 50 ./dir1 ./dir2

5) Stop the gemfire system:

$GEMFIRE/bin/gemfire stop


Test3 - this is running the equivalent of overflowSync.conf
--------------------------------------------------------------------------------
1) Start a gemfire system:

$GEMFIRE/bin/gemfire start 

2) Create directories for overflow/backup.

mkdir dir1
mkdir dir2

3) Run the example to create a persistent backup. 

java -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow -synchronous 3 10000 50 ./dir1 ./dir2

4) Stop the gemfire system:

$GEMFIRE/bin/gemfire stop



Test4 - this is running the equivalent of overflowAsync.conf
--------------------------------------------------------------------------------
1) Start a gemfire system:

$GEMFIRE/bin/gemfire start 

2) Create directories for overflow/backup.

mkdir dir1
mkdir dir2

3) Run the example to create a persistent backup. 

java -classpath $GEMFIRE/examples/dist/classes:$GEMFIRE/lib/gemfire.jar cacheOverflow.CacheOverflow 3 10000 50 ./dir1 ./dir2

4) Stop the gemfire system:

$GEMFIRE/bin/gemfire stop
