// functional tests
hdfs/parReg/concKnownKeysPersist.conf
  A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
  B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=5
  batchSizeMB=5 batchTimeInterval=5000
hdfs/parReg/concKnownKeysPersistEntryLRU.conf
  A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
  B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=1024
  batchSizeMB=5 batchTimeInterval=5000
hdfs/parReg/concKnownKeysPersistMemLRU.conf
  A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
  B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=10240
  batchSizeMB=5 batchTimeInterval=5000
hdfs/parReg/concKnownKeysPersistHeapLRU.conf
  A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
  B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=1024
  batchSizeMB=5 batchTimeInterval=5000

hdfs/parReg/serialParRegPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=2 redundantCopies=1
hdfs/parReg/concParRegPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=10 redundantCopies=1

// ----------------------------------------------------------
// parReg HA (HDFS) persist tests (until we add local persistence, don't recycle more vms than we have redundant copies
// ----------------------------------------------------------
hdfs/parReg/serialParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=2
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=2
   locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
   redundantCopies=1 numVMsToStop=1

hdfs/parReg/concParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
   redundantCopies=1 numVMsToStop=1

// ----------------------------------------------------------
// prColocation (HDFS) persist tests
// ----------------------------------------------------------
hdfs/parReg/colocationWithOpsHAPersist.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=7 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
   numKeys=10000 byteArraySize=5000 redundantCopies=1 numVMsToStop=1

// Streaming
hdfs/parReg/concKnownKeysStreaming.conf
   A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
   B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
   numKeys=10000 byteArraySize=5
   batchSizeMB=5 batchTimeInterval=5000

hdfs/parReg/serialParRegStreaming.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=2 redundantCopies=1
hdfs/parReg/concParRegStreaming.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=10 redundantCopies=1

hdfs/parReg/serialParRegHAStreaming.conf
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=2
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=2
   locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
   redundantCopies=1 numVMsToStop=1

hdfs/parReg/concParRegHAStreaming.conf
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   locatorHosts = 1 locatorVMsPerHost = 1 locatorThreadsPerVM = 1
   redundantCopies=1 numVMsToStop=1

hdfs/parReg/concKnownKeysMapReduce.conf
  peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=5
  batchSizeMB=5 batchTimeInterval=5000
  hdfsWriteOnly = true,false mapReduceClass = hdfs.mapreduce.KnownKeysMRv1

hdfs/parReg/concKnownKeysMapReduce.conf
  peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
  numKeys=10000 byteArraySize=5
  batchSizeMB=5 batchTimeInterval=5000
  hdfsWriteOnly = true,false mapReduceClass = hdfs.mapreduce.KnownKeysMRv2

// Streaming
hdfs/parReg/concKnownKeysStreaming.conf
   A=config configHosts=1  configVMsPerHost=1 configThreadsPerVM=1
   B=peer peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20
   numKeys=1000000 byteArraySize=5
   batchSizeMB=128 batchTimeInterval=600000


