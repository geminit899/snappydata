// Edit hostnames and point to a host <=> dir mapping file
// locator (and MasterController) are on host1.  Launch the test from host1
//hydra.HostPrms-hostNames =
      //<host1> // locator (and MasterController), launch the test from this host
      //<host2> <host3> <host4> <host5>
      //;

// Example for configuring hostNames
//hydra.HostPrms-hostNames =
      //hs21b // locator (and MasterController), launch the test from this host
      //hs21b hs21b
      //;

// Edit to point to your hostmap.prop file
//hydra.HostPrms-resourceDirBaseMapFileName = <fully qualified pathname to your hostmap.prop>;
// For example,
//hydra.HostPrms-resourceDirBaseMapFileName = /home/lhughes/bin/hosts/hostmap.prop;

// hadoop configuration, startup, shutdown
STARTTASK    taskClass = hdfs.HDFSUtil taskMethod = configureHadoopTask
             clientNames = peer1
             ;

STARTTASK    taskClass = hdfs.HDFSUtil taskMethod = startCluster
             clientNames = peer1
             ;

ENDTASK      taskClass = hdfs.HDFSUtil taskMethod = stopCluster
             clientNames = peer1
             ;

hydra.Prms-removeDiskFilesAfterTest = true;
hydra.Prms-alwaysDoEndTasks = true;

// HDFS settings
hydra.VmPrms-extraClassPaths +=
  fcn "hydra.TestConfigFcns.duplicate(\"none\", ${locatorHosts}, true)" ncf
  ,                          
  fcn "hydra.HadoopPrms.getServerJars(\"$HADOOP_DIST\", ${peerHosts})" ncf
  ;       

hydra.ConfigPrms-hadoopConfig = hadoop;
hydra.ConfigPrms-hdfsStoreConfig = hdfsstore;
hydra.ConfigPrms-cacheConfig  = cache;
hydra.ConfigPrms-regionConfig = region;

hydra.HadoopPrms-names = hadoop;

hydra.RegionPrms-dataPolicy    = hdfsPartition;
hydra.RegionPrms-diskStoreName = none;

hydra.RegionPrms-hdfsStoreName  = hdfsstore;
hydra.RegionPrms-hdfsWriteOnly  = false;           // Read-Write HFDS Store

hydra.DiskStorePrms-names = hdfsDiskStore;
hydra.DiskStorePrms-queueSize = 1200;
hydra.DiskStorePrms-diskDirNum = 1;
hydra.DiskStorePrms-diskDirSizes = 30000;

hydra.HDFSStorePrms-names = hdfsstore;
hydra.HDFSStorePrms-hadoopName = hadoop;
hydra.HDFSStorePrms-diskStoreName = hdfsDiskStore;
hydra.HDFSStorePrms-batchSizeMB = 5;
hydra.HDFSStorePrms-homeDir = gemfire_data;
hydra.HDFSStorePrms-maximumQueueMemory = 100;
hydra.HDFSStorePrms-persistent = true;


// not used in this test, available for tuning tests
// uncomment and set as needed
//hydra.HDFSStorePrms-autoCompaction = false;
//hydra.HDFSStorePrms-autoMajorCompaction = false;
//hydra.HDFSStorePrms-batchTimeInterval = 5000;
//hydra.HDFSStorePrms-blockCacheSize = ????;
//hydra.HDFSStorePrms-diskSynchronous = true/false;
//hydra.HDFSStorePrms-fileRolloverInterval = ????;
//hydra.HDFSStorePrms-maxFileSize = ????;

// for now, do not attempt to re-initialize regions based on generated cache.xml files
util.CachePrms-useDeclarativeXmlFile = false;
