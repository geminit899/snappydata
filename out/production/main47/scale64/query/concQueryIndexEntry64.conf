hydra.Prms-testRequirement = "Test queries with 64 bit, based on query/concQueryIndexEntry.conf";
hydra.Prms-testDescription = "
Test validate entry operations and querying.

The test uses one region, a distributed scope and mirroring of keys
and values. There is a listener, that increments a blackboard counter
for each event, installed in the region for each VM.

The test executes a task that creates/updates/invalidates/destroys/query
in a region, then waits for the listener counters to reach
the required number, indicating the event was received in a VM.
";
INCLUDE $JTESTS/query/concQueryIndexEntry.conf;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;
hydra.ClientPrms-vmQuantities = 1 1 1;

// first load the regions to a 64-bit capacity
INITTASK     taskClass   = query.QueryTest taskMethod  = HydraTask_load
             batch;


util.RegionDefPrms-regionSpecs = "
   specName = region1:
       scope = ack, noack: 
       dataPolicy = replicate: 
       statisticsEnabled = true:
       valueConstraint = objects.Portfolio:
       indexMaintenanceSynchronous = true false:
   ";

util.RegionDefPrms-VMRegionSpecName = region1 ;

hydra.Prms-totalTaskTimeSec = 3600;
hydra.Prms-maxResultWaitSec = 1200;

event.EventPrms-maxObjects = 1073741824;
hydra.VmPrms-extraVMArgs += -Xms6g -Xmx6g;
hydra.VmPrms-extraVMArgsSUN += -XX:+UseParNewGC
                            -XX:+UseConcMarkSweepGC
                            -XX:+DisableExplicitGC;
hydra.log.LogPrms-file_maxKBPerVM = 25000;
query.QueryPrms-payloadSize = 2048;
// maxObjects puts this many entries in each of numOfRegins regions in each vm.
// Each vm should contain about 4g of data spread across numOfRegins regions
event.EventPrms-maxObjects = 1600000;
query.QueryPrms-numOfRegions = 2;


