//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_hct_locator.inc;
include $JTESTS/wan/wan.inc;
include $JTESTS/wan/hct.inc;

// evenly distribute the clients to servers
hydra.PoolPrms-contactAlgorithm = hydra.EdgeHelper
                                  getRoundRobinEndpointsInWanHctSite;
hydra.PoolPrms-contactNum = 1;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription="WAN test where each cache server is a bridge for the edge clients at its site and is a WAN gateway hub to other cache servers.";

//------------------------------------------------------------------------------
// INITIALIZATION WORK (configure locators, caches, hubs, gateways)
//------------------------------------------------------------------------------

/**
 * Starts the locators and connects them to admin-only distributed systems.
 */
INITTASK taskClass = wan.WANClient taskMethod = createLocatorTask
         threadGroups = locator;
INITTASK taskClass = wan.WANClient taskMethod = startAndConnectLocatorTask
         threadGroups = locator;

/**
 * Configures the bridge server cache and preloads the data.
 */
INITTASK taskClass = wan.WANClient taskMethod = initServerCacheTask
         threadGroups = bridge;
INITTASK taskClass = wan.WANClient taskMethod = createSequentialKeysUsingPutAllTask
         batch
         wan.CacheClientPrms-batchSize = 10000
         threadGroups = bridge;
INITTASK taskClass = wan.WANClient taskMethod = startGatewayHubTask
         threadGroups = bridge;

/**
 * Configures the edge client cache.
 */
INITTASK taskClass = wan.WANClient taskMethod = initEdgeClientCacheTask
         threadGroups = edge;

//------------------------------------------------------------------------------
// PRIMARY WORKLOAD (cache operations)
//------------------------------------------------------------------------------

TASK taskClass = wan.WANClient taskMethod = putSequentialKeysWithDrainTask
     wan.CacheClientPrms-batchSize = 25
     threadGroups = edge;

// this puts 25 * ${entrySize} * 1000 bytes before waiting for drain,
// goal is to overflow some but not too much (remember that each
// entry is put 1000 times), to use low amount of queue space
hydra.GatewayPrms-maximumQueueMemory = 10;
wan.CacheClientPrms-numEntries = ${numEntries};
wan.CacheClientPrms-numPutAllEntries = 100; // do not randomize in this test
// to avoid having each wan site initialize with different numbers of entries
wan.CacheClientPrms-sleepSec = 0;
wan.CacheClientPrms-objectType = objects.PSTObject;
objects.PSTObjectPrms-size = ${entrySize};

// Note that this applies to more than the putSequentialKeys task 
// iterations is also used by the validation task
wan.CacheClientPrms-iterations = 100;

//------------------------------------------------------------------------------
// SHUTDOWN WORK (validate and close)
//------------------------------------------------------------------------------

//CLOSETASK taskClass = wan.WANClient taskMethod = printSequentialKeysTask
//          threadGroups = edge;
CLOSETASK taskClass = wan.WANClient taskMethod = validateSequentialKeysTask
          threadGroups = edge;
CLOSETASK taskClass = wan.WANClient taskMethod = closeEdgeClientCacheTask
          threadGroups = edge;
//CLOSETASK taskClass = wan.WANBlackboard taskMethod = printBlackboard
//          threadGroups = edge;
CLOSETASK taskClass = wan.WANClient taskMethod = closeServerCacheTask
          threadGroups = bridge;

THREADGROUP edge
  totalThreads = fcn ${wanSites} * ${edgeHostsPerSite}
                   * ${edgeVMsPerHost} * ${edgeThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
                 (\"edge\", ${wanSites}, ${edgeHostsPerSite}, false, true)" ncf;

//------------------------------------------------------------------------------
// TEST TERMINATION
//------------------------------------------------------------------------------

hydra.Prms-maxResultWaitSec = 6000;
hydra.Prms-totalTaskTimeSec = 900;

hydra.log.LogPrms-file_maxKBPerVM = 25000;

hydra.VmPrms-extraVMArgsSUN += -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+DisableExplicitGC;
hydra.VmPrms-extraVMArgs += "-XX:CMSInitiatingOccupancyFraction=33";
