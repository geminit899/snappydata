INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;  
INCLUDE $JTESTS/management/test/federation/federationTopology_hct.inc;
INCLUDE $JTESTS/management/test/jmx/inc/jmx.inc;
INCLUDE $JTESTS/management/operations/operations.inc;
INCLUDE $JTESTS/management/operations/regionDefinitions.inc;

hydra.Prms-testDescription = 
  "Tests CacheServerMBean with testCases : doClientHA
   ";

//managed1 and managed2 group is gemfire cacheServer here                          
THREADGROUP bridgeThreads 
			totalThreads = fcn 
								(${managed_1_Hosts}) + (${managed_2_Hosts}) 
						   ncf 
			totalVms =     fcn 
								${managed_1_Hosts} + ${managed_2_Hosts} 
						   ncf  
			clientNames =  fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_1\", ${managed_1_Hosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_2\", ${managed_2_Hosts}, true)"
                           ncf                          
                          ;
                          
THREADGROUP edgeThreads 
			totalThreads = fcn 
								(${edge_Hosts}) 
						   ncf 
			totalVms = ${edge_Hosts}  
			clientNames = fcn "hydra.TestConfigFcns.generateNames
                               (\"edge\", ${edge_Hosts}, true)"
                          ncf;
                          
management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.CacheServerMXBean',
	'templateObjectName' : 'GemFire:service=CacheServer',
	'type' : 'cacheServer',	
	'tests' : [	
		'doClientHA'
	]	
}";


INITTASK 
	taskClass   = util.StopStartVMs  
	taskMethod = StopStart_initTask
	threadGroups = default;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_startWithBridgeServer
  runMode = always
  threadGroups = bridgeThreads;  

INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createRegionsOnBridge
  runMode = always
  threadGroups = bridgeThreads;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createRegionsOnEdge
  runMode = always
  threadGroups = edgeThreads;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createQueryResources
  runMode = always
  threadGroups = edgeThreads, bridgeThreads;  
  

//util.StopStartPrms-stopModes = ONEOF MEAN_KILL NICE_EXIT NICE_KILL FOENO;
util.StopStartPrms-stopModes = MEAN_KILL;

management.jmx.JMXPrms-sleepTimeFactor = 5;
management.jmx.JMXPrms-regionListToStartWith = ReplicatedAckBridge ReplicatedAckEdge;
management.jmx.JMXPrms-printEventsList = EVENT_REGION_ADDED EVENT_REGION_DESTROYED;

hydra.BridgePrms-names = managed_gemfire_bridge;	                      
hydra.BridgePrms-maxThreads = ONEOF default 16 FOENO; // selector control

management.test.federation.FederationPrms-rmiConnectorType = custom;

hydra.log.LogPrms-file_logLevel = fine;
//hydra.GemFirePrms-logLevel = fine;
hydra.CachePrms-names = cache1;
hydra.Prms-serialExecution  = true;
hydra.Prms-totalTaskTimeSec = ${duration};