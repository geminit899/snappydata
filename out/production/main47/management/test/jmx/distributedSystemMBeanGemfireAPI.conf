INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;  
INCLUDE $JTESTS/management/test/federation/federationTopology.inc;
INCLUDE $JTESTS/management/test/jmx/inc/jmxGemfire.inc;
INCLUDE $JTESTS/management/operations/operations.inc;
INCLUDE $JTESTS/management/operations/regionDefinitions.inc;

hydra.Prms-testDescription = 
  "Tests DistributeSystemMBean : checkDSRuntime, checkDSRuntimeMetrics, checkStatistics, checkDiskStoreStatistics, checkWANStatistics
	backupAllMembers, fetchMemberConfiguration, fetchMemberUpTime, fetchJVMMetrics, fetchOSMetrics
	fetchNetworkMetric, fetchDiskMetrics, shutDownAllMembers, revokeMissingDiskStores, listMissingDiskStores
    This test uses gemfire MBean Proxy API on manager node to perform mbean operations
   ";

//managed1 and managed2 group is gemfire cacheServer here                          
THREADGROUP bridgeThreads 
			totalThreads = fcn 
								(${managed_1_Hosts}) + (${managed_2_Hosts}) 
						   ncf 
			totalVms =     fcn 
								${managed_1_Hosts} + ${managed_2_Hosts} 
						   ncf  
			clientNames =  fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_1\", ${managed_1_Hosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_2\", ${managed_2_Hosts}, true)"
                           ncf                          
                          ;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createRegionsOnBridge
  runMode = always
  threadGroups = bridgeThreads;

management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.DistributedSystemMXBean',
	'templateObjectName' : 'GemFire:service=System,type=Distributed',
	'type' : 'distributedSystem',	
	'tests' : [
		'checkDSRuntime',
		'checkDSRuntimeMetrics',
		'checkStatistics',
		'checkDiskStoreStatistics',
		'checkWANStatistics',
		'backupAllMembers',
		'fetchMemberConfiguration',
		'fetchMemberUpTime',
		'fetchJVMMetrics',
		'fetchOSMetrics',
		'fetchDiskMetrics',
		'fetchNetworkMetric',
		'shutDownAllMembers',
		'revokeMissingDiskStores',
		'listMissingDiskStores',
	]	
}";

management.jmx.JMXPrms-sleepTimeFactor = 5;
management.jmx.JMXPrms-regionListToStartWith = ReplicatedAckBridge ReplicatedAckEdge;
management.jmx.JMXPrms-printEventsList = EVENT_REGION_ADDED EVENT_REGION_DESTROYED;
management.jmx.JMXPrms-useGemfireProxies = true;

management.operations.OperationPrms-regionList = ReplicatedAckBridge ReplicatedNoAckBridge PersistentReplicatedBridge PartitionBridge OperationsRegion;
management.operations.OperationPrms-regionOperations  = ONEOF add invalidate invalidate invalidate invalidate invalidate FOENO;
  
management.test.federation.FederationPrms-rmiConnectorType = custom;

hydra.log.LogPrms-file_logLevel = fine;
//hydra.GemFirePrms-logLevel = fine;
hydra.CachePrms-names = cache1;
hydra.Prms-serialExecution  = true;
hydra.Prms-totalTaskTimeSec = ${duration};