INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/management/test/federation/federationTopology.inc;
INCLUDE $JTESTS/management/test/jmx/inc/jmx.inc;
INCLUDE $JTESTS/management/operations/operations.inc;
INCLUDE $JTESTS/management/operations/regionDefinitions.inc;

hydra.Prms-testDescription = 
  "Tests DistributeSystemMBean : restartMembers
  ";

//managed1 and managed2 group is gemfire cacheServer here                          
THREADGROUP bridgeThreads 
			totalThreads = fcn 
								(${managed_1_Hosts}) + (${managed_2_Hosts}) 
						   ncf 
			totalVms =     fcn 
								${managed_1_Hosts} + ${managed_2_Hosts} 
						   ncf  
			clientNames =  fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_1\", ${managed_1_Hosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_2\", ${managed_2_Hosts}, true)"
                           ncf                          
                          ;
                          
management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.DistributedSystemMXBean',
	'templateObjectName' : 'GemFire:service=System,type=Distributed',
	'type' : 'distributedSystem',	
	'tests' : [
		'restartMembers'
	]	
}";     
                              
INITTASK 
	taskClass   = util.StopStartVMs  
	taskMethod = StopStart_initTask
	threadGroups = default, jmxThreads;	
	
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createRegionsOnBridge
  runMode = always
  threadGroups = bridgeThreads;  
  
util.StopStartPrms-stopModes = ONEOF MEAN_EXIT MEAN_KILL NICE_EXIT NICE_KILL FOENO;
management.jmx.JMXPrms-sleepTimeFactor = 5;
management.jmx.JMXPrms-regionListToStartWith = ReplicatedAckBridge ReplicatedAckEdge;
management.jmx.JMXPrms-printEventsList = EVENT_REGION_ADDED EVENT_REGION_DESTROYED;

management.operations.OperationPrms-regionList = ReplicatedAckBridge ReplicatedNoAckBridge PersistentReplicatedBridge PartitionBridge OperationsRegion;
management.operations.OperationPrms-regionOperations  = ONEOF add invalidate invalidate invalidate invalidate invalidate FOENO;
  
management.test.federation.FederationPrms-rmiConnectorType = custom;

hydra.log.LogPrms-file_logLevel = fine;
//hydra.GemFirePrms-logLevel = fine;
hydra.CachePrms-names = cache1;
hydra.Prms-serialExecution  = true;
hydra.Prms-totalTaskTimeSec = ${duration};