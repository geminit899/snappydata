INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;  
INCLUDE $JTESTS/hydraconfig/topology_2.inc;


// A = managers B = managed

hydra.GemFirePrms-jmxManager  = fcn "hydra.TestConfigFcns.duplicate
                                   (\"true\", ${${A}Hosts})"
                              ncf
                              fcn "hydra.TestConfigFcns.duplicate
                                   (\"false\", ${${B}Hosts})"
                              ncf
							  ;
							  
hydra.GemFirePrms-jmxManagerPort  = fcn "hydra.TestConfigFcns.duplicate
                                   (\"true\", ${${A}Hosts})"
                              ncf
                              fcn "hydra.TestConfigFcns.duplicate
                                   (\"false\", ${${B}Hosts})"
                              ncf;                              

hydra.GemFirePrms-jmxManagerStart  = fcn "hydra.TestConfigFcns.duplicate
                                   (\"true\", ${${A}Hosts})"
                              ncf
                              fcn "hydra.TestConfigFcns.duplicate
                                   (\"false\", ${${B}Hosts})"
                              ncf;
                              
THREADGROUP managingThreads
    totalThreads = fcn ${${A}Hosts} * ${${A}VMsPerHost} ncf
    totalVms = fcn ${${A}Hosts} * ${${A}VMsPerHost} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;


THREADGROUP jmxThreads
    totalThreads = fcn ${${B}Hosts} * ${${B}VMsPerHost} 
                                    +
                       ${${A}Hosts} * ${${A}VMsPerHost}
                   ncf
	totalVMs = fcn ${${B}Hosts} * ${${B}VMsPerHost}
                                    +
                       ${${A}Hosts} * ${${A}VMsPerHost}
                   ncf                   
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf
                   ,
                   fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf
                   ;
                   
STARTTASK
  taskClass = management.operations.ops.JMXOperations 
  taskMethod = HydraStartTask_ReadMbeanDescriptors
  ;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_initialize
  runMode = always
  threadGroups = jmxThreads;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_becomeManager
  threadGroups = managingThreads
  runMode = always;
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_setUpJMXListeners
  runMode = always
  threadGroups = managingThreads, jmxThreads;    
  
TASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraTask_jmxOperations
  maxTimesToRun = ${jmxIterations}
  threadGroups = jmxThreads
  ;  
  
CLOSETASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraCloseTask_validateNotifications 
  threadGroups = jmxThreads 
  ;

management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.MemberMXBean',
	'templateObjectName' : 'GemFire:type=Member',
	'type' : 'member',	
	'tests' : [
		'cacheStopStart'
	]	
}";

hydra.VmPrms-extraClassPaths = $GEMFIRE/lib/antlr.jar $GEMFIRE/lib/gemfire.jar $GEMFIRE/lib/gfsh-dependencies.jar;
hydra.VmPrms-extraVMArgs = "-Dgemfire.enableManagement=true";

management.test.federation.FederationPrms-rmiConnectorType = custom;
management.jmx.JMXPrms-printEventsList = EVENT_REGION_ADDED EVENT_REGION_DESTROYED;
management.jmx.JMXPrms-sleepTimeFactor = 5;

//Does not add regions needed only to consume reference to this property
management.operations.OperationPrms-regionList = OperationsRegion OperationsRegion;
  

hydra.log.LogPrms-file_logLevel = fine;
//hydra.GemFirePrms-logLevel = fine;
hydra.CachePrms-names = cache1;
hydra.Prms-serialExecution  = true;
hydra.Prms-totalTaskTimeSec = ${duration};                           
