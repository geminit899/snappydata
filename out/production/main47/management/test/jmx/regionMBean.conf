INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/management/test/federation/federationTopology.inc;
INCLUDE $JTESTS/management/test/jmx/inc/jmx.inc;
INCLUDE $JTESTS/management/operations/operations.inc;
INCLUDE $JTESTS/management/operations/regionDefinitions.inc;

hydra.Prms-testDescription = 
  "Tests RegionMBean and distributedRegionMBean : 
   checkRegionStatistics, checkRegionRuntimeAttributes, checkRegionConfigAttributes
  ";
  
management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.RegionMXBean',
	'templateObjectName' : 'GemFire:service=Region',
	'type' : 'region',	
	'tests' : [		
		'checkRegionStatistics',
		'checkRegionRuntimeAttributes',
		'checkRegionConfigAttributes'
	]	
}";

management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.DistributedRegionMXBean',
	'templateObjectName' : 'GemFire:service=Region,name=(.*?),type=Distributed',
	'type' : 'distributedRegion',	
	'tests' : [		
		'checkRegionStatistics',
		'checkRegionRuntimeAttributes',
		'checkRegionConfigAttributes'
	]	
}";    
  
management.jmx.JMXPrms-mbeanSpec += "{
	'class' : 'com.gemstone.gemfire.management.MemberMXBean',
	'templateObjectName' : 'GemFire:type=Member',
	'type' : 'member',	
	'tests' : [
		'checkRegionCounters',
		'checkRegionLatencyCounters',
		'checkRegionRateCounters',
		'checkGemfireDiskCounters',
		'checkGemfireLruCounters',
		'checkGIICounters',
		'checkGemfireSerializationCounters',
	]	
}";   

//managed1 and managed2 group is gemfire cacheServer here                          
THREADGROUP bridgeThreads 
			totalThreads = fcn 
								(${managed_1_Hosts}) + (${managed_2_Hosts}) 
						   ncf 
			totalVms =     fcn 
								${managed_1_Hosts} + ${managed_2_Hosts} 
						   ncf  
			clientNames =  fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_1\", ${managed_1_Hosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_2\", ${managed_2_Hosts}, true)"
                           ncf                          
                          ;
  

     
  
INITTASK
  taskClass = management.test.jmx.JMXTest
  taskMethod = HydraInitTask_createRegionsOnBridge
  runMode = always
  threadGroups = bridgeThreads;    

management.jmx.JMXPrms-sleepTimeFactor = 5;
management.jmx.JMXPrms-regionListToStartWith = ReplicatedAckBridge ReplicatedAckEdge;
management.jmx.JMXPrms-printEventsList = EVENT_REGION_ADDED EVENT_REGION_DESTROYED;

management.operations.OperationPrms-regionList = ReplicatedAckBridge ReplicatedNoAckBridge PersistentReplicatedBridge PartitionBridge OperationsRegion;
management.operations.OperationPrms-regionOperations  = ONEOF add invalidate invalidate invalidate invalidate invalidate FOENO;
  
management.test.federation.FederationPrms-rmiConnectorType = custom;

hydra.log.LogPrms-file_logLevel = fine;
//hydra.GemFirePrms-logLevel = fine;
hydra.CachePrms-names = cache1;
hydra.Prms-serialExecution  = true;
hydra.Prms-totalTaskTimeSec = ${duration};