
hydra.Prms-testDescription = " 
  This test verifies same set of mbeans exist on managed node as well managing node. 
  Test registers/unregisters bunch of mbeans and verifies the set at then of end 
  the test
";
  
INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;  
INCLUDE $JTESTS/management/test/federation/federationTopology.inc;
INCLUDE $JTESTS/management/test/federation/federation.inc;

THREADGROUP managedThreads 
			totalThreads = fcn 
								(${managed_1_Hosts}*${managing_1_VMsPerHost}) +  (${managed_2_Hosts}*${managing_1_VMsPerHost})    
						   ncf 
			totalVms =     fcn 
								(${managed_1_Hosts}*${managing_1_VMsPerHost}) +  (${managed_2_Hosts}*${managing_1_VMsPerHost})  
						   ncf  
			clientNames =  fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_1\", ${managed_1_Hosts}, true)"
                           ncf
                           ,
                           fcn "hydra.TestConfigFcns.generateNames
                               (\"managed_2\", ${managed_2_Hosts}, true)"
                           ncf
                           ;

TASK
  taskClass = management.test.federation.FederationTest
  taskMethod = HydraTask_RegisterMBean
  threadGroups = default, managedThreads;
  
TASK
  taskClass = management.test.federation.FederationTest
  taskMethod = HydraTask_UnRegisterMBean
  threadGroups = default, managedThreads;

TASK
  taskClass = management.test.federation.FederationTest
  taskMethod = HydraTask_RestartManaging
  maxTimesToRun = ${restartManagingNodesTimes}
  maxThreads = 1
  threadGroups = managedThreads;

CLOSETASK
  taskClass = management.test.federation.FederationTest
  taskMethod = HydraCloseTask_verifyMBeanSet
  threadGroups = managedThreads; 
  

management.test.federation.FederationPrms-mbeanInitSet = "management.test.federation.mbeans.CustomBean1" "management.test.federation.mbeans.CustomBean2";
management.test.federation.FederationPrms-mbeanSet = ONEOF management.test.federation.mbeans.CustomBean1 management.test.federation.mbeans.CustomBean2 FOENO; 
management.test.federation.FederationPrms-rmiConnectorType = custom;
management.test.federation.FederationPrms-taskWaitTime = 2000;
management.test.federation.FederationPrms-registerForNotifications  =true;

util.StopStartPrms-numVMsToStop = RANGE 0 ${managing_1_Hosts} EGNAR;
util.StopStartPrms-stopModes = ONEOF MEAN_EXIT MEAN_KILL NICE_EXIT NICE_KILL FOENO;
 
hydra.CachePrms-names = cache1;

hydra.Prms-serialExecution  = false;
hydra.Prms-totalTaskTimeSec = 90; 