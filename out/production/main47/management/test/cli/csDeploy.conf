hydra.Prms-testRequirement = "Test Gfsh commands deploy, list-deployed, undeploy";
hydra.Prms-testDescription = "

";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct_locator.inc;

THREADGROUP locatorThreads
    totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                       * ${locatorThreadsPerVM}
                   ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"locator\", ${locatorHosts}, true)"
                   ncf;
THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;

INITTASK taskClass     = util.StopStartVMs  taskMethod = StopStart_initTask
         threadGroups = bridgeThreads,edgeThreads;

INITTASK taskClass = diskRecovery.StartupShutdownTest taskMethod = createLocatorTask
         threadGroups = locatorThreads;

INITTASK taskClass = diskRecovery.StartupShutdownTest taskMethod = startAndConnectLocatorTask
         threadGroups = locatorThreads;

INITTASK taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_initialize
         threadGroups = bridgeThreads;

INITTASK taskClass    = management.test.cli.CommandTest
         taskMethod   = HydraTask_initializeRegions
         threadGroups = bridgeThreads;

INITTASK taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_initializeClient
         management.test.cli.CommandPrms-createClientRegions=true
         threadGroups = edgeThreads;

INITTASK taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_createXmlFile
         threadGroups = bridgeThreads;

INITTASK taskClass     = management.test.cli.CommandBB taskMethod = HydraTask_logBB;

//TASK     taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_sleep
//         threadGroups = bridgeThreads
//         maxTimesToRun = 1;

TASK     taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_deployTest
         threadGroups = bridgeThreads
         maxTimesToRun = 1;

hydra.VmPrms-extraClassPaths += $GEMFIRE/lib/gfsh-dependencies.jar;

hydra.Prms-totalTaskTimeSec = 60; // test is workload based

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;
hydra.Prms-maxResultWaitSec = 900;

INCLUDE $JTESTS/management/test/cli/regions.inc;

// define the bridge servers
hydra.BridgePrms-names                = bridge;

// define the edge clients
hydra.PoolPrms-names                  = edgeDescript;
hydra.PoolPrms-minConnections         = 2;
hydra.PoolPrms-subscriptionEnabled    = true;
hydra.PoolPrms-threadLocalConnections = false;
hydra.PoolPrms-readTimeout            = 3600000; // hydra will hang first
hydra.PoolPrms-subscriptionRedundancy = 3;


management.jmx.JMXPrms-sleepTimeFactor = 5;
