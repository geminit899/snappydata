hydra.Prms-testRequirement = "
Test disk file conversion from pre-7.0 (defined by oldVersion as 651, 664) to 7.0 with shared disk stores after the conversion.";
hydra.Prms-testDescription = "
"; 
   
INCLUDE $JTESTS/management/test/cli/diskRecovery/rvvConvertMultiDiskStoreCli.inc;
   
CLOSETASK    taskClass   = diskRecovery.RecoveryTest  taskMethod = HydraTask_verifyPRs
             threadGroups = newVersionThreads;

hydra.RegionPrms-names              = replicateOverflow
                                      replicatePersist
                                      replicatePersistOverflow;
hydra.RegionPrms-dataPolicy         = replicate persistentReplicate persistentReplicate;
hydra.RegionPrms-scope              = ONEOF ack noAck global FOENO 
                                      ONEOF ack noAck global FOENO
                                      ONEOF ack noAck global FOENO;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;
// fool hydra; diskStore names will be randomly chosen at runtime from hydra.DiskStorePrms.names, but hydra requires
// it get defined here anyway
hydra.RegionPrms-diskStoreName      = notUsed;
hydra.RegionPrms-evictionAttributes = lruEntryCount 10 overflowToDisk, none, lruEntryCount 10 overflowToDisk;
hydra.RegionPrms-diskSynchronous    = ONEOF true false FOENO;

hydra.DiskStorePrms-autoCompact          = true;

diskRecovery.RecoveryPrms-numRootRegions = 30;
diskRecovery.RecoveryPrms-numSubregions = 3;
diskRecovery.RecoveryPrms-regionHierarchyDepth = 2;
diskRecovery.RecoveryPrms-maxNumEntriesPerRegion = 200;
// todo@lhughes -- add support for ShutDownAll with gfsh (separate Admin VM)?
//diskRecovery.RecoveryPrms-useShutDownAll = ONEOF true false FOENO;
diskRecovery.RecoveryPrms-useShutDownAll = false;

hydra.VmPrms-extraClassPaths += $GEMFIRE/lib/gfsh-dependencies.jar;
hydra.GemFirePrms-jmxManagerPort=true; // required to have hydra autogenerate a port
util.CliHelperPrms-executeRemote=false;
util.CliHelperPrms-useCli=true;

