hydra.Prms-testRequirement = "Test Gfsh commands deploy, list-deployed, undeploy";
hydra.Prms-testDescription = "

";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p_4_locator.inc;

THREADGROUP locatorThreads
    totalThreads = fcn ${locatorHosts} * ${locatorVMsPerHost}
                                       * ${locatorThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"locator\", ${locatorHosts}, true)"
                   ncf;    
THREADGROUP accessorThreads
    totalThreads = fcn ${${A}Hosts} * ${${A}VMsPerHost}
                                    * ${${A}ThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP dataStoreThreads
    totalThreads = fcn ${${B}Hosts} * ${${B}VMsPerHost}
                                    * ${${B}ThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;
THREADGROUP adminThreads
    totalThreads = fcn ${${C}Hosts} * ${${C}VMsPerHost}
                                    * ${${C}ThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${C}\", ${${C}Hosts}, true)"
                   ncf;
THREADGROUP cliThreads
    totalThreads = fcn ${${D}Hosts} * ${${D}VMsPerHost}
                                    * ${${D}ThreadsPerVM}
                   ncf     
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${D}\", ${${D}Hosts}, true)"
                   ncf;

INITTASK taskClass    = util.StopStartVMs  taskMethod = StopStart_initTask
         threadGroups = accessorThreads, dataStoreThreads;

// init locators
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_createLocator
         runMode      = always
         threadGroups = locatorThreads;
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_startLocatorAndDS
         runMode      = always
         threadGroups = locatorThreads;

// init dataStore members 
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_configurableInit
         runMode      = always
         management.test.cli.CommandPrms-numMembersJoinDSOnly=${numMembersJoinDSOnly}
         management.test.cli.CommandPrms-numMembersCreateCacheOnly=${numMembersCreateCacheOnly}
         management.test.cli.CommandPrms-numMembersToHostRegion=${numDataStoreMembersToHostRegion}
         threadGroups = dataStoreThreads;

// writing region names to blackboard after creating dataStore regions is used to create proxy regions
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_writeRegionNamesToBB
         threadGroups = accessorThreads, dataStoreThreads, locatorThreads;

// init proxy members 
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_configurableInit
         management.test.cli.CommandPrms-createProxyRegions=true 
         runMode      = always
         threadGroups = accessorThreads;

// init admin
INITTASK taskClass = util.AdminHelper  taskMethod = HydraTask_initializeAdminDS
         threadGroups = adminThreads;

// initialize the jvms to run the CLI
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_logBBs;
INITTASK taskClass    = management.test.cli.CommandTest taskMethod = HydraTask_initAndConnectCLI
         threadGroups = cliThreads;

TASK     taskClass     = management.test.cli.CommandTest taskMethod = HydraTask_deployTest
         threadGroups = cliThreads
         maxTimesToRun = 1;

util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;

hydra.VmPrms-extraClassPaths += $GEMFIRE/lib/gfsh-dependencies.jar;

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-serialExecution = true;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;
hydra.Prms-maxResultWaitSec = 900;

INCLUDE $JTESTS/management/test/cli/regions.inc;
hydra.RegionPrms-poolName           = none; // override pool settings in regions.inc

util.ValueHolderPrms-useExtraObject=false;

// gfsh connection/manager settings
hydra.GemFirePrms-jmxManagerPort=true; // required to have hydra autogenerate a port

