INCLUDE $JTESTS/query/remote/remoteQueryTopology3.inc; //It contains 3 client configurations each for bridge, edge, feed(special edge, with different region attrs) 

hydra.Prms-testDescription = 
"Tests to illustrate remote OQL testing with hydra framework
Start 2 servers with mirroring turned on.
Connect 2 clients, one client connected to the one server and other with other server. ( say client1 -> server1 and client 2 -> server2 ) 
Populated data from client1 and fire query from client2.
Validate the result type and some data which has been populated from client1
";

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 600;

hydra.Prms-serialExecution = false;

hct.HctPrms-regionName = DefaultRegion;
query.QueryPrms-queryStrings =  
"select distinct * from /DefaultRegion"  
"select distinct * from /DefaultRegion qryP WHERE qryP.status= 'active'"    
"select distinct * from /DefaultRegion qryP WHERE qryP.status = 'inactive'" 
;
	
query.QueryPrms-resultsValidator= "query.remote.DataVerificationQueryResultsValidator";


hydra.ClientPrms-vmThreads =
  fcn "hydra.TestConfigFcns.duplicate(\"1\", ${bridgeHosts})" ncf // bridges
  fcn "hydra.TestConfigFcns.duplicate(\"4\", ${edgeHosts})" ncf // edges
  1; // feed
  
INITTASK   	taskClass  =  query.remote.RemoteQueryTest 		taskMethod = initQuery
        	threadGroups = edge;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = updateRegionEntries
        	threadGroups = feed
        	maxTimesToRun = 50 ;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = performQuery
        	threadGroups = edge , default
        	maxTimesToRun = 50 ;

