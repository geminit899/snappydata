INCLUDE $JTESTS/query/remote/remoteQueryTopology2.inc;
hydra.Prms-testDescription = 
"Tests to illustrate remote OQL testing with hydra framework
Connect 2 clients against one server.
Populate some data from client 1.
Fire query from client 2 and validate the results type ( Resultset or Structset) and verify some data.
Update the data from client 2 and fire the query from client 1 and verify the results. Updated data should be found through the query.
";

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 600;

hydra.Prms-serialExecution = true;

hct.HctPrms-regionName = DefaultRegion;

query.QueryPrms-queryStrings =  
"select distinct * from /DefaultRegion"  
"select distinct * from /DefaultRegion qryP WHERE qryP.status= 'active'"    
"select distinct * from /DefaultRegion qryP WHERE qryP.status = 'inactive'" 
"select * from /DefaultRegion"
"select p from  /DefaultRegion p"
"select ALL * from /DefaultRegion"
"select * from /DefaultRegion.values";

query.QueryPrms-resultsValidator= "query.remote.DataVerificationQueryResultsValidator";

hydra.ClientPrms-vmThreads =
  fcn "hydra.TestConfigFcns.duplicate(\"1\", ${bridgeHosts})" ncf // bridges
  4; // edges


TASK    taskClass   = query.remote.RemoteQueryTest    taskMethod  = updateRegionEntries
        threadGroups = edgeInit, default;

TASK    taskClass   = query.remote.RemoteQueryTest    taskMethod  = performQuery
        threadGroups = edgeInit, default;

