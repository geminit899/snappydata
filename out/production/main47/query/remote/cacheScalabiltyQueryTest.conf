INCLUDE $JTESTS/query/remote/remoteQueryTopology3.inc; //It contains 3 client configurations each for bridge, edge, feed(special edge, with different region attrs) 

hydra.Prms-testDescription = 
"Tests to illustrate Cahce Scalability Test with large number of object in the cache. ( keys between 1 and 100000).
Start 2 servers , Connect 4 clients and start populating data with large number of object in the cache. ( keys between 1 and 1000000), from one of the client(feeder)
Fire the query from the remaining clients ";

// concurrent execution 
hydra.Prms-serialExecution = false;

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 600;

hct.HctPrms-regionName = DefaultRegion;

query.QueryPrms-queryStrings =  
"select distinct * from /DefaultRegion"  
"select distinct * from /DefaultRegion qryP WHERE qryP.status= 'active'"    
"select distinct * from /DefaultRegion qryP WHERE qryP.status = 'inactive'" 
;
								
query.QueryPrms-resultsValidator= "query.remote.DataVerificationQueryResultsValidator";

hydra.ClientPrms-vmThreads =
  fcn "hydra.TestConfigFcns.duplicate(\"1\", ${bridgeHosts})" ncf // bridges
  fcn "hydra.TestConfigFcns.duplicate(\"4\", ${edgeHosts})" ncf // edges
  1; // feed
  
INITTASK   	taskClass  =  query.remote.RemoteQueryTest 		taskMethod = initQuery
        	threadGroups = edge ;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = updateRegionEntries_CacheScalability
        	threadGroups = feed 
        	maxTimesToRun = 50 ;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = performQuery
        	threadGroups = edge, default 
        	maxTimesToRun = 50 ;
