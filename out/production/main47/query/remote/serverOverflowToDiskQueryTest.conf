INCLUDE $JTESTS/query/remote/remoteQueryTopology3WithOverflowToDisk.inc; //It contains 3 client configurations each for bridge, edge, feed(special edge, with different region attrs), with overflow to disk attributes on server region 

hydra.Prms-testDescription = 
"Tests to illustrate remote OQL with server region configured with overflow to disk.
Start 2 servers with mirroring turned on. server region configured with overflow (check whether data comes form disk or not when query has been fired)
with overflow-to-disk and lru-entry-count = 1000 or lru-memory-size = 100 .
Connect clients and start populating 3000 data from one of the clients(feeder).
Fire the query and check whether data come form disk or not ( check the result size which should be the equal to 3000 )
";

hydra.Prms-serialExecution = false;

hct.HctPrms-regionName = DefaultRegion;
query.QueryPrms-queryStrings =  
"select distinct * from /DefaultRegion"  
"select distinct * from /DefaultRegion qryP WHERE qryP.status= 'active'"    
"select distinct * from /DefaultRegion qryP WHERE qryP.status = 'inactive'" 
;
	
query.QueryPrms-resultsValidator= "query.remote.DataVerificationQueryResultsValidator";

//hydra.RegionPrms-evictionAttributes = lruEntryCount 1000 ;

hydra.ClientPrms-vmThreads =
  fcn "hydra.TestConfigFcns.duplicate(\"1\", ${bridgeHosts})" ncf // bridges
  fcn "hydra.TestConfigFcns.duplicate(\"4\", ${edgeHosts})" ncf // edges
  1; // feed
  
INITTASK   	taskClass  =  query.remote.RemoteQueryTest 		taskMethod = initQuery
        	threadGroups = edge;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = updateRegionEntries_EvictionAndOverflow
        	threadGroups = feed
        	maxTimesToRun = 50 ;

TASK    	taskClass   = query.remote.RemoteQueryTest    	taskMethod  = performQuery
        	threadGroups = edge , default
        	maxTimesToRun = 50 ;

