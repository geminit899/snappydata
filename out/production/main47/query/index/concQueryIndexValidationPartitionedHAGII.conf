// Since 7.0.1
// These are tests for verifying proper index creation and querying functionality along-with GII.
// The test is simple 3 node setup with one of the VM recycling other 2 VMs at regular intervals. 
// All the VMs performing querying and index data-structure verifications throughout the test.
// The test make use of cache.xml files to create region and indexes.
// There are total 8 indexes created . They will be PartitionedIndex with bucketIndexes being compact-range or range indexes
// This is a test for partitioned region. It involves verifying partitioned index datastructure along-with bucket indexes.
// Uses tests/query/indexPartitionedCache.xml
hydra.Prms-testRequirement = "Testing query and indexing with GII happening in parallel";
hydra.Prms-testDescription = "Tests which recycle VMs, query data and verify index creation with partitioned regions in peer-to-peer system while GII happens";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams3.inc;

INCLUDE $JTESTS/util/randomValues.inc;

hydra.ClientPrms-vmQuantities = 1 1 1;
hydra.ClientPrms-vmThreads    = 3 3 3;
THREADGROUP client1Thread totalThreads = 3 totalVMs = 1;
THREADGROUP client2Thread totalThreads = 3 totalVMs = 1;
THREADGROUP client3Thread totalThreads = 3 totalVMs = 1;
hydra.VmPrms-extraClassPaths        =   $GEMFIRE/lib/antlr.jar $GEMFIRE/lib/gemfire.jar, 
                                        $GEMFIRE/lib/antlr.jar $GEMFIRE/lib/gemfire.jar,
                                        $GEMFIRE/lib/antlr.jar $GEMFIRE/lib/gemfire.jar;
STARTTASK    taskClass   = event.EventBB taskMethod  = HydraTask_initialize
             clientNames = client1;
STARTTASK    taskClass   = query.QueryBB taskMethod  = HydraTask_initialize
             clientNames = client1;
STARTTASK    taskClass   = util.CacheBB taskMethod  = HydraTask_initialize
             clientNames = client1;

STARTTASK    taskClass   = query.index.IndexBB taskMethod  = HydraTask_initialize
             clientNames = client1;
             
INITTASK     taskClass   = util.StopStartVMs taskMethod  = StopStart_initTask runMode = once;      
INITTASK     taskClass   = query.QueryTest taskMethod  = HydraTask_initialize runMode = always;

INITTASK     taskClass   = query.QueryTest taskMethod  = HydraTask_populateRegions runMode = once
             threadGroups = client1Thread;

query.QueryPrms-xmlFilename = $JTESTS/query/indexPartitionedCache.xml;

TASK         taskClass   = query.SerialQueryAndEntryOpsTest  taskMethod = HydraTask_stopStartVMs_queryPRData
             threadGroups = client1Thread
             maxThreads = 1;


TASK     taskClass   = query.SerialQueryAndEntryOpsTest taskMethod  = HydraTask_verifyIndexSize_QueryData_EatExpectedException
               threadGroups = client2Thread, client3Thread;
             
hydra.GemFirePrms-stopSystemsAfterTest = true;

hydra.Prms-totalTaskTimeSec = 300;
hydra.Prms-maxResultWaitSec = 500;
hydra.Prms-haltIfBadResult = true;
hydra.Prms-serialExecution = false;
hydra.Prms-alwaysDoEndTasks = false;
hydra.Prms-maxClientShutdownWaitSec = 240;
hydra.Prms-finalClientSleepSec = 60;
hydra.Prms-maxEndTaskResultWaitSec = 400;

// Logging params
hydra.log.LogPrms-file_logging = true;
hydra.log.LogPrms-file_logLevel = fine;
util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.TestHelperPrms-printElementsLimit = 0;
util.TestHelperPrms-printStringLimit = 100;
util.TestHelperPrms-printObjectDepth = 0;
util.ValueHolderPrms-useExtraObject = false;
event.EventPrms-useRandomLocks = false;
event.EventPrms-maxObjects = 50000;

util.TestHelperPrms-minTaskGranularitySec = 60;
util.StopStartPrms-numVMsToStop = 1;
hydra.Prms-serialExecution = false;
query.QueryPrms-objectType = objects.PRPortfolio;
event.EventPrms-useRandomLocks = false;
//util.StopStartPrms-stopModes = ONEOF NICE_EXIT MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
util.StopStartPrms-stopModes = ONEOF NICE_EXIT FOENO;
query.QueryPrms-useRandomValues = false;
//hydra.VmPrms-extraVMArgs = "-Dgemfire.index.acquireCompactIndexLocksWithRegionEntryLocks=true";
hydra.VmPrms-extraVMArgs="-Dgemfire.GetInitialImage.MAX_PARALLEL_GIIS=20 -DGetInitialImage.chunkSize=10240 -Dgemfire.tombstone-timeout=240000";
