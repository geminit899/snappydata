INCLUDE $JTESTS/query/generalized/replicatedRegionsSpec.inc;
INCLUDE $JTESTS/query/generalized/confs/queryEntry.inc;

hydra.Prms-serialExecution = false;

INITTASK     taskClass   = query.generalized.QueryTest taskMethod  = HydraTask_initialize;
INITTASK     taskClass   = query.generalized.QueryTest taskMethod  = HydraTask_populateRegions;

INITTASK     taskClass   = query.generalized.index.IndexTest 
             taskMethod  = HydraTask_createIndexes;

event.EventPrms-useRandomLocks = false;
query.generalized.QueryPrms-entryAndQueryOperations = ONEOF add add add update query destroy update invalidate update read destroy query query FOENO; 

cacheperf.gemfire.query.QueryPerfPrms-query = 
"select distinct * from /QueryRegion0 pf where status = 'active'"
"select distinct * from /QueryRegion1 pf where status = 'active' AND pf.ID = 5"
"select distinct * from /QueryRegion0 pf, pf.positions.values pos where pf.ID > 20 AND pos.secId = 'IBM'" 
"select distinct * from /QueryRegion1 pf, pf.positions.values pos where pf.ID > 50 AND pf.ID < 80 AND pos.secId = 'IBM'"
"select distinct * from /QueryRegion0 pf, pf.positions.values pos where status = 'active' AND pf.ID > 30 AND pf.ID < 60";

cacheperf.CachePerfPrms-queryIndex =
        "pf.ID"
        "pf.status"
        "pos.secId"
        "pos.secId";
cacheperf.CachePerfPrms-queryFromClause =
        "/QueryRegion0 pf, pf.positions.values pos"
        "/QueryRegion1 pf"
        "/QueryRegion0 pf, pf.positions.values pos"
        "/QueryRegion1 pf, pf.positions.values pos";
        
query.generalized.QueryPrms-objectType =  objects.PRPortfolio;
hydra.RegionPrms-valueConstraint =  objects.PRPortfolio;