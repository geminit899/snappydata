I was unable to do pullThePlug testing with Windows without making changes (in my local checkout only) for batterytest/BatteryTest.java and hydra/VmDescription.java.  This documents the changes made to allow multi-host windows tests and to allow remote windows systems to log locally.

See BUG #40725: hydra issues with multi-host Windows tests

From IS: 
1.  The (losingSide) Windows laptop needs to have ssh and cygwin installed.

Initial setup (With MasterController on goof and the losing side machine, panama):
1. For each windows box (goof, fool and panama), I created a home directory c:/lhughes
2. I did a windows build on fool and copied this to c:/lhughes/gemfiretests on each box
To do the Windows build: 
  a. from your Linux checkout execute ./build.sh pack-snap
  b. on the windows box, map a drive to the Linux checkout
  c. map the "J" drive to //samba/gcm/
  d. execute ./build.sh unpack-snap
3. I copied the jdk/x86.Windows_NT directories to c:/lhughes/jdk on each box
4. I created a test directory for myself (c:/lhughes/vad) on each box
5. On goof (MasterController), I have a env setup script (vad.sh):

*** . ./vad.sh ***
===================================================================================
export NO_BUILD_LOG=true
# which is the local build
export GEMFIRE_CHECKOUT=c:/lhughes/gemfiretests

export JTESTSROOT=$GEMFIRE_CHECKOUT/tests
export JTESTS=$JTESTSROOT/classes
echo "JTESTS     : " $JTESTS

export CLASSPATH=.\;$JTESTS\;$GEMFIRE_CHECKOUT/product/lib/gemfire.jar
echo "CLASSPATH  : " $CLASSPATH

export JDK_PATH=c:/lhughes/jdk/x86.Windows_NT/bin

export PATH=$JDK_PATH:$GEMFIRE_CHECKOUT/product/../hidden/lib:$GEMFIRE_CHECKOUT/product/jre/bin:$PATH
echo "PATH       : " $PATH

export GEMFIRE=$GEMFIRE_CHECKOUT/product/
===================================================================================

6. On goof (MasterController)
Note the -DresultDir=//goof/lhughes/vad
*** ./runbt  ***
===================================================================================
#! /bin/sh
exec 1>&1
exec 2>&1
exec 0>&1
set -v
set -x
date
##
rm oneliner.txt
rm batterytest.log
/c/lhughes/jdk/x86.Windows_NT/bin/java -DresultDir=//goof/lhughes/vad -DnukeHungTest=true -DJTESTS=$JTESTS -DGEMFIRE=$GEMFIRE -DtestFileName=batt.bt -DnumTimesToRun=1 batterytest.BatteryTest
===================================================================================

7. On goof (MasterController)
*** local.conf ***
===================================================================================
hydra.Prms-haltIfBadResult = false;
hydra.GemFirePrms-enableNetworkPartitionDetection = true;

// don't allow the network to be dropped -- watch "not dropping" message in first locator's log
splitBrain.SplitBrainPrms-enableNetworkHelper = false;

//hydra.VmPrms-extraVMArgs += "-DJGroups.DEBUG=true";

// don't let it hang too quickly (we want to have time to detect loss of biscuit
// Use the longer times if you need extra time to get stack dumps, etc.
//hydra.Prms-totalTaskTimeSec = 900;
//hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 300;

// Uncomment to enable ssl
//INCLUDE $JTESTS/hydraconfig/enable-ssl.inc;

// Update for selected hosts
//hydra.HostPrms-hostNames = host1 host2 host3;
hydra.HostPrms-hostNames = panama fool goof;

// from pullPlug.conf
hydra.HostPrms-gemfireHomes=
 c:/lhughes/gemfiretests/product;

hydra.HostPrms-testDirs=
 c:/lhughes/gemfiretests/tests/classes;

hydra.HostPrms-javaHomes=
 c:/lhughes/jdk/x86.Windows_NT;

hydra.Prms-useNFS = false;
hydra.HostPrms-resourceDirBases =
  "//panama/lhughes/vad"
  "//fool/lhughes/vad"
  "//goof/lhughes/vad"
;

hydra.HostPrms-userDirs =
  "//panama/lhughes/vad"
  "//fool/lhughes/vad"
  "//goof/lhughes/vad"
;
===================================================================================

Problems encountered (and workarounds):
1. Pathnames are made 'interesting' by mounts on the test systems (goof and fool).  So, when I create directories in c:/lhughes/ ... I can't see them with /cygdrive/c/lhughes.  I must use /c/lhughes/.  (This will drive you crazy during setup because it violates everything you believe to be true about cygwin, so don't be fooled).  
goof: $ mount
C:\cygwin\bin on /usr/bin type system (binmode)
C:\cygwin\lib on /usr/lib type system (binmode)
\\samba\gcm on /gcm type system (binmode,noexec)
C:\cygwin on / type system (binmode)
c: on /c type system (binmode,noumount)
f: on /f type system (binmode,noumount)
v: on /v type system (binmode,noumount)

2. HostAgentMgr is not getting launched as expected.  
Note:  I tried changing runcmd.sh to put "$1" $"2" ... "$7", but this did not work either.  I also changed Java.java to surround these ';' separate lists with "'", but that didn't fix the problem either.  

To work around this, I created a script (tryit.sh) with the runcmd.sh command (from Master.log) with '' surrounding any ';' separated lists (classpaths, libpath, etc) and copied it to my remote systems.  I updated the user.dir for each run and executed it manually to get HostAgentMgr to run.  This works when run locally on a machine, but isn't adequate when invoked remotely (ssh->base->runcmd.sh).  I did some testing outside of the product and it appears that the ';' separated lists need to be enclosed in single quotes AND the semi-colon must be escaped with backslash (\).

Additional info:
The ssh portion of this command appears to work when we are doing something simple (like uname).  The invocation of bash.exe also seems to work fine (I was able to run a script on the remote system that simply ran java -version).

The problem is with the runcmd.sh arguments.  I created a runcmd.sh script on the remote system that simply echos the arguments ($1 -> $7) out to a file (one per line) and found that I could only get the 7 arguments if I used the single quotes AND escaped the ';' with a backslash (\).

*** bgexec log resulting from this failure (partial) ***
/c/lhughes/gemfiretests/tests/classes/hydra/runcmd.sh: line 9: : command not found
bash: c:/lhughes/gemfiretests/product/../hidden/lib: is a directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 1: $'PK\003\004': command not found
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 2: $'\027\201\262:': command not found
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 3: ó<92>õ^T^T^Tx¹x¹PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 4: ^W<81>²:^Dcom/PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 5: ^W<81>²:^Mcom/gemstone/PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 6: ^W<81>²:^Ucom/gemstone/gemfire/PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 7: ^W<81>²:!com/gemstone/gemfire/distributed/PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 8: ^W<81>²:*com/gemstone/gemfire/distributed/internal/PK^C^D: No such file or directory
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 9: syntax error near unexpected token `)'
/c/lhughes/gemfiretests/product/lib/gemfire.jar: line 9: `^H^K<81>²:^XÆ¼§ÐB<85>¤Icom/gemstone/gemfire/distributed/internal/InternalDistributedSystem.class½]^G@^TG÷^?³;{»^\§âY±b<89>"^Gö^V¬^H¨èQ^D,§QrÂ<89>gà<8e>Ü<81>-½jz7ÁôJzÔ(%$±%<9a>Ä<98>Þ{o_zo_ü¿7»W9^TüÌÿËÇofgÞ¼y3óæÍ<9b>ÙÙó<99>^?^^y^\F<99>:) ÿo²^Q<91>¿0"C^S4y<8d>&¯Õäu<9a>¼^<93>OÑäS5ù4M>]<93>ÏÐä35ù,M>[<93>ÏÑx¢Æ{i¼¯Æûi<Iã<83>4>XãÇi|<88>Æ<87>j<YãÃ4~<92>Æ+5îÑ¸WãU^Z÷k|µÆ×jüR<8d>? ñ§5þ¬Æ^Ojü^UMé¢)]5¥DS¶hÊVMÙ¦);4¥AS<9e>Ö<94>·4åmMyGSþ£)ÿÕL<8a>Ê×¨ü2<95>_®ò+T~¥Ê¯RùÕ*¿Få<9b>T~­Ê¯Sy­Ê7«üz<95>ß ò^[U~<93>ÊoVù-*¿Uå·©üv<95>ß¡ò;U~<97>ÊëT~·ÊïQù½*¿Oå÷«üA<95>?¤ò-*ßªòm*^?XåÛU¾Cåõ*oPy£Ê<9b>Tþ<88>Ê<9b>Uþ¨Ê^_Sùã*ß©ò]*ß­ò=*ß«ò'Tþ¤Ê÷©|¿Ê<9f>Rù3*? òçTþ¼Ê_Pù<8b>*^?Iå/«üU<95>¿¦ò×Uþ<86>ÊßTù[ª²^UNQ<95>SUå4U9]UÎP<95>3Uå,U9[UÎQ<95>sUå<U9_U6¨ÊFU¹@U.T<95><8b>TåbU¹DU.U<95>ËTårU¹BU®T<95>«TåjU¹FU6©Êµªr<9d>ªÔªÊfU¹^UnP<95>^[Uå&U¹YUnQ<95>[Uå6U¹]UîP<95>;Uå.U©S<95>»ã`<96>ä<8b><83>|¹K^\^TH'^S\Lp9Áý^D^O^P<H°<95>`^[ÁÃ^D<8d>^DM^DÍ^D»        ö^Pü<8d> 3<82>Î^DV<82>®^DÝ      ú^S^L ^XH0<88> <85>`8Á8<82>ñ^D^S^H&^Rd^Rd^SØ    r       æ^S, p^P,&XBp^BÁR<82>^R<82>^SãàTyQ^\<9c>.å^Qä^S^T^PÌ#($("(&<98>O°<80>`!<81>(æ XL°<84>à^D<82>¥^DË^HJ^HN$p^R,'(%(#p^Q¬ ('XIà&XEp^RA^EA%<81><87>ÀKP^U^G7È#Ì0U:Ã^LÓ¥¹fÈ<90>rÌ0S:<97>à^U^D9Þ<8c>ãö³^YfSF<8e>t¥^YæHc^H.C<90>g<9b>a.^UË<93>¦^Pä^R<9c>g<86>|é*3^NO.Á<99>^Dg^S<9c>Cp)Á5^D7^SÜAp^_ÁC^D[^Hv^Pì'x<81>à=<82>÷        >'ø<82>à+<82>o  þ<8b> Ç^Q$^P$^R^L#^XK0<99>`^ZÁt<82>^Y^D³^H'

*** tryit.sh (panama) ***
c:/lhughes/gemfiretests/tests/classes/hydra/runcmd.sh c:/lhughes/gemfiretests/product 'c:/lhughes/gemfiretests/product/lib;c:/lhughes/gemfiretests/product/../hidden/lib' c:/lhughes/jdk/x86.Windows_NT/bin/java.exe -classpath 'c:/lhughes/gemfiretests/tests/classes;c:/lhughes/gemfiretests/product/lib/gemfire.jar;c:/lhughes/gemfiretests/tests/classes/junit.jar' '-Djava.library.path=c:/lhughes/gemfiretests/product/lib;c:/lhughes/gemfiretests/product/../hidden/lib' -Duser.dir=//panama/lhughes/vad/p2pNetworkPartition1-entryOps-0519-164021 -Dgemfire.home=c:/lhughes/gemfiretests/product hydra.HostAgentMgr

*** tryit.sh (fool) ***
c:/lhughes/gemfiretests/tests/classes/hydra/runcmd.sh c:/lhughes/gemfiretests/product 'c:/lhughes/gemfiretests/product/lib;c:/lhughes/gemfiretests/product/../hidden/lib' c:/lhughes/jdk/x86.Windows_NT/bin/java.exe -classpath 'c:/lhughes/gemfiretests/tests/classes;c:/lhughes/gemfiretests/product/lib/gemfire.jar;c:/lhughes/gemfiretests/tests/classes/junit.jar' '-Djava.library.path=c:/lhughes/gemfiretests/product/lib;c:/lhughes/gemfiretests/product/../hidden/lib' -Duser.dir=//fool/lhughes/vad/p2pNetworkPartition1-entryOps-0519-164021 -Dgemfire.home=c:/lhughes/gemfiretests/product hydra.HostAgentMgr

3. The cq tests did not run as the extraClassPath (for the antlr.jar) gets converted to a UNC path (which does not appear to work).  I worked around this by adding it explicitly (VmDescription.java), but a better solution needs to be found.

*** here's the failure and the classpath from taskmasters log ***
*** errors.txt (partial) ***
CLIENT vm_7_thr_11_edgeclient_goof_62208
INITTASK[7] splitBrain.NetworkPartitionTest.HydraTask_initializeBridgeClient
ERROR util.TestException: com.gemstone.gemfire.cache.query.CqException: Failed to execute the CQ. CqName: cq11, Query String is: SELECT * FROM /DefaultRegion, Error from last server: While performing a remote createCQfetchInitialResult
        at com.gemstone.gemfire.cache.query.internal.CqQueryImpl.executeCqOnRedundantsAndPrimary(CqQueryImpl.java:793)
        at com.gemstone.gemfire.cache.query.internal.CqQueryImpl.executeWithInitialResults(CqQueryImpl.java:718)
        at cq.CQUtil.registerCQ(CQUtil.java:134)
        at cq.CQUtil.registerCQ(CQUtil.java:98)
        at splitBrain.NetworkPartitionTest.initializeBridgeClient(NetworkPartitionTest.java:117)
        at splitBrain.NetworkPartitionTest.HydraTask_initializeBridgeClient(NetworkPartitionTest.java:96)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at hydra.MethExecutor.execute(MethExecutor.java:188)
        at hydra.MethExecutor.execute(MethExecutor.java:152)
        at hydra.TestTask.execute(TestTask.java:193)
        at hydra.RemoteTestModule$1.run(RemoteTestModule.java:205)
Caused by: com.gemstone.gemfire.cache.client.ServerOperationException: While performing a remote createCQfetchInitialResult
        at com.gemstone.gemfire.cache.client.internal.AbstractOp.processChunkedResponse(AbstractOp.java:234)
        at com.gemstone.gemfire.cache.client.internal.QueryOp$QueryOpImpl.processResponse(QueryOp.java:126)
        at com.gemstone.gemfire.cache.client.internal.AbstractOp.attemptReadResponse(AbstractOp.java:104)
        at com.gemstone.gemfire.cache.client.internal.AbstractOp.attempt(AbstractOp.java:274)
        at com.gemstone.gemfire.cache.client.internal.ConnectionImpl.execute(ConnectionImpl.java:223)
        at com.gemstone.gemfire.cache.client.internal.QueueConnectionImpl.execute(QueueConnectionImpl.java:149)
        at com.gemstone.gemfire.cache.client.internal.OpExecutorImpl.executeOnQueuesAndReturnPrimaryResult(OpExecutorImpl.java:267)
        at com.gemstone.gemfire.cache.client.internal.PoolImpl.executeOnQueuesAndReturnPrimaryResult(PoolImpl.java:605)
        at com.gemstone.gemfire.cache.client.internal.CreateCQWithIROp.execute(CreateCQWithIROp.java:31)
        at com.gemstone.gemfire.cache.client.internal.ServerCQProxy.createWithIR(ServerCQProxy.java:64)
        at com.gemstone.gemfire.cache.query.internal.CqQueryImpl.executeCqOnRedundantsAndPrimary(CqQueryImpl.java:763)
        ... 13 more
Caused by: java.lang.NoClassDefFoundError: antlr/TokenStreamException

*** from taskmaster log (RemoteTestModule invocation), note classpath ***
[info 2009/05/20 16:18:44.565 PDT <master_60220> tid=0x1] Issuing bgexec command on host panama: c:/lhughes/jdk/x86.Windows_NT/bin/java -server -Dsun.rmi.dgc.client.gcInterval=600000 -Dsun.rmi.dgc.server.gcInterval=600000 -Dsun.rmi.transport.tcp.handshakeTimeout=3600000 -Xmx250m -Dgemfire.disallowMcastDefaults=true -XX:+JavaMonitorsInStackTrace -XX:+HeapDumpOnOutOfMemoryError -Dpurpose=start -DmasterHost=goof.gemstone.com -DmasterPid=60220 -DhostName=host1 -DclientName=bridge1 -DgemfireName=bridgep1 -DnumThreads=1 -DbaseThreadId=0 -Dvmid=0 -DJTESTS=c:/lhughes/gemfiretests/tests/classes -Duser.dir=//panama/lhughes/vad/bridgeNetworkPartition1-cq-0520-161708 -Djava.library.path=c:/lhughes/gemfiretests/product/lib;c:/lhughes/gemfiretests/product/../hidden/lib -classpath //goof/c/lhughes/gemfiretests/product/lib/antlr.jar;c:/lhughes/gemfiretests/tests/classes/junit.jar;c:/lhughes/gemfiretests/tests/classes;c:/lhughes/gemfiretests/product/lib/gemfire.jar -Dgemfire.home=c:/lhughes/gemfiretests/product hydra.RemoteTestModule

*** hydra/VmDescription.java diffs ***
+      // temp -- do NOT check-in!!!
+      if ( hd.getGemFireHome() != null ) {
+        classPath.add( hd.getGemFireHome() + "/lib/antlr.jar" );
+      }

4. These tests require that the logs be local to each host, so that we don't hang trying to write to a remote system when the cable is disconnected.  That's why hydra.Prms-useNFS is set to false (even though we're not really using NFS).

With useNFS false, I had to modify runbt to set -DresultDir=//goof/lhughes/vad (where the test is run) and then modify BatteryTest.java to compute workdir and pass -Duser.dir=workdir in when launching MasterController (so that the testConfig.obj can be brought over to the remote systems and the logs can be written locally on remote systems).

*** diffs ***
*** batterytest/BatteryTest.java ***
+++ BatteryTest.java    (working copy)
@@ -518,6 +518,20 @@
         // get the host
        String host = HostHelper.getLocalHost();
 
+        // create the working directory
+       String conf = FileUtil.filenameFor( test );
+       String base = resultDir + sep;
+       if ( conf.lastIndexOf( "." ) == -1 )
+         base = base + conf;
+        else
+         base = base + conf.substring( 0, conf.lastIndexOf( "." ) );
+       Date d = new Date();
+       String ds = d.toString();
+       String workdir = base + "-" + month( ds.substring(4,7) ) + ds.substring(8,10) +
+                               "-" + ds.substring(11,13) + ds.substring(14,16) + ds.substring(17,19);
+       FileUtil.mkdir( workdir );
+        logStatus(workdir);
+
        // create the command
        String cmd = null;
        String type = null;
@@ -560,6 +574,7 @@
                " -Djava.library.path=" + System.getProperty( "java.library.path" ) +
                " -Dgemfire.home=" + gemfire +
                " -DconfigFileName=" + test +
+                " -Duser.dir=" + workdir +
                btc.getPropertyString() + "hydra.MasterController";
         } else if ( test.indexOf( ".pl" ) != -1 ) {
          type = "script";
@@ -569,20 +584,6 @@
          cmd = test;
        }
 
-        // create the working directory
-       String conf = FileUtil.filenameFor( test );
-       String base = resultDir + sep;
-       if ( conf.lastIndexOf( "." ) == -1 )
-         base = base + conf;
-        else
-         base = base + conf.substring( 0, conf.lastIndexOf( "." ) );
-       Date d = new Date();
-       String ds = d.toString();
-       String workdir = base + "-" + month( ds.substring(4,7) ) + ds.substring(8,10) +
-                               "-" + ds.substring(11,13) + ds.substring(14,16) + ds.substring(17,19);
-       FileUtil.mkdir( workdir );
-        logStatus(workdir);
-
         // copy the local.conf file to the working directory
         if (type.equals("hydra") && localConf != null) {
           FileUtil.copyFile(localConf, workdir + sep + "local.conf");

-------------------------------------------------------------------------------------------


