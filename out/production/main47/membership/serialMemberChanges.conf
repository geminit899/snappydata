include $JTESTS/membership/membership.conf;
include $JTESTS/hydraconfig/systemparamsN.inc;


hydra.Prms-testDescription = "
    
  Test that serially disrupts (kill/restart, disconnect/reconnect cache close/open) members of a distributed
  system and verifies membership updates after each disruption. 
";


hydra.Prms-testRequirement = " ";


hydra.ClientPrms-vmQuantities = 8; //3 3 3;
hydra.ClientPrms-vmThreads    = 1; //2 2 2;


INITTASK  taskClass = membership.MembershipTest taskMethod = HydraTask_initForRestart
          runmode=DYNAMIC
          ;


TASK      taskClass = membership.MembershipTest 
          taskMethod = HydraTask_disruptMember
          ;

TASK      taskClass = membership.MembershipTest 
          taskMethod = HydraTask_verifyMembership
          ;


hydra.Prms-serialExecution = true;
hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 300;

hydra.GemFirePrms-enableMcast = ${enableMcast};
hydra.GemFirePrms-useLocator = ${useLocator};
hydra.GemFirePrms-disableTcp = ${disableTcp};

membership.MembershipPrms-memberOperations = ONEOF kill disconnect close FOENO;
membership.MembershipPrms-reconnectMember = ONEOF TRUE FALSE  FOENO; 
membership.MembershipPrms-stopMode = ONEOF MEAN_KILL MEAN_EXIT NICE_KILL FOENO;
membership.MembershipPrms-waitInMembershipCheck = 100;
membership.MembershipPrms-membershipWaitThreshold = ${membershipWaitThreshold};
