//include $JTESTS/event/concEntryEvent.conf;
include $JTESTS/membership/membership.conf;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-testDescription = "
    
  A single thread selects a random member for disruption (MEAN_KILL).
  After each disruption, all other members verify membership update.  Then a new member is started and
  all other members again verify membership.  TBD:  Add threads so that during disruption and member verificat  ion other client threads are doing event/concEntryEvent.conf test.
";


hydra.Prms-testRequirement = " ";

hydra.ClientPrms-vmQuantities = 2 2 2 1; 
hydra.ClientPrms-vmThreads    = 1 1 1 1; 

THREADGROUP checker
totalThreads = 6
totalVMs = 6 
clientNames = client1, client2, client3
;


THREADGROUP disrupter
totalThreads = 1
totalVMs = 1
clientNames = client4
;

//INITTASK  taskClass   = event.EventTest taskMethod  = HydraTask_initialize
//          runmode=DYNAMIC
//          ;

INITTASK  taskClass = membership.MembershipTest taskMethod = HydraTask_initForRestart
          runmode=DYNAMIC
          ;

TASK      taskClass = membership.MembershipTest 
          taskMethod = HydraTask_disruptOther
          threadGroups = disrupter
          startInterval = 5
          ;


TASK      taskClass = membership.MembershipTest 
          taskMethod = HydraTask_verifyMembershipAfterChange
          threadGroups = checker
          //membership.MembershipPrms-membershipWaitThreshold = ${membershipWaitThreshold}
          ;


hydra.Prms-totalTaskTimeSec = 999999999;  // test determines when to stop test
hydra.Prms-maxResultWaitSec = 600;
util.TestHelperPrms-minTaskGranularitySec = 30;

hydra.GemFirePrms-enableMcast = ${enableMcast};
hydra.GemFirePrms-useLocator = ${useLocator};
hydra.GemFirePrms-disableTcp = ${disableTcp};

membership.MembershipPrms-totalTaskTimeSec = 1200;
membership.MembershipPrms-reconnectMember = ONEOF TRUE FALSE  FOENO; 
membership.MembershipPrms-stopMode = ONEOF MEAN_KILL MEAN_EXIT NICE_KILL FOENO;

membership.MembershipPrms-waitInMembershipCheck = 100;
membership.MembershipPrms-membershipWaitThreshold = ${membershipWaitThreshold};
