hydra.Prms-testRequirement = "Test the resumable tx API";
hydra.Prms-testDescription = "This is a series of init tasks that test basic API calls.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_2.inc;

THREADGROUP workerThread
    totalThreads = 1
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP extraThread
    totalThreads = 1
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;


INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_initialize
             threadGroups = workerThread, extraThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_initExtraVm
             threadGroups = extraThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_txDoesNotExist
             threadGroups = workerThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_txIsBusy
             threadGroups = workerThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_txCommits
             threadGroups = workerThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_txRollsBack
             threadGroups = workerThread;

INITTASK     taskClass   = resumeTx.ResumableApiTest  taskMethod = HydraTask_txSuspends
             threadGroups = workerThread;

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-clientShutdownHook = parReg.ParRegUtil dumpAllPartitionedRegions;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 1000;
util.ValueHolderPrms-useExtraObject = true;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names              = region1   region2;
hydra.RegionPrms-regionName         = region1   region2;
hydra.RegionPrms-dataPolicy         = partition replicate;
hydra.RegionPrms-partitionName      = pr        none;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;

hydra.PartitionPrms-names           = pr;

