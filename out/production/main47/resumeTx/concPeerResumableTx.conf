hydra.Prms-testRequirement = "Ensure that no two threads can resume a transaction at the same time; resume
the same transactions multiple times; used multi-regions in the transactions; verify data consistency
at the end of the test";
hydra.Prms-testDescription = "Create multiple regions and populate with data. Make a list of transactions
to start with, then suspend them. Allow concurrent threads to try to resume the transactions, update data
then randomly commit or rollback. Validate data at the end.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK     taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_initialize;

INITTASK     taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_populateRegions;

INITTASK     taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_beginTxns;

TASK         taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_concSuspendResumeTx;

CLOSETASK    taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_completeTxns;

CLOSETASK    taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_waitForSilence;

CLOSETASK    taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_checkCounters;

CLOSETASK    taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_takeSnapshot;

CLOSETASK    taskClass   = resumeTx.ConcResumableTxTest  taskMethod = HydraTask_verifyFromSnapshot;

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 600;
hydra.Prms-clientShutdownHook = parReg.ParRegUtil dumpAllPartitionedRegions;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 1000;
util.ValueHolderPrms-useExtraObject = true;

hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names              = region1   region2   region3   region4   region5   region6;
hydra.RegionPrms-regionName         = region1   region2   region3   region4   region5   region6;
hydra.RegionPrms-dataPolicy         = partition partition partition replicate replicate replicate;
hydra.RegionPrms-partitionName      = pr        pr        pr        none      none      none;
hydra.RegionPrms-cacheListeners     = util.SummaryLogListener;

hydra.PartitionPrms-names           = pr;
hydra.PartitionPrms-redundantCopies = ${redundantCopies};

util.TestHelperPrms-minTaskGranularitySec = 60;
