INCLUDE $JTESTS/cacheServer/hct/interestPolicy.inc;

hydra.RegionPrms-scope           = default     local;
hydra.RegionPrms-dataPolicy      = partition   default;
hydra.RegionPrms-partitionName   = bridge      none;
hydra.PartitionPrms-names        = bridge;
hydra.PartitionPrms-redundantCopies = 2 ;


hydra.GemFirePrms-enableDurableClient = false true;
hydra.Prms-totalTaskTimeSec = 300;

hydra.RegionPrms-concurrencyChecksEnabled = false;

// each vm other than the opThread vm will run this task once
INITTASK         taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_registerInterestList
             threadGroups = default
             ;
             
INITTASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_noops
             threadGroups = default;

TASK       taskClass   = cacheServer.hct.InterestPolicyTest taskMethod  = killClient
           threadGroups = default
           maxTimesToRun = fcn ((${edgeVMsPerHost} * ${edgeHosts} - 1)) ncf
           ;

TASK       taskClass   = cacheServer.hct.InterestPolicyTest taskMethod  = killCacheServer
           maxThreads = 1 
           maxTimesToRun = 2
           startInterval = 60	
           threadGroups = bridge
           ;
            
CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_registerInterestList
             threadGroups = default
             ;
            
CLOSETASK    taskClass   = getInitialImage.InitImageTest  taskMethod = HydraTask_doOps
             threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_waitForSilence
             threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_ops
             threadGroups = default;
             
CLOSETASK   taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_stopCacheServer
            threadGroups = bridge;

