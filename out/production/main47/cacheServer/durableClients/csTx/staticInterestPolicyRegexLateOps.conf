INCLUDE $JTESTS/cacheServer/hct/txInterestPolicy.inc;


hydra.GemFirePrms-enableDurableClient = false true;
hydra.Prms-totalTaskTimeSec = 300;

hydra.PoolPrms-subscriptionRedundancy = 2;

hydra.RegionPrms-concurrencyChecksEnabled = false;

// each vm other than the opThread vm will run this task once
INITTASK        taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_registerInterestRegex             
            	threadGroups = default
				;
				
INITTASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_noops
             threadGroups = default;

TASK       taskClass   = cacheServer.hct.InterestPolicyTest taskMethod  = killClientWithCacheClose
           hydra.ConfigPrms-cacheConfig  = edge
           hydra.ConfigPrms-regionConfig = edge
           threadGroups = default
           maxTimesToRun = fcn ((${edgeVMsPerHost} * ${edgeHosts} - 1)) ncf
           ;
         
TASK       taskClass   = cacheServer.hct.InterestPolicyTest taskMethod  = killCacheServer
           maxThreads = 1 
           maxTimesToRun = 2
           startInterval = 60	
           threadGroups = bridge
           weight = 30;
            
CLOSETASK        taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_registerInterestRegex             
            	threadGroups = default
				;
				           
CLOSETASK    taskClass   = getInitialImage.InitImageTest  taskMethod = HydraTask_doOps
             threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_waitForSilence
             threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_ops
             threadGroups = default;
             
CLOSETASK   taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_stopCacheServer
            threadGroups = bridge;

