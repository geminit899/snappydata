hydra.Prms-testRequirement = "Test interest policy with notifyBySubscription with a single key of interest.";
hydra.Prms-testDescription = "
In a client VM/bridge server configuration, one client VM loads data into the
region, which distributes it to all bridge servers. Each remaining client 
VM then calls registerInterest, either with interest policy KEYS, KEYS_VALUES
or NONE with ALL_KEYS as the keys of interest. Then the same VM that did the
load does operations on the region (destroy, invalidate, etc). Each remaining 
client then validates that the proper keys and/or values are present in the 
client region.";

INCLUDE $JTESTS/cacheServer/hct/interestPolicy.inc;

hydra.RegionPrms-concurrencyChecksEnabled = false;

// each vm other than the opThread vm will run this task once
TASK         taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_registerInterestSingle_RI_noops
             maxTimesToRun = fcn (${edgeVMsPerHost} * ${edgeHosts}) - 1 ncf
             threadGroups = default;

CLOSETASK   taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_waitForSilence
            threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_noops
             threadGroups = default;

CLOSETASK    taskClass   = getInitialImage.InitImageTest  taskMethod = HydraTask_doOps
             threadGroups = opThreads;

CLOSETASK   taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_waitForSilence
            threadGroups = opThreads;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_verifyRegionContents_RI_ops
             threadGroups = default;

CLOSETASK    taskClass   = cacheServer.hct.InterestPolicyTest taskMethod = HydraTask_stopCacheServer
             threadGroups = bridge
             ;

hydra.Prms-maxResultWaitSec = 1200;
