include $JTESTS/hydraconfig/hydraparams1.inc;

hydra.Prms-testDescription = "Peer that is dynamically disconnected and reconnected synchronously by another peer.";

hydra.Prms-manageLocatorAgents = false;

hydra.HostPrms-names                = host;
hydra.VmPrms-names                  = vm;
hydra.VmPrms-hostNames              = host;
hydra.GemFirePrms-names             = gemfire;
hydra.GemFirePrms-hostNames         = host;
hydra.GemFirePrms-distributedSystem = ds;
hydra.ClientPrms-names              = locator source bystander target;
hydra.ClientPrms-vmNames            = vm;
hydra.ClientPrms-gemfireNames       = gemfire;
hydra.ClientPrms-vmQuantities       = 1       1      1         1;
hydra.ClientPrms-vmThreads          = 1       1      2         2;

THREADGROUP locator totalThreads = 1 clientNames  = locator;
THREADGROUP source totalThreads = 1 clientNames  = source;
THREADGROUP bystander totalThreads = 2 clientNames  = bystander;
THREADGROUP target totalThreads = 2 clientNames  = target;

INITTASK  taskClass = hydratest.disconnect.DisconnectClient taskMethod = startLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = hydratest.disconnect.DisconnectClient taskMethod = connectTask
          threadGroups = bystander, target
          runMode = always
          ;
TASK      taskClass = hydratest.disconnect.DisconnectClient
          taskMethod  = putTask
          threadGroups = bystander, target
          ;
TASK      taskClass = hydratest.disconnect.DisconnectClient
          taskMethod  = disconnectTask
          threadGroups = source
          ;
CLOSETASK taskClass = hydratest.disconnect.DisconnectClient
          taskMethod = logTask
          runMode = dynamic
          threadGroups = target
          ;

hydratest.disconnect.DisconnectPrms-clientName = target;
hydratest.disconnect.DisconnectPrms-onDemand = ${onDemand};

hydra.ConfigPrms-cacheConfig = cache;
hydra.ConfigPrms-regionConfig = region;

hydra.CachePrms-names = cache;
hydra.RegionPrms-names = region;

hydra.Prms-totalTaskTimeSec = 60;
hydra.Prms-maxResultWaitSec = 120;
