include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_hct.inc;

hydra.Prms-testDescription = "Check use of server groups.";

THREADGROUP bridge1 totalThreads = 1 clientNames  = bridge1;
THREADGROUP bridge2 totalThreads = 1 clientNames  = bridge2;
THREADGROUP bridge3 totalThreads = 1 clientNames  = bridge3;
THREADGROUP bridge4 totalThreads = 1 clientNames  = bridge4;
THREADGROUP edge
  totalThreads = fcn ${edgeHosts} * ${edgeVMsPerHost}
                                  * ${edgeThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)" ncf;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          threadGroups = bridge1, bridge2, bridge3, bridge4, edge
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = bridge1
          hydra.ConfigPrms-regionConfig = bridge1
          hydra.ConfigPrms-bridgeConfig = bridge1
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = bridge2
          hydra.ConfigPrms-regionConfig = bridge2
          hydra.ConfigPrms-bridgeConfig = bridge2
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = bridge3
          hydra.ConfigPrms-regionConfig = bridge3
          hydra.ConfigPrms-bridgeConfig = bridge3
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = bridge4
          hydra.ConfigPrms-regionConfig = bridge4
          hydra.ConfigPrms-bridgeConfig = bridge4
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = edge
          hydra.ConfigPrms-regionConfig = edge
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          cacheperf.CachePerfPrms-keyAllocation = sameKeysRandomWrap
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          threadGroups = bridge1, bridge2, bridge3, bridge4, edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = closeCacheTask
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = closeCacheTask
          threadGroups = bridge1, bridge2, bridge3, bridge4
          ;

hydra.ConfigPrms-cacheConfig     = cache;

hydra.CachePrms-names            = cache; 
hydra.RegionPrms-names           = bridge1 bridge2 bridge3 bridge4 edge;
hydra.RegionPrms-poolName        = none    none    none    none    pool;
hydra.BridgePrms-names           = bridge1 bridge2 bridge3 bridge4;
hydra.BridgePrms-groups          = fred default wilma default,
                                   default,
                                   larry moe curly,
                                   petunia;
hydra.PoolPrms-names             = pool;
hydra.PoolPrms-contactAlgorithm  = hydra.EdgeHelper getRandomEndpoints;

hydra.VmPrms-extraVMArgs = -Xmx68m;

cacheperf.CachePerfPrms-batchSeconds = 5;
cacheperf.CachePerfPrms-trimSeconds  = 5;
cacheperf.CachePerfPrms-workSeconds  = 5;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 2 seconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 2 seconds;
cacheperf.CachePerfPrms-batchTerminatorMethod  = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-taskTerminatorMethod   = terminateOnTotalSeconds;
hydra.Prms-totalTaskTimeSec = 9999999;

cacheperf.CachePerfPrms-maxKeys = 100;
cacheperf.CachePerfPrms-objectType = objects.Message;
objects.MessagePrms-size = 100;
