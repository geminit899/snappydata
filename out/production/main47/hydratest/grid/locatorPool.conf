include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_hct_locator.inc;

hydra.Prms-testDescription = "Check use of pools with server locator contacts.";

THREADGROUP locator totalThreads = 2 clientNames = locator1;
THREADGROUP bridge  totalThreads = 2 clientNames = bridge1;
THREADGROUP edge    totalThreads = 4 clientNames = edge1;

INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = createAndStartLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          threadGroups = bridge, edge
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = bridge
          hydra.ConfigPrms-regionConfig = bridge
          hydra.ConfigPrms-bridgeConfig = bridge
          ;
INITTASK  taskClass = cacheperf.CachePerfClient
          taskMethod = openCacheTask
          threadGroups = edge
          hydra.ConfigPrms-regionConfig = edge
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          cacheperf.CachePerfPrms-keyAllocation = sameKeysRandomWrap
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          threadGroups = bridge, edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = reportTrimIntervalsTask
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = closeCacheTask
          threadGroups = edge
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient
          taskMethod = closeCacheTask
          threadGroups = bridge
          ;

hydra.GemFirePrms-isPeerLocator   = true default;
hydra.GemFirePrms-isServerLocator = true default;

hydra.ConfigPrms-cacheConfig = cache;

hydra.CachePrms-names       = cache; 
hydra.RegionPrms-names      = bridge     edge;
hydra.RegionPrms-dataPolicy = replicated empty;
hydra.RegionPrms-poolName   = none       locators;

hydra.BridgePrms-names = bridge;

hydra.PoolPrms-names = locators;
hydra.PoolPrms-contactAlgorithm = hydra.PoolHelper getRandomContacts;

hydra.VmPrms-extraVMArgs = -Xmx68m;

cacheperf.CachePerfPrms-batchSeconds = 5;
cacheperf.CachePerfPrms-trimSeconds  = 5;
cacheperf.CachePerfPrms-workSeconds  = 5;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 2 seconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 2 seconds;
cacheperf.CachePerfPrms-batchTerminatorMethod  = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-taskTerminatorMethod   = terminateOnTotalSeconds;
hydra.Prms-totalTaskTimeSec = 9999999;

cacheperf.CachePerfPrms-maxKeys = 100;
cacheperf.CachePerfPrms-objectType = objects.Message;
objects.MessagePrms-size = 100;
