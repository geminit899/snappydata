include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_hct_locator.inc;

hydra.Prms-testDescription = "Check use of XML for wan bridge and edge using pools and server groups and gateway senders and receivers.";

THREADGROUP locator
  totalThreads = fcn ${wanSites} * ${locatorHostsPerSite}
                 * ${locatorVMsPerHost} * ${locatorThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
              (\"locator\", ${wanSites}, ${locatorHostsPerSite}, false, true)"
                 ncf;
THREADGROUP bridge
  totalThreads = fcn ${wanSites} * ${bridgeHostsPerSite}
                   * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
              (\"bridge\", ${wanSites}, ${bridgeHostsPerSite}, false, true)"
                 ncf;
THREADGROUP edge
  totalThreads = fcn ${wanSites} * ${edgeHostsPerSite}
                   * ${edgeVMsPerHost} * ${edgeThreadsPerVM} ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateDoubleSuffixedNames
              (\"edge\", ${wanSites}, ${edgeHostsPerSite}, false, true)"
                 ncf;

INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = createLocatorTask
          threadGroups = locator
          ;
INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = startLocatorAndAdminDSTask
          threadGroups = locator
          ;
INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = generateCacheXmlTask
          threadGroups = bridge
          hydra.ConfigPrms-regionConfig = bridge
          hydra.ConfigPrms-bridgeConfig = bridge
          hydra.ConfigPrms-diskStoreConfig = disk
          hydra.ConfigPrms-gatewaySenderConfig = sender
          hydra.ConfigPrms-gatewayReceiverConfig = receiver
          hydra.ConfigPrms-asyncEventQueueConfig = queue
          ;
INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = generateCacheXmlTask
          threadGroups = edge
          hydra.ConfigPrms-regionConfig = edge
          hydra.ConfigPrms-poolConfig = locators
          ;
INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = openCacheWithXmlTask
          threadGroups = bridge
          ;
INITTASK  taskClass = hydratest.grid.GridClient
          taskMethod = openCacheWithXmlTask
          threadGroups = edge
          ;
TASK      taskClass = hydratest.grid.GridClient
          taskMethod = putDataTask
          threadGroups = edge
          ;
CLOSETASK taskClass = hydratest.grid.GridClient
          taskMethod = closeCacheTask
          threadGroups = edge
          ;
CLOSETASK taskClass = hydratest.grid.GridClient
          taskMethod = closeCacheTask
          threadGroups = bridge
          ;

hydra.GemFirePrms-isServerLocator = true;
hydra.GemFirePrms-remoteDistributedSystems =
  fcn "hydra.TestConfigFcns.generateNamesRepeatedlyShift
      (\"bridgeds_\", ${wanSites}, ${locatorHostsPerSite}, false, true)"
  ncf
  ,
  none // for both bridge and edge
  ;

hydra.ConfigPrms-cacheConfig = cache;

hydra.CachePrms-names = cache;

hydra.RegionPrms-names      = bridge     edge;
hydra.RegionPrms-gatewaySenderNames = sender, none;

hydra.RegionPrms-dataPolicy = persistentPartition empty;
hydra.RegionPrms-diskStoreName = disk none;

hydra.RegionPrms-poolName   = none       locators;
hydra.RegionPrms-diskSynchronous = true;
hydra.RegionPrms-partitionName = bridge none;

hydra.PartitionPrms-names = bridge;

hydra.BridgePrms-names = bridge;
hydra.BridgePrms-groups = bert ernie;

hydra.PoolPrms-names = locators;
hydra.PoolPrms-contactAlgorithm = hydra.PoolHelper getRandomContactsInWanHctSite;
hydra.PoolPrms-serverGroup = ernie;

hydra.DiskStorePrms-names = disk;
hydra.DiskStorePrms-queueSize = 17;
hydra.DiskStorePrms-timeInterval = 42;

hydra.GatewaySenderPrms-names = sender;
hydra.GatewaySenderPrms-diskStoreName = disk;

hydra.GatewayReceiverPrms-names = receiver;
hydra.GatewayReceiverPrms-numInstances = 2;

hydra.AsyncEventQueuePrms-names = queue;
hydra.AsyncEventQueuePrms-asyncEventListener = hydratest.version.partition.TestAsyncEventListener;
hydra.AsyncEventQueuePrms-diskStoreName = disk;
hydra.AsyncEventQueuePrms-persistent = true;

hydra.VmPrms-extraVMArgs = -Xmx168m;

hydra.Prms-totalTaskTimeSec = 20;

cacheperf.CachePerfPrms-maxKeys = 100;
cacheperf.CachePerfPrms-objectType = objects.Message;
objects.MessagePrms-size = 100;
