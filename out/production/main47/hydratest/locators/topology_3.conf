include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_3.inc;

hydra.Prms-testDescription = "Create and start hydra-master-managed locators.";

THREADGROUP ${A}
    totalThreads = fcn ${${A}Hosts} * ${${A}VMsPerHost}
                                    * ${${A}ThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${A}\", ${${A}Hosts}, true)"
                   ncf;
THREADGROUP ${B}
    totalThreads = fcn ${${B}Hosts} * ${${B}VMsPerHost}
                                    * ${${B}ThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${B}\", ${${B}Hosts}, true)"
                   ncf;
THREADGROUP ${C}
    totalThreads = fcn ${${C}Hosts} * ${${C}VMsPerHost}
                                    * ${${C}ThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"${C}\", ${${C}Hosts}, true)"
                   ncf;

hydra.GemFirePrms-distributedSystem = ds;

hydratest.locators.LocatorPrms-expectedMembers =
  fcn
    ${${A}Hosts} * ${${A}VMsPerHost} + ${${B}Hosts} * ${${B}VMsPerHost}
  + ${${C}Hosts} * ${${C}VMsPerHost}
  ncf;

INITTASK  taskClass = hydratest.locators.LocatorClient
          taskMethod = connectTask
          threadGroups = ${A}, ${B}, ${C}
          ;
INITTASK  taskClass = hydratest.locators.LocatorClient
          taskMethod = openCacheTask
          threadGroups = ${A}, ${B}, ${C}
          ;
CLOSETASK taskClass = hydratest.locators.LocatorClient
          taskMethod = validateExpectedMembersTask
          threadGroups = ${A}, ${B}, ${C}
          ;
CLOSETASK taskClass = hydratest.locators.LocatorClient
          taskMethod = closeCacheTask
          threadGroups = ${A}, ${B}, ${C}
          ;

hydra.ConfigPrms-cacheConfig  = cache;
hydra.CachePrms-names         = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names        = region;

hydra.VmPrms-extraVMArgs = -Xmx68m;
