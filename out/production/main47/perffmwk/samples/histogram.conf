include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/topology_p2p.inc;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

cacheperf.CachePerfPrms-keyAllocation = ownKeysRandomWrap;
cacheperf.CachePerfPrms-batchSeconds = 10;
cacheperf.CachePerfPrms-trimSeconds  = 30;
cacheperf.CachePerfPrms-workSeconds  = 60;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 10 seconds;
cacheperf.CachePerfPrms-batchTerminatorMethod  = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-taskTerminatorMethod   = terminateOnTotalSeconds;

cacheperf.CachePerfPrms-maxKeys = 100;
cacheperf.CachePerfPrms-objectType = objects.SizedString;

hydra.Prms-totalTaskTimeSec = 9999999;

hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names = region;

perffmwk.HistogramStatsPrms-enable = true;
perffmwk.HistogramStatsPrms-binVals =
  1000000 // 1 ms
  2000000 // 2 ms
  ;
perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/perffmwk/samples/histogram.spec;
