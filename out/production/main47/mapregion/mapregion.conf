INCLUDE $JTESTS/mapregion/map.inc;

hydra.Prms-testDescription = " Test to verify that all map apis work as expected with region apis in all circumstances ";

//all the following operation times are in milliseconds
mapregion.MapPrms-objectType                 = objects.SizedString;
objects.SizedStringPrms-size                 = 20;

util.TestHelperPrms-minTaskGranularitySec = 60;

hydra.Prms-serialExecution = ${serialExecution};

// hydra.VmPrms-extraVMArgs   = "-DDistributionManager.VERBOSE=true";

INITTASK     	taskClass   = mapregion.MapRegionTest taskMethod  = HydraTask_initialize;

TASK		taskClass	= mapregion.MapRegionTest  taskMethod	= HydraTask_performEntryOperations;

TASK		taskClass	= mapregion.MapRegionTest  taskMethod	= HydraTask_performRegionOperations
		startInterval 	= 90
		endInterval 	= 90
		maxThreads 	= 1
		threadGroups 	= regionOperators
		;

CLOSETASK      taskClass   = mapregion.MapRegionTest taskMethod  = HydraTask_closetask;

THREADGROUP regionOperators
	totalThreads = 2
	totalVMs = 3 ;

mapregion.MapPrms-entryOperationName = ONEOF put putPrevious putAll remove invalidate destroy size isEmpty localInvalidate localDestroy FOENO;

mapregion.MapPrms-regionOperationName = ONEOF clear localClear regionInvalidate regionDestroy localRegionInvalidate localRegionDestroy FOENO;

hydra.ConfigPrms-regionConfig = testRegion;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-regionName = testRegion;
hydra.RegionPrms-scope = ${scope};
hydra.RegionPrms-dataPolicy = ${dataPolicy};
