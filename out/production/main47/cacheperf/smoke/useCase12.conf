include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparams2.inc;

hydra.Prms-testDescription = "
    Hydra implementation of the POC useCase12 benchmark.

    This smokeperf version has a publisher in one VM replicating to another VM
    that is idle with no listener with scope ${scope}.

    Cache entries consist of a flat data structure (EqStruct) as originally
    used in the useCase12 benchmark tests.   Publisher updates keys sequentially
    from a shared data set.
";

INITTASK  taskClass = cacheperf.comparisons.useCase12.UseCase12Client taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.comparisons.useCase12.UseCase12Client taskMethod = openCacheTask
          ;
TASK      taskClass = cacheperf.comparisons.useCase12.UseCase12Client taskMethod = updateEqStructTask
          threadGroups = publishers
          cacheperf.CachePerfPrms-keyAllocation = ownKeysWrap
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.comparisons.useCase12.UseCase12Client taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.comparisons.useCase12.UseCase12Client taskMethod = reportTrimIntervalsTask
          ;

cacheperf.CachePerfPrms-batchTerminatorMethod = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-batchSeconds =  60;
cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-trimSeconds  =  60;
cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-workSeconds  = 180;

hydra.ClientPrms-vmQuantities = 1 1;
hydra.ClientPrms-vmThreads = 1 1;

THREADGROUP publishers  totalThreads = 1 totalVMs = 1 clientNames = client1;
THREADGROUP subscribers totalThreads = 1 totalVMs = 1 clientNames = client2;

hydra.Prms-maxResultWaitSec = 300;   // 5 minutes
hydra.Prms-totalTaskTimeSec = 99999; // uses time-based workload

hydra.VmPrms-extraVMArgs += "-Xmx1024m -Xms1024m", "-Xmx512m  -Xms512m";

hydra.GemFirePrms-conserveSockets = false;

cacheperf.CachePerfPrms-maxKeys    = 10000;
cacheperf.CachePerfPrms-objectType = objects.EqStruct;

hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names = region;
hydra.RegionPrms-scope = ${scope};
hydra.RegionPrms-dataPolicy = replicated;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/smoke/useCase12.spec;
