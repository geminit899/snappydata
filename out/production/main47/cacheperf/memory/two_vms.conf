include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/topology_p2p_2.inc;
include $JTESTS/hydraconfig/single_host.inc;

hydra.Prms-testDescription = "Data is put  into the cache. GC is run and the heap size is sampled at intervals";

hydra.CachePrms-names = putter watcher;

hydra.RegionPrms-names         			= putter		watcher;
hydra.RegionPrms-lockGrantor			= false			true;
hydra.RegionPrms-dataPolicy    		= ${dataPolicy};
hydra.RegionPrms-scope    				= ${scope};
hydra.RegionPrms-statisticsEnabled = ${statisticsEnabled};

hydra.VmPrms-extraVMArgs = "-Xms256m -Xmx256m";
hydra.VmPrms-extraVMArgs += "-XX:+UseSerialGC -XX:-DisableExplicitGC -javaagent:${JTESTS}/../lib/sizeagent.jar";

INITTASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = openStatisticsTask
          ;

INITTASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = putter
          hydra.ConfigPrms-regionConfig = putter
          threadGroups=putter
          ;
          
INITTASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = watcher
          hydra.ConfigPrms-regionConfig = watcher
          threadGroups=watcher
          ;
          
TASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = putDataTask
          threadGroups = putter
          maxTimesToRun=fcn ${putterHosts} * ${putterVMsPerHost}
                                         * ${putterThreadsPerVM} ncf
          ;
TASK  taskClass = cacheperf.memory.CacheSizeClient taskMethod = watchDataTask
          threadGroups = watcher
          maxTimesToRun=fcn ${putterHosts} * ${putterVMsPerHost}
                                         * ${putterThreadsPerVM} ncf
          ;
CLOSETASK taskClass = cacheperf.memory.CacheSizeClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.memory.CacheSizeClient taskMethod = closeStatisticsTask
          ;
          
THREADGROUP putter
    totalThreads = fcn ${putterHosts} * ${putterVMsPerHost}
                                         * ${putterThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"putter\", ${putterHosts}, true)" ncf;
                        
THREADGROUP watcher
    totalThreads = fcn ${watcherHosts} * ${watcherVMsPerHost}
                                         * ${watcherThreadsPerVM} ncf
    clientNames  = fcn "hydra.TestConfigFcns.generateNames
                        (\"watcher\", ${watcherHosts}, true)" ncf;

cacheperf.memory.CacheSizePrms-numberOfEntries = ${numberOfEntries};
cacheperf.memory.CacheSizePrms-sampleInterval = ${sampleInterval};

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/memory/memory_two_vms.spec;
