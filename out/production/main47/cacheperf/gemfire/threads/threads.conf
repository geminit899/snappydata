include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-testDescription = "Cache get/put performance for a GemFire cache using scope distributed ack, and objects of type objects.ArrayOfByte and size 1K.  There are ${vmThreads} threads per VM on ${vmQuantities} VMs on ${hydra.numHosts} hosts.  Threads do 80% gets and 20% puts, using random keys.  A capacity controller ensures that some gets are cache misses.";

hydra.Prms-testRequirement = "Prove that GemFire can scale the number of threads without croaking.";

hydra.Prms-maxResultWaitSec = 300;    // 5 minutes
hydra.Prms-totalTaskTimeSec = 360000; // 100 hours

hydra.ClientPrms-vmThreads    = ${vmThreads};
hydra.ClientPrms-vmQuantities = ${vmQuantities};

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createDataTask
          batch
	  cacheperf.CachePerfPrms-keyAllocation = ownKeys
	  cacheperf.CachePerfPrms-warmupTerminatorMethod = none
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = mixPutGetDataTask
	  cacheperf.CachePerfPrms-keyAllocation = sameKeysRandomWrap
	  cacheperf.CachePerfPrms-warmupTerminatorMethod = none
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalIterations
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

hydra.GemFirePrms-conserveSockets = true;

hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names = region;
hydra.RegionPrms-dataPolicy = normal;
hydra.RegionPrms-scope = distributedAck;
hydra.RegionPrms-evictionAttributes = lruMemorySize 50;

cacheperf.CachePerfPrms-objectType = objects.ArrayOfByte;
objects.ArrayOfBytePrms-size = 1024;

cacheperf.CachePerfPrms-trimIterations = ${trimIterations};
cacheperf.CachePerfPrms-workIterations = ${workIterations};
cacheperf.CachePerfPrms-batchSize      = ${batchSize};
cacheperf.CachePerfPrms-maxKeys        = 200000;
cacheperf.CachePerfPrms-putPercentage  = 20;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/specs/putgets.spec;
