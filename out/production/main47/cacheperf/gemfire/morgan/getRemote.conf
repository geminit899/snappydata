include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-testDescription = "A thread on one host gets remote objects of size ${dataSize} that are spread across ${hydra.numHosts}-1 other hosts.";

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createDataTask
          threadGroups = default
          batch
          cacheperf.CachePerfPrms-keyAllocation = ownKeys
          cacheperf.CachePerfPrms-warmupTerminatorMethod = none
          cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = getDataTask
          threadGroups = getter
          cacheperf.CachePerfPrms-keyAllocation = sameKeys
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          threadGroups = getter
          ;

// clients and threadgroups
THREADGROUP getter totalThreads = 1 clientNames = client1;
hydra.ClientPrms-vmQuantities = 1;
hydra.ClientPrms-vmThreads    = 1;
hydra.VmPrms-extraVMArgs =
      fcn cacheperf.gemfire.morgan.ScalingFcns.scaleVmSize(    // getter
          ${maxKeys}, ${dataSize}, 1) ncf
      ,
      fcn cacheperf.gemfire.morgan.ScalingFcns.scaleVmSize(    // data hosts
          ${maxKeys}, ${dataSize}, ${hydra.numHosts} - 1) ncf;

// termination (workload limited by max keys)
hydra.Prms-totalTaskTimeSec = 9999999;
hydra.Prms-maxResultWaitSec = 300;
cacheperf.CachePerfPrms-batchSeconds =  60;
cacheperf.CachePerfPrms-trimIterations = fcn ${maxKeys}/3 ncf;
cacheperf.CachePerfPrms-batchTerminatorMethod  = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimIterations;
cacheperf.CachePerfPrms-taskTerminatorMethod   = terminateOnMaxKey;

// datatype
cacheperf.CachePerfPrms-maxKeys       = ${maxKeys};
cacheperf.CachePerfPrms-objectType    = objects.ArrayOfByte;
objects.ArrayOfBytePrms-size          = ${dataSize};
objects.ArrayOfBytePrms-encodeKey     = false;

// cache
hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names = region;
hydra.RegionPrms-scope = distributedNoAck;

hydra.GemFirePrms-conserveSockets = false;

// reporting
perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/morgan/get.spec;
