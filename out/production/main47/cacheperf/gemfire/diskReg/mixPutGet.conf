include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparams1.inc;


hydra.Prms-testDescription ="
Measure performance of put operations which will be written to disk every time. 
The performance of Get  operation should not see  degradation as the data is always present in  memory.
DiskRegion Properties : Synch , Persist only,  Fixed / Rolling Op Logs 
";

hydra.ConfigPrms-cacheConfig = gemfireCache;
hydra.ConfigPrms-regionConfig = testRegion;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;         
TASK      taskClass = cacheperf.CachePerfClient taskMethod = mixPutGetDataTask
	       cacheperf.CachePerfPrms-taskTerminatorClass       = cacheperf.Terminators
	       cacheperf.CachePerfPrms-taskTerminatorMethod      = terminateOnTotalIterations
           cacheperf.CachePerfPrms-keyAllocation = ownKeysWrap
         ;           
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

hydra.ClientPrms-vmQuantities = ${vmQuantities};
hydra.ClientPrms-vmThreads    = ${vmThreads};

cacheperf.CachePerfPrms-putPercentage = 100;
cacheperf.CachePerfPrms-batchSize      =  2500000; 
cacheperf.CachePerfPrms-trimIterations =  5000000; 
cacheperf.CachePerfPrms-workIterations = 10000000; 
cacheperf.CachePerfPrms-maxKeys        = 10000; 
cacheperf.CachePerfPrms-objectType     = objects.ArrayOfByte;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 1000 iterations;

hydra.Prms-totalTaskTimeSec = 2000; 
hydra.Prms-maxResultWaitSec = 2000; 

util.RegionDefPrms-regionDefUsage = useOneRegionSpec;
//objects.SizedStringPrms-constant = true;
objects.ArrayOfBytePrms-size = ${dataSize};
//objects.NestedOrderVectorPrms-width = 5;
//objects.NestedOrderVectorPrms-depth = 5;

hydra.CachePrms-names = gemfireCache;

hydra.RegionPrms-names = testRegion;
hydra.RegionPrms-scope = local;

hydra.RegionPrms-diskStoreName = diskPrms1;
hydra.RegionPrms-diskSynchronous = true;

hydra.DiskStorePrms-names = diskPrms1;
hydra.DiskStorePrms-diskDirNum = 4 ;
hydra.DiskStorePrms-maxOplogSize = ${maxOplogSize};
hydra.DiskStorePrms-autoCompact = ${autoCompact};
      
hydra.VmPrms-extraVMArgs += "-XX:MaxDirectMemorySize=2000M";       

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/cacheperfstats.spec;
