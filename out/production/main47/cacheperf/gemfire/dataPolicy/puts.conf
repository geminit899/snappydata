include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-testDescription = "Measure footprint and throughput for clients with dataPolicy=${dataPolicy} and interestPolicy=${interestPolicy}.  Clients do puts of objects of type ${objectType} and size 1K over a wide range of keys while a command-line cacheserver (long-running VM) with interestPolicy=all runs acting as a central repository for all data.";

hydra.Prms-testRequirement = "Footprint for empty clients less than other data policies; no performance impact for empty clients";

STARTTASK taskClass = cacheperf.gemfire.dataPolicy.CacheServerMgr taskMethod = startCacheServerTask
          clientNames = client1
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
	  cacheperf.CachePerfPrms-keyAllocation = ownKeys
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalIterations
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;
ENDTASK   taskClass = cacheperf.gemfire.dataPolicy.CacheServerMgr taskMethod = stopCacheServerTask
          clientNames = client1
          ;

hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;

hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names = region;
hydra.RegionPrms-regionName = "GemFireCache";
hydra.RegionPrms-scope = ${scope};
hydra.RegionPrms-dataPolicy = ${dataPolicy};
hydra.RegionPrms-interestPolicy = ${interestPolicy};

hydra.VmPrms-extraVMArgs += "-Xmx128m -Xms128m";

hydra.GemFirePrms-conserveSockets = true;

hydra.ClientPrms-vmThreads    = ${vmThreads};
hydra.ClientPrms-vmQuantities = ${vmQuantities};

objects.ArrayOfBytePrms-size = 1024;
objects.SizedStringPrms-size = 1024;
objects.NestedOrderVectorPrms-width = 2;
objects.NestedOrderVectorPrms-depth = 3;

cacheperf.CachePerfPrms-objectType = ${objectType};
cacheperf.CachePerfPrms-trimIterations = ${trimIterations};
cacheperf.CachePerfPrms-workIterations = ${workIterations};
cacheperf.CachePerfPrms-batchSize      = ${batchSize};
cacheperf.CachePerfPrms-maxKeys        = fcn ${trimIterations} + ${workIterations} ncf;

hydra.Prms-maxResultWaitSec = 1200;    // 20 minutes
hydra.Prms-totalTaskTimeSec = 360000; // 100 hours

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/dataPolicy/puts.spec;
