include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/topology_6.inc;

hydra.Prms-testDescription = "Approximates UseCase3 MARS use case.";
hydra.Prms-testRequirement = "Meets performance and scalability goals.";

include $JTESTS/cacheperf/poc/useCase3/mars/ds.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/gateways.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/pools.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/regions.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/server.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/tasks.inc;
include $JTESTS/cacheperf/poc/useCase3/mars/threadgroups.inc;

//------------------------------------------------------------------------------
// Termination
//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-batchTerminatorMethod     = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-batchSeconds              = 300;
cacheperf.CachePerfPrms-warmupTerminatorMethod    = none;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 10 seconds;
cacheperf.CachePerfPrms-trimSeconds               = 60;
cacheperf.CachePerfPrms-taskTerminatorMethod      = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency   = 10 seconds;
cacheperf.CachePerfPrms-workSeconds               = ${workSeconds};

hydra.Prms-maxResultWaitSec = 2400;
hydra.Prms-totalTaskTimeSec = 259200; // workload-based

//------------------------------------------------------------------------------
// Cache and region
//------------------------------------------------------------------------------

/*
hydra.CachePrms-names  = bridge edge;

hydra.RegionPrms-names =
      bridgeTRADE bridgeCDS bridgeALL bridgeCALYPSO bridgeGLOBAL
      edgeTRADE   edgeCDS   edgeALL   edgeCALYPSO   edgeGLOBAL
      ;
hydra.RegionPrms-dataPolicy =
      default     default   default   default       persistentReplicate
      empty       empty     empty     empty         empty
      ;
hydra.RegionPrms-diskStoreName =
      none        none      none      none          diskGLOBAL
      none        none      none      none          none
      ;
hydra.RegionPrms-poolName =
      none        none      none      none          none
      none        none      none      none          poolGLOBAL
      ;
hydra.RegionPrms-scope =
      noack       noack     noack     noack         noack
      noack       noack     noack     noack         local
      ;

hydra.DiskStorePrms-names = diskGLOBAL;
hydra.DiskStorePrms-diskDirNum = 1;
hydra.DiskStorePrms-maxOplogSize = 100;
hydra.DiskStorePrms-timeInterval = 30;
hydra.DiskStorePrms-queueSize = 10;
hydra.RegionPrms-diskSynchronous = false;

hydra.BridgePrms-names          = bridge;
hydra.BridgePrms-maxConnections = 2500;
hydra.BridgePrms-maxThreads     = 32;

hydra.PoolPrms-names                  = poolGLOBAL;
hydra.PoolPrms-readTimeout            = 1200000;
hydra.PoolPrms-subscriptionEnabled    = true;
*/
//hydra.PoolPrms-threadLocalConnections = true;

//------------------------------------------------------------------------------
// Data
//------------------------------------------------------------------------------

/*
cacheperf.CachePerfPrms-maxKeys = ${maxKeys};
cacheperf.poc.useCase3.UseCase3Prms-logQueryResults = false;
*/

//------------------------------------------------------------------------------
// Performance
//------------------------------------------------------------------------------

/*
hydra.VmPrms-extraVMArgs   = fcn "hydra.TestConfigFcns.duplicateString
                                  (\"-Xmx16g -Dgemfire.disk.recoverValues=true\", ${bridgeHosts}, true)"
                             ncf
                             ,
                             fcn "hydra.TestConfigFcns.duplicateString
                                  (\"-Xms256m -Xmx256m\", ${edgeHosts}, true)"
                             ncf
                             ;
hydra.VmPrms-extraVMArgs  += -XX:+UseParNewGC -XX:+UseConcMarkSweepGC
                             -XX:+DisableExplicitGC
                             ;
hydra.VmPrms-extraClassPaths = $JTESTS/rdsmodel.jar $GEMFIRE/lib/antlr.jar;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/poc/useCase3/query.spec;
*/
