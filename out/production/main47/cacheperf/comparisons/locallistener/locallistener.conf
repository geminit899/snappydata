include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparams1.inc;

hydra.Prms-testDescription = "
  1 host with 1 VM containing ${numThreads} publisher threads listening
  to themselves talk.";

hydra.ClientPrms-vmQuantities = 1;
hydra.ClientPrms-vmThreads = ${numThreads};

hydra.ConfigPrms-cacheConfig = cache;
hydra.ConfigPrms-regionConfig = region;
hydra.CachePrms-names = cache;
hydra.RegionPrms-names = region;
hydra.RegionPrms-scope = local;
//hydra.RegionPrms-dataPolicy = replicated;
hydra.RegionPrms-cacheListeners = cacheperf.gemfire.LatencyListener;

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = createDataTask
          batch
          cacheperf.CachePerfPrms-keyAllocation = ownKeys
          cacheperf.CachePerfPrms-warmupTerminatorMethod = none
          cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          ;
//CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = getDataTask
//          cacheperf.CachePerfPrms-keyAllocation = sameKeys
//          cacheperf.CachePerfPrms-warmupTerminatorMethod = none
//          cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
//          cacheperf.CachePerfPrms-validateObjects = true
//          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

hydra.Prms-totalTaskTimeSec = 900000; // time-based workload

cacheperf.CachePerfPrms-batchTerminatorMethod = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-batchSeconds   = 30;

cacheperf.CachePerfPrms-warmupTerminatorMethod = terminateOnTrimSeconds;
cacheperf.CachePerfPrms-warmupTerminatorFrequency = 5 seconds;
cacheperf.CachePerfPrms-trimSeconds    = 30;

cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalSeconds;
cacheperf.CachePerfPrms-taskTerminatorFrequency = 5 seconds;
cacheperf.CachePerfPrms-workSeconds    = 180;

cacheperf.CachePerfPrms-keyAllocation = ownKeysRandomWrap;
cacheperf.CachePerfPrms-maxKeys = 20000;
cacheperf.CachePerfPrms-objectType = objects.Message;
objects.MessagePrms-size = ${messageSize};

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/specs/putupdateEvents.spec;

hydra.VmPrms-extraVMArgs += -Xms500m -Xmx500m;
