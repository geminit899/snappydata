include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-maxResultWaitSec = 1200;    // 20 minutes
hydra.Prms-totalTaskTimeSec = 360000; // 100 hours

hydra.ClientPrms-vmThreads    = ${vmThreads};
hydra.ClientPrms-vmQuantities = ${vmQuantities};

hydra.CachePrms-names = putter listener;
hydra.RegionPrms-names = putter listener;
hydra.RegionPrms-scope = ${scope};
hydra.RegionPrms-dataPolicy = ${dataPolicy};
hydra.RegionPrms-cacheListeners = none, cacheperf.gemfire.SimpleListener;

hydra.Prms-testDescription = "Cache put with listeners performance with scope ${scope} and dataPolicy ${dataPolicy} for objects of type ${objectType} and size 1K using ${hydra.numHosts} hosts, ${vmQuantities} VMs per host, and ${vmThreads} threads per VM.  Each thread on each VM on one host puts its own entry over and over, while threads on all other hosts listen for and process events.";

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = putter
          hydra.ConfigPrms-regionConfig = putter
          threadGroups = putter
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = listener
          hydra.ConfigPrms-regionConfig = listener
          threadGroups = listener
          ;
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          threadGroups = putter
	  cacheperf.CachePerfPrms-keyAllocation = ownKeysWrap
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalIterations
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

hydra.GemFirePrms-conserveSockets = false;

cacheperf.CachePerfPrms-objectType = ${objectType};
objects.ArrayOfBytePrms-size = 1024;
objects.NestedOrderVectorPrms-width = 2;
objects.NestedOrderVectorPrms-depth = 3;

cacheperf.CachePerfPrms-trimIterations = ${trimIterations};
cacheperf.CachePerfPrms-workIterations = ${workIterations};
cacheperf.CachePerfPrms-batchSize      = ${batchSize};

cacheperf.CachePerfPrms-maxKeys = fcn ${hydra.numHosts} * ${vmQuantities} * ${vmThreads} ncf;

cacheperf.gemfire.GemFireCachePrms-processListenerEvents = true;

THREADGROUP putter   totalThreads = fcn ${vmThreads} * ${vmQuantities} ncf totalVMs = ${vmQuantities} clientNames = client1;
THREADGROUP listener totalThreads = fcn ( ${hydra.numHosts} - 1 ) * ${vmQuantities} * ${vmThreads} ncf;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/puts.spec;
