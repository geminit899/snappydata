include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-maxResultWaitSec = 180;    // 20 minutes
hydra.Prms-totalTaskTimeSec = 360000; // 100 hours

hydra.VmPrms-extraClassPaths = 
   fcn "hydra.TestConfigFcns.duplicate(\"$GEMFIRE/lib/antlr.jar\", ${hydra.numHosts}, true)" ncf;

hydra.ClientPrms-vmThreads    = ${vmThreads};
hydra.ClientPrms-vmQuantities = ${vmQuantities};

hydra.CachePrms-names = cache;
hydra.RegionPrms-names = region;
hydra.RegionPrms-scope = ${scope};
hydra.RegionPrms-dataPolicy = ${dataPolicy};

hydra.VmPrms-extraVMArgs += "-Xms512m -Xmx512m";

hydra.Prms-testDescription = "Cache put performance for a cache with scope ${scope} and dataPolicy ${dataPolicy} for objects of type ${objectType} using ${hydra.numHosts} hosts, ${vmQuantities} VMs per host, and ${vmThreads} threads per VM. Total number of keys is ${maxKeys}. Create index is ${createIndex}. ";

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = cache
          hydra.ConfigPrms-regionConfig = region
          ;
INITTASK  taskClass = cacheperf.comparisons.query.QueryPerfClient taskMethod = createIndexTask
	  ; 
TASK      taskClass = cacheperf.CachePerfClient taskMethod = putDataTask
          threadGroups = opThreads
	  cacheperf.CachePerfPrms-keyAllocation = sameKeysRandomWrap
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnTotalIterations
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

hydra.GemFirePrms-conserveSockets = true;

cacheperf.CachePerfPrms-objectType = ${objectType};

cacheperf.CachePerfPrms-trimIterations = ${trimIterations};
cacheperf.CachePerfPrms-workIterations = ${workIterations};
cacheperf.CachePerfPrms-batchSize      = ${batchSize};
cacheperf.CachePerfPrms-maxKeys = ${maxKeys};
cacheperf.comparisons.query.QueryPerfPrms-createIndex = ${createIndex};

query.index.IndexPrms-numOfIndexes = ${numOfIndexes};

THREADGROUP opThreads totalThreads = fcn ${hydra.numHosts} * ${vmThreads} * ${vmQuantities} ncf;

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/comparisons/puts.spec;
