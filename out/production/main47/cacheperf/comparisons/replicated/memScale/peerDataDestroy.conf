hydra.Prms-testDescription = "Peer datahosts create, then destroy data, then create again";

//------------------------------------------------------------------------------
// Tasks
//------------------------------------------------------------------------------
TASK taskClass = cacheperf.CachePerfClient taskMethod = destroyDataTask
     cacheperf.CachePerfPrms-keyAllocation = pseudoRandomUnique
     cacheperf.CachePerfPrms-keyPercentage = ${destroyPercentage}
     threadGroups = peer
     ;

//------------------------------------------------------------------------------
// Close Tasks
//------------------------------------------------------------------------------

// sleep task is to allow stats sampling enough time to record the region size
CLOSETASK  taskClass = cacheperf.CachePerfClient taskMethod = sleepTask
           cacheperf.CachePerfPrms-sleepMs=3000;

CLOSETASK  taskClass = cacheperf.CachePerfClient taskMethod = verifyRegionSizeAfterDestroys
           cacheperf.CachePerfPrms-keyPercentage = ${destroyPercentage}
           threadGroups = peer;

CLOSETASK  taskClass = cacheperf.CachePerfClient taskMethod = resetPseudoRandomUniqueKeysTask
           threadGroups = peer;

CLOSETASK  taskClass = cacheperf.CachePerfClient taskMethod = createDataTask
           batch
           cacheperf.CachePerfPrms-keyAllocation = pseudoRandomUnique
           cacheperf.CachePerfPrms-trimIterations = 0
           threadGroups = peer
           ;

// include comes after the above close task to make the above close task be the first close task to run
include $JTESTS/cacheperf/comparisons/replicated/peerDataCreate.conf;

//------------------------------------------------------------------------------
// Performance
//------------------------------------------------------------------------------

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/specs/create.spec;

