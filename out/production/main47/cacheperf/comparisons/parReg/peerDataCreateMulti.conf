include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/performance.inc;
include $JTESTS/hydraconfig/topology_p2p.inc;

hydra.Prms-testDescription = "Peer datahosts create partitioned data in two regions.";
hydra.Prms-testRequirement = "Buckets balanced so neither VM runs out of heap.";

hydra.Prms-totalTaskTimeSec = 259200;  // workload-based
hydra.Prms-maxResultWaitSec = 300;

//------------------------------------------------------------------------------
// Tasks
//------------------------------------------------------------------------------

INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = cacheperf.CachePerfClient taskMethod = openCacheTask
          hydra.ConfigPrms-cacheConfig = cache
          hydra.ConfigPrms-regionConfig = region
          distcache.gemfire.GemFireCachePrms-regionName = Region1
          ;
INITTASK  taskClass = cacheperf.comparisons.parReg.MultiRegionClient taskMethod = createRegionTask
          hydra.ConfigPrms-cacheConfig = cache
          hydra.ConfigPrms-regionConfig = region
          distcache.gemfire.GemFireCachePrms-regionName = Region2
          ;
TASK      taskClass = cacheperf.comparisons.parReg.MultiRegionClient taskMethod = createDataInRegionTask
          distcache.gemfire.GemFireCachePrms-regionName = Region1
          threadGroups = Region1
          ;
TASK      taskClass = cacheperf.comparisons.parReg.MultiRegionClient taskMethod = createDataInRegionTask
          distcache.gemfire.GemFireCachePrms-regionName = Region2
          threadGroups = Region2
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeCacheTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = closeStatisticsTask
          ;
CLOSETASK taskClass = cacheperf.CachePerfClient taskMethod = reportTrimIntervalsTask
          ;

THREADGROUP Region1 totalThreads = ${peerThreadsPerVM} totalVMs = 1;
THREADGROUP Region2 totalThreads = ${peerThreadsPerVM} totalVMs = 1;

//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-keyAllocation           = ownKeys;
cacheperf.CachePerfPrms-warmupTerminatorMethod  = none;
cacheperf.CachePerfPrms-taskTerminatorMethod    = terminateOnMaxKey;
cacheperf.CachePerfPrms-taskTerminatorFrequency = 1 iterations;
cacheperf.CachePerfPrms-batchTerminatorMethod   = terminateOnBatchSeconds;
cacheperf.CachePerfPrms-batchSeconds            = 120;

//------------------------------------------------------------------------------
// Cache and region
//------------------------------------------------------------------------------

hydra.CachePrms-names = cache;
hydra.RegionPrms-names = region;
hydra.RegionPrms-scope = default;
hydra.RegionPrms-dataPolicy = partition;
hydra.RegionPrms-partitionName = partition;
hydra.PartitionPrms-names = partition;
hydra.PartitionPrms-redundantCopies = ${redundantCopies};

//------------------------------------------------------------------------------
// Data
//------------------------------------------------------------------------------

cacheperf.CachePerfPrms-maxKeys    = ${maxKeys};
cacheperf.CachePerfPrms-objectType = objects.ArrayOfByte;
objects.ArrayOfBytePrms-size       = ${objectSize};

//------------------------------------------------------------------------------
// Performance
//------------------------------------------------------------------------------

hydra.VmPrms-extraVMArgs = "-Xms${heapMB}m -Xmx${heapMB}m -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+DisableExplicitGC -XX:CMSInitiatingOccupancyFraction=33;

hydra.GemFirePrms-conserveSockets = ${conserveSockets};

perffmwk.PerfReportPrms-statisticsSpecification = $JTESTS/cacheperf/gemfire/specs/creates.spec;
