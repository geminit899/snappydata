include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/systemparamsN.inc;

hydra.Prms-testDescription = "A publisher starts publishing new keys and populating the cache, while many other clients come up and perform getInitialImage.  All clients have REPLICATED dataPolicy, so its not deterministic which client will supply the image.  Ensure that all clients have same number of keys and the same final key";

hydra.Prms-testRequirement = "all clients must have the same region size & keys at test end";

INITTASK  taskClass = getInitialImage.InitImageClient taskMethod = openStatisticsTask
          ;
INITTASK  taskClass = getInitialImage.InitImageClient taskMethod = openCacheTask
          threadGroups = creator
          ;
TASK      taskClass = getInitialImage.InitImageClient taskMethod = putDataTask
          threadGroups = creator
	  cacheperf.CachePerfPrms-keyAllocation = sameKeys
	  cacheperf.CachePerfPrms-warmupTerminatorMethod = none
	  cacheperf.CachePerfPrms-taskTerminatorMethod = terminateOnMaxKey
          cacheperf.CachePerfPrms-batchSeconds = 60
          cacheperf.CachePerfPrms-batchTerminatorMethod = terminateOnBatchSeconds
          ;

TASK      taskClass = getInitialImage.InitImageClient taskMethod = timedOpenCacheTask
          threadGroups = giiClients
          maxTimesToRun = ${numGiiClients}
          startInterval = 1
          ;
CLOSETASK taskClass    = getInitialImage.InitImageClient
          taskMethod   = verifyGII
          threadGroups = giiClients
          ;
CLOSETASK taskClass = getInitialImage.InitImageClient taskMethod = validateMaxKeysRegionEntriesTask
          threadGroups = giiClients
          ;
CLOSETASK taskClass = getInitialImage.InitImageClient taskMethod = closeCacheTask
          threadGroups = giiClients
          ;
CLOSETASK taskClass = getInitialImage.InitImageClient taskMethod = closeStatisticsTask
          ;

THREADGROUP creator totalThreads = 1 totalVMs = 1 clientNames = client1;
THREADGROUP giiClients totalThreads = ${numGiiClients} totalVMs = ${numGiiClients};

hydra.Prms-maxResultWaitSec = 600;  
hydra.Prms-totalTaskTimeSec = 6000; 

hydra.ClientPrms-vmQuantities = 1  ${numGiiClients};
hydra.ClientPrms-vmThreads    = 1         1;

hydra.VmPrms-extraVMArgs = -Xmx750m;

cacheperf.CachePerfPrms-trimIterations = ${trimIterations};
cacheperf.CachePerfPrms-workIterations = ${workIterations};
cacheperf.CachePerfPrms-maxKeys        = ${workIterations};

cacheperf.CachePerfPrms-objectType = objects.ArrayOfByte;
objects.ArrayOfBytePrms-size = range 10 1024 egnar;

hydra.ConfigPrms-cacheConfig = cache;
hydra.CachePrms-names = cache;

hydra.ConfigPrms-regionConfig = region;
hydra.RegionPrms-names      = region;
hydra.RegionPrms-dataPolicy = ${dataPolicy};
hydra.RegionPrms-scope      = ${scope};
