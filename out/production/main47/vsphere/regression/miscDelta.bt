//////////////////////////////////////////////////////
// Use delta/local.misc.conf when running this bt
//////////////////////////////////////////////////////

// delta with conc cq 
delta/edgesPerformingAllOpsDeltaWithConcCq.conf // not possible
  bridgeHosts =  1 bridgeVMsPerHost = 1 bridgeThreadsPerVM = 1
  edgeHosts   =  1 edgeVMsPerHost   = 2 edgeThreadsPerVM   = 6
  doExecuteWithInitialResultsCQ = true
  threadGroupsName=bridge
  
delta/serverFailoverAndCQOpsDeltaWithConcCq.conf // possible
  bridgeHosts =  2 bridgeVMsPerHost = 2 bridgeThreadsPerVM = 1
  edgeHosts   =  2 edgeVMsPerHost   = 3 edgeThreadsPerVM   = 3
  doExecuteWithInitialResultsCQ = true 
  threadGroupsName=bridge
  
delta/cqListenerAndServerFailoverDeltaWithConcCq.conf // not possible
  A=feed    feedHosts   =  1 feedVMsPerHost   = 1 feedThreadsPerVM   = 2
  B=bridge  bridgeHosts =  2 bridgeVMsPerHost = 2 bridgeThreadsPerVM = 1
  C=edge    edgeHosts   =  2 edgeVMsPerHost   = 3 edgeThreadsPerVM   = 1
  threadGroupsName=bridge
  
delta/multRegCQListenerWithFeederDeltaWithConcCq.conf // not possible
  A=feed    feedHosts   =  1 feedVMsPerHost   = 1 feedThreadsPerVM   = 3
  B=bridge  bridgeHosts =  1 bridgeVMsPerHost = 2 bridgeThreadsPerVM = 1
  C=edge    edgeHosts   =  1 edgeVMsPerHost   = 4 edgeThreadsPerVM   = 1 
  threadGroupsName=bridge
  
/*delta/serialMultRegOpsCQListenerWithFeederDeltaWithConcCq.conf // not possible
  A=feed    feedHosts   =  1 feedVMsPerHost   = 1 feedThreadsPerVM   = 6
  B=bridge  bridgeHosts =  1 bridgeVMsPerHost = 2 bridgeThreadsPerVM = 1
  C=edge    edgeHosts   =  1 edgeVMsPerHost   = 4 edgeThreadsPerVM   = 1  
  threadGroupsName=bridge*/
  
// delta with subscription
hct/concBridgeNotify.conf
  bridgeHosts =  3 bridgeVMsPerHost = 1 bridgeThreadsPerVM = 1
  edgeHosts   =  2 edgeVMsPerHost   = 2 edgeThreadsPerVM   = 1
  threadGroupsName=bridge

/*hct/concBridgeNotifyAllKeys.conf
  bridgeHosts =  3 bridgeVMsPerHost = 1 bridgeThreadsPerVM = 1
  edgeHosts   =  2 edgeVMsPerHost   = 2 edgeThreadsPerVM   = 1
  threadGroupsName=bridge*/
  
hct/concBridgeNotifyFailover.conf
  bridgeHosts =  2 bridgeVMsPerHost = 1 bridgeThreadsPerVM = 1
  edgeHosts   =  3 edgeVMsPerHost   = 1 edgeThreadsPerVM   = 1
  threadGroupsName=bridge
  
hct/serialBridgeNotifyMixedInterests.conf
  bridgeHosts =  3 bridgeVMsPerHost = 1 bridgeThreadsPerVM = 1
  edgeHosts   =  5 edgeVMsPerHost   = 1 edgeThreadsPerVM   = 1
  threadGroupsName=bridge
  
//-------------------------
// parReg/parRegBridge.bt
/*parReg/bridge/serialParRegBridge.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=1
   bridgeHosts=5 bridgeVMsPerHost=1 bridgeThreadsPerVM=1
   redundantCopies=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=bridgeThreads

parReg/bridge/concParRegBridge.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=5 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   redundantCopies=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   bridgeOrderingWorkaround=registerInterest
   threadGroupsName=bridgeThreads*/

//-------------------------
// parReg/parRegHABridge.bt
parReg/bridge/serialParRegHABridge.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=1
   bridgeHosts=5 bridgeVMsPerHost=1 bridgeThreadsPerVM=1
   redundantCopies=3 numVMsToStop=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads

parReg/bridge/concParRegHABridge.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=5 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   redundantCopies=1 numVMsToStop=1 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads

parReg/bridge/concKnownKeysHABridge.conf
   edgeHosts=2 edgeVMsPerHost=1 edgeThreadsPerVM=3
   bridgeHosts=7 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   numKeys=75000 byteArraySize=1000 redundantCopies=3 numVMsToStop=3
   edgeVmSize=350 serverVmSize=450 
   threadGroupsName=verifyThreads

//-------------------------
// parReg/parReg.bt
/*parReg/serialParReg.conf 
  peerHosts=3 peerVMsPerHost=3 peerThreadsPerVM=2 
  redundantCopies=3 
  threadGroupsName=default

parReg/concParReg.conf 
  peerHosts=3 peerVMsPerHost=3 peerThreadsPerVM=10 
  redundantCopies=3 
  threadGroupsName=default

parReg/concKnownKeys.conf 
  peerHosts=5 peerVMsPerHost=2 peerThreadsPerVM=20 
  numKeys=1000000 byteArraySize=5
  threadGroupsName=default  

parReg/concParRegStopStart.conf 
  peerHosts=9 peerVMsPerHost=1 peerThreadsPerVM=10 
  redundantCopies = 0 numVMsToStop = 3 
  threadGroupsName=default

//-------------------------
// parReg/parRegHA.bt
parReg/serialParRegHA.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=2
   B=dataStore dataStoreHosts=4 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=2
   redundantCopies=3 numVMsToStop=3 
   threadGroupsName=dataStoreThreads

parReg/concParRegHA.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=10
   B=dataStore dataStoreHosts=3 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=10
   redundantCopies=1 numVMsToStop=1    
   threadGroupsName=dataStoreThreads 

parReg/concKnownKeysHA.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=7 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   numKeys=100000 byteArraySize=5000 redundantCopies=3 numVMsToStop=3
   threadGroupsName=verifyThreads*/
   
parReg/concKnownKeysHALock.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=3 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   numKeys=30000 byteArraySize=5000 redundantCopies=1 numVMsToStop=1
   threadGroupsName=verifyThreads
   
parReg/concParRegHA_meanKill.conf
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=10
   B=dataStore dataStoreHosts=4 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=10
   redundantCopies=2 numVMsToStop=1
   threadGroupsName=dataStoreThreads

//-------------------------
// parReg/parRegPersist.bt
/*parReg/persistence/serialParRegPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=2 redundantCopies=2
    threadGroupsName=default
        
parReg/persistence/concParRegPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=10 redundantCopies=2
    threadGroupsName=default*/
        
parReg/persistence/concKnownKeysPersist.conf peerHosts=10 peerVMsPerHost=1 peerThreadsPerVM=20 numKeys=10000 byteArraySize=5 
    threadGroupsName=default

//-------------------------
// parReg/parRegHAPersist.bt
/*parReg/persistence/serialParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=1
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=1
   redundantCopies=2 numVMsToStop=2
   threadGroupsName=dataStoreThreads
   
parReg/persistence/serialParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=1
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=1
   redundantCopies=3 numVMsToStop=7
   threadGroupsName=dataStoreThreads

// don't stop all datastores in this test; concParRegRecover does that
parReg/persistence/concParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   redundantCopies=1 numVMsToStop=1
   threadGroupsName=dataStoreThreads
   
parReg/persistence/concParRegHAPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   redundantCopies=0 numVMsToStop=3
   threadGroupsName=dataStoreThreads*/

// this stops all vms with concurrent ops and does recovery
// this test cannot be run with 0 redundantCopies 
parReg/persistence/concParRegRecover.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   redundantCopies=1 
   threadGroupsName=dataStoreThreads

// shutdownAll
parReg/persistence/concParRegHAShutDownAllPersist.conf 
   A=accessor accessorHosts=1 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=6 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   redundantCopies=2 numVMsToStop=-1 // numVMsToStop is unused   
   threadGroupsName=dataStoreThreads


//-------------------------
// parReg/parRegBridgePersist.bt
/*parReg/persistence/serialParRegBridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=1
   bridgeHosts=4 bridgeVMsPerHost=1 bridgeThreadsPerVM=1
   redundantCopies=1 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=bridgeThreads

parReg/persistence/concParRegBridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=4 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   redundantCopies=2 numAccessors=1 numEmptyClients=1 numThinClients=1
   bridgeOrderingWorkaround=registerInterest
   threadGroupsName=bridgeThreads

parReg/persistence/concParRegBridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=4 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   redundantCopies=0 numAccessors=1 numEmptyClients=1 numThinClients=1
   bridgeOrderingWorkaround=uniqueKeys
   threadGroupsName=bridgeThreads*/

//-------------------------
// parReg/parRegHABridgePersist.bt
parReg/persistence/serialParRegHABridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=2
   bridgeHosts=6 bridgeVMsPerHost=1 bridgeThreadsPerVM=2
   redundantCopies=1 numVMsToStop=1 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads
   
parReg/persistence/serialParRegHABridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=1
   bridgeHosts=6 bridgeVMsPerHost=1 bridgeThreadsPerVM=1
   redundantCopies=0 numVMsToStop=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads

parReg/persistence/concParRegHABridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=6 bridgeVMsPerHost=1 bridgeThreadsPerVM=2
   redundantCopies=3 numVMsToStop=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads
   
parReg/persistence/concParRegHABridgePersist.conf 
   edgeHosts=4 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=6 bridgeVMsPerHost=1 bridgeThreadsPerVM=2
   redundantCopies=0 numVMsToStop=3 numAccessors=1 numEmptyClients=1 numThinClients=1
   threadGroupsName=dataStoreThreads



