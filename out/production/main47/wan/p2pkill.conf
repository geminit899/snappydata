//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_p2p_locator.inc;
include $JTESTS/wan/wan.inc;
include $JTESTS/wan/p2p.inc;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription="WAN test where each site is peer-to-peer with the clients within its distributed system and each client is a WAN gateway hub to other sites.";

//------------------------------------------------------------------------------
// TEST TERMINATION
//------------------------------------------------------------------------------

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 2400;

// Kill

hct.HctPrms-killInterval = 60000;  // ms
hct.HctPrms-regionName = "GlobalVillage";
hct.HctPrms-blackboardName = "Stuff";
hct.HctPrms-blackboardType = rmi;
hct.HctPrms-restartWaitSec = 5;

//------------------------------------------------------------------------------
// INITIAL WORK (configure locators, caches, hubs, gateways)
//------------------------------------------------------------------------------

INITTASK taskClass = wan.WANClient taskMethod = createLocatorTask
         threadGroups = locator;
INITTASK taskClass = wan.WANClient taskMethod = startAndConnectLocatorTask
         threadGroups = locator;
INITTASK taskClass = wan.WANClient taskMethod = initPeerCacheTask
         runMode = always
         threadGroups = peer;
INITTASK taskClass = wan.WANClient taskMethod = startGatewayHubTask
         runMode = always
         threadGroups = peer;

//------------------------------------------------------------------------------
// PRIMARY WORK (cache operations)
//------------------------------------------------------------------------------

wan.CacheClientPrms-sleepSec = 0;

TASK    taskClass = wan.WANClient taskMethod = putSequentialKeysTask
        threadGroups = peer;

TASK    taskClass = wan.WANClient taskMethod  = killGatewayHub
        maxThreads = 1  
        startInterval = 1
        maxTimesToRun = 1
        threadGroups = peer
        ;

//------------------------------------------------------------------------------
// FINAL WORK (validate and close)
//------------------------------------------------------------------------------

CLOSETASK taskClass = wan.WANClient taskMethod = printSequentialKeysTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = validateSequentialKeysTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = closePeerCacheTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANBlackboard taskMethod = printBlackboard
          threadGroups = peer;
