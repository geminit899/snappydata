include $JTESTS/hydraconfig/hydraparams1.inc;

hydra.Prms-testDescription = "Explicit configuration of WAN with sites that are peer-to-peer caches.";

hydra.Prms-testTopology = "WAN topology with 2 sites, where each site is a peer-to-peer cache topology with 1 host per site, 1 VM per host, and 1 thread per VM.";

hydra.Prms-manageLocatorAgents = false;

// Each item is suffixed _i_j where i is the WAN site number and j is the item
// number (which in this test is always 1, since there is only one peer per WAN
// site).

hydra.HostPrms-names =
        locatorhost_1_1    locatorhost_2_1    locatorhost_3_1
        peerhost_1_1       peerhost_2_1       peerhost_3_1;

hydra.VmPrms-names =
        locatorvm_1_1      locatorvm_2_1      locator_vm_3_1
        peervm_1_1         peervm_2_1         peer_vm_3_1;

hydra.VmPrms-hostNames =
        locatorhost_1_1    locatorhost_2_1    locatorhost_3_1
        peerhost_1_1       peerhost_2_1       peerhost_3_1;

hydra.GemFirePrms-names =
        locatorgemfire_1_1 locatorgemfire_2_1 locatorgemfire_3_1
        peergemfire_1_1    peergemfire_2_1    peergemfire_3_1;

hydra.GemFirePrms-hostNames =
        locatorhost_1_1    locatorhost_2_1    locatorhost_3_1
        peerhost_1_1       peerhost_2_1       peerhost_3_1;

hydra.GemFirePrms-distributedSystem =
        ds_1               ds_2               ds_3
        ds_1               ds_2               ds_3;

hydra.ClientPrms-names =
        locator_1_1        locator_2_1        locator_3_1
        peer_1_1           peer_2_1           peer_3_1;

hydra.ClientPrms-vmNames =
        locatorvm_1_1      locatorvm_2_1      locator_vm_3_1
        peervm_1_1         peervm_2_1         peer_vm_3_1;

hydra.ClientPrms-gemfireNames =
        locatorgemfire_1_1 locatorgemfire_2_1 locatorgemfire_3_1
        peergemfire_1_1    peergemfire_2_1    peergemfire_3_1;

hydra.ClientPrms-vmQuantities = 1 1 1 2 2 2;
hydra.ClientPrms-vmThreads    = 1;

// Gateway, cache, and region configuration parameters

hydra.GatewayHubPrms-names = hub;

hydra.GatewayPrms-names = gateway;
hydra.GatewayPrms-maximumQueueMemory = 300;
hydra.GatewayPrms-batchTimeInterval = 10;
hydra.GatewayPrms-diskStoreName = disk;
hydra.DiskStorePrms-names = disk;

hydra.CachePrms-names = peer;

hydra.RegionPrms-names         = peer;
hydra.RegionPrms-enableGateway = true;
hydra.RegionPrms-dataPolicy    = replicate;
hydra.RegionPrms-scope         = dack;

// Configuration assignments

wan.CacheClientPrms-cacheConfig = peer;
wan.CacheClientPrms-regionConfig = peer;
wan.CacheServerPrms-gatewayHubConfig = hub;
wan.CacheServerPrms-gatewayConfig = gateway;

INITTASK  taskClass = wan.WANClient taskMethod = createLocatorTask
          threadGroups = locator;
INITTASK   taskClass = wan.WANClient taskMethod = startAndConnectLocatorTask
          threadGroups = locator;
INITTASK  taskClass = wan.WANClient taskMethod = initPeerCacheTask
          threadGroups = peer;
INITTASK  taskClass = wan.WANClient taskMethod = startGatewayHubTask
          threadGroups = peer;
TASK      taskClass = wan.WANClient taskMethod = putTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = printTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = validateTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = closePeerCacheTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANBlackboard taskMethod = printBlackboard
          threadGroups = peer;

THREADGROUP locator
  totalThreads = 3 totalVMs = 3
  clientNames = locator_1_1, locator_2_1, locator_3_1;
THREADGROUP peer
  totalThreads = 6 totalVMs = 6
  clientNames = peer_1_1, peer_2_1, peer_3_1;

hydra.Prms-totalTaskTimeSec = 30;

wan.CacheClientPrms-secToWaitForQueue = 1200;
