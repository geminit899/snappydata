//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_p2p_locator.inc;
include $JTESTS/wan/wan.inc;
include $JTESTS/wan/p2p.inc;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription="WAN test where each site is peer-to-peer with the clients within its distributed system and each client is a WAN gateway hub to other sites.";

//------------------------------------------------------------------------------
// TEST TERMINATION
//------------------------------------------------------------------------------

hydra.Prms-totalTaskTimeSec = 60;
hydra.Prms-maxResultWaitSec = 1200;

//------------------------------------------------------------------------------
// INITIAL WORK (configure locators, caches, hubs, gateways)
//------------------------------------------------------------------------------

/** Configures the locators. */
INITTASK taskClass = wan.WANClient taskMethod = createLocatorTask
         threadGroups = locator;
INITTASK taskClass = wan.WANClient taskMethod = startAndConnectLocatorTask
         threadGroups = locator;

/** Configures the client cache. */
INITTASK taskClass = wan.WANClient taskMethod = initPeerCacheTask
         threadGroups = peer;
INITTASK taskClass = wan.WANClient taskMethod = startGatewayHubTask
         threadGroups = peer;

//------------------------------------------------------------------------------
// PRIMARY WORK (cache operations)
//------------------------------------------------------------------------------

TASK taskClass = wan.WANClient taskMethod = putSequentialKeysWithBytesTask
     threadGroups = peer;

wan.CacheClientPrms-sleepSec = 0;

//------------------------------------------------------------------------------
// FINAL WORK (validate and close)
//------------------------------------------------------------------------------

CLOSETASK taskClass = wan.WANClient taskMethod = printSequentialKeysTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = validateSequentialKeysTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANClient taskMethod = closePeerCacheTask
          threadGroups = peer;
CLOSETASK taskClass = wan.WANBlackboard taskMethod = printBlackboard
          threadGroups = peer;
