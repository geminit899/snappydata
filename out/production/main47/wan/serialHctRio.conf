//------------------------------------------------------------------------------
// INCLUDE FILES
//------------------------------------------------------------------------------

include $JTESTS/hydraconfig/hydraparams1.inc;
include $JTESTS/hydraconfig/topology_wan_hct_locator.inc;
include $JTESTS/wan/wan.inc;
include $JTESTS/wan/hct.inc;

//------------------------------------------------------------------------------
// TEST DESCRIPTION
//------------------------------------------------------------------------------

hydra.Prms-testDescription="WAN test where each cache server is a bridge for the edge clients at its site and is a WAN gateway hub to other cache servers.";

//------------------------------------------------------------------------------
// TEST CONTROL
//------------------------------------------------------------------------------

THREADGROUP creator totalThreads = 1 totalVMs = 1 clientNames = edge_1_1;

hydra.Prms-serialExecution=true;
hydra.Prms-totalTaskTimeSec = 300;

//------------------------------------------------------------------------------
// INITIALIZATION WORK (configure locators, caches, hubs, gateways)
//------------------------------------------------------------------------------

hydra.RegionPrms-dataPolicy          = persistentReplicate default;
hydra.DiskStorePrms-diskDirNum          = 1         default;
hydra.RegionPrms-diskStoreName       = disk      none;
hydra.RegionPrms-diskSynchronous     = false;
hydra.RegionPrms-cacheListeners      = none,     wan.EventListener;

hydra.DiskStorePrms-names = disk;
hydra.DiskStorePrms-queueSize = 2500;
hydra.DiskStorePrms-timeInterval = 15;

hydra.GatewayPrms-batchConflation = true;

/**
 * Starts the locators and connects them to admin-only distributed systems.
 */
INITTASK taskClass = wan.WANClient taskMethod = createLocatorTask
         threadGroups = locator;
INITTASK taskClass = wan.WANClient taskMethod = startAndConnectLocatorTask
         threadGroups = locator;

/**
 * Configures the bridge server cache.
 */
INITTASK taskClass = wan.WANClient taskMethod = initServerCacheTask
         threadGroups = bridge;
INITTASK taskClass = wan.WANClient taskMethod = startGatewayHubTask
         threadGroups = bridge;

/**
 * Configures the client cache.
 */
INITTASK taskClass = wan.WANClient taskMethod = initEdgeClientCacheTask
         threadGroups = creator, default;
wan.CacheClientPrms-interestPolicy = keys;

/**
 * Populate the region (across all VMs) 
 */
INITTASK taskClass = wan.WANClient taskMethod = populateRegionTask
         wan.CacheClientPrms-numEntries = 1000
         threadGroups = creator
         ;

//------------------------------------------------------------------------------
// PRIMARY WORKLOAD (cache operations)
//------------------------------------------------------------------------------

TASK taskClass = wan.WANClient taskMethod = destroyRandomEntriesTask
     wan.CacheClientPrms-sleepSec = 60
     wan.CacheClientPrms-numEntries = 1
     threadGroups = creator, default
     ;

//------------------------------------------------------------------------------
// SHUTDOWN WORK (validate and close)
//------------------------------------------------------------------------------

//CLOSETASK taskClass = wan.WANClient taskMethod = printTask
//          threadGroups = creator, default;
//CLOSETASK taskClass = wan.WANClient taskMethod = validateTask
//          threadGroups = creator, default;
CLOSETASK taskClass = wan.WANClient taskMethod = closeEdgeClientCacheTask
          threadGroups = creator, default;
CLOSETASK taskClass = wan.WANBlackboard taskMethod = printBlackboard
          threadGroups = creator, default;
CLOSETASK taskClass = wan.WANClient taskMethod = updateBBandCloseServerCacheTask
          threadGroups = bridge;
