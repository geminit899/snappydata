INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;

hydra.Prms-testRequirement = "Dynamic regions (and data put in regions) are propogated from client to server, server to server, server to client.";
hydra.Prms-testDescription = "Basic test for dynamic regions in hierachical cache environment";

hydra.GemFirePrms-conserveSockets = true;

hydra.ClientPrms-vmThreads = 1; // override generic topology

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 120;
hydra.Prms-errorOnFailedGFStartup = false;
hydra.Prms-serialExecution = true;
hydra.Prms-roundRobin = true;

hydra.log.LogPrms-mergeLogFiles = true;

hydra.CachePrms-names = bridge edge;

hydra.RegionPrms-names          = bridge                          edge;
hydra.RegionPrms-scope          = ack                             local;
hydra.RegionPrms-dataPolicy     = replicated                      default;
hydra.RegionPrms-poolName    = none                            brloader;
hydra.RegionPrms-cacheListeners = dynamicReg.BridgeEventListener, none;

hydra.BridgePrms-names                  = bridge;

//this must be true but DynamicRegionFactory should set automatically

hydra.ConfigPrms-poolConfig = brloader;
hydra.PoolPrms-names                       = brloader;
hydra.PoolPrms-threadLocalConnections         = false; // see Bug 37157
hydra.PoolPrms-minConnections        = 2;
hydra.PoolPrms-subscriptionEnabled = true;

INITTASK  taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_initBridgeServer
          threadGroups = bridge
          ; // TBD: do this with xml
INITTASK  taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_initialize
          threadGroups = default, opThread
          ;
INITTASK  taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_putData
          threadGroups = opThread
          ;
TASK      taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_validate
          threadGroups = default
          ;
TASK      taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_putData
          threadGroups = opThread
          ;
CLOSETASK taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_validate
          ;

THREADGROUP bridge
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP opThread
  totalThreads = 1 totalVMs = 1 clientNames = edge1;

dynamicReg.DynamicRegionPrms-numRootRegions = ${numRootRegions};
dynamicReg.DynamicRegionPrms-numSubRegions = ${numSubRegions};
dynamicReg.DynamicRegionPrms-regionDepth = ${regionDepth};
dynamicReg.DynamicRegionPrms-maxEntries = ${maxEntries};

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.ValueHolderPrms-useExtraObject = false;
