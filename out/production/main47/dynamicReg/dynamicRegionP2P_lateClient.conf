INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_p2p.inc;

hydra.Prms-testRequirement = "TBD";
hydra.Prms-testDescription = "Verifies a client, arriving after other clients have initialized and started using a dynamic region, can access the dynamic region";

hydra.ClientPrms-vmThreads = 1; // override generic topology

hydra.Prms-totalTaskTimeSec = 600;
hydra.Prms-maxResultWaitSec = 120;
hydra.Prms-errorOnFailedGFStartup = false;
hydra.Prms-serialExecution = true;
hydra.Prms-roundRobin = true;
hydra.Prms-doInitTasksSequentially=true;

hydra.log.LogPrms-mergeLogFiles = true;

hydra.CachePrms-names         = cache;
hydra.CachePrms-searchTimeout = 600;

hydra.RegionPrms-names      = region;
hydra.RegionPrms-regionName = root1;
hydra.RegionPrms-scope      = ack;
hydra.RegionPrms-dataPolicy = replicated;

INITTASK     taskClass   = dynamicReg.DynamicRegionTest taskMethod  = HydraTask_initClientCacheWithXml
             threadGroups = default, putThread
             ;
INITTASK     taskClass   = dynamicReg.DynamicRegionTest taskMethod = HydraTask_putData
             threadGroups = putThread
             ;
INITTASK     taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_validate
             threadGroups = default, putThread
             ;
INITTASK     taskClass = dynamicReg.DynamicRegionTest taskMethod = HydraTask_initClientCacheWithXml
             threadGroups = lateClient
             ;
TASK         taskClass   = dynamicReg.DynamicRegionTest taskMethod = HydraTask_validate
             threadGroups = default, lateClient
             ;

THREADGROUP putThread totalThreads = 1 totalVMs = 1 clientNames = client1;
THREADGROUP lateClient totalThreads = 1 totalVMs = 1 clientNames = client2;

dynamicReg.DynamicRegionPrms-numRootRegions = ${numRootRegions};
dynamicReg.DynamicRegionPrms-numSubRegions = ${numSubRegions};
dynamicReg.DynamicRegionPrms-regionDepth = ${regionDepth};
dynamicReg.DynamicRegionPrms-maxEntries = ${maxEntries};

//util.TestHelperPrms-minTaskGranularitySec = 0;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-borderCasePercentage = 0;
util.RandomValuesPrms-objectType = java.lang.Integer;
util.RandomValuesPrms-valueType = java.lang.Integer;

util.ValueHolderPrms-useExtraObject = false;
                                                                                
//dynamicReg.BridgeNotifyPrms-entryOperations = ONEOF add add update read destroy FOENO;
//localInvalidate localDestroy FOENO;
