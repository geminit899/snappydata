hydra.Prms-testRequirement = "Test CQ with a variety of operations with careful validation and serial execution in a bridge configuration";
hydra.Prms-testDescription = "
This test executes operations on entries on a region and carefully
validates for correctness in the CQs while servers are stopped and started.
The test uses serial round robin; the first thread
in the round does a random operation, then all other threads in the round
verify their view of the operation. After the last thread in the round verifies,
it then becomes the first in the next round, thus the thread doing the random
operation changes for each round. 
";

INCLUDE $JTESTS/cq/concCQBridgeHA.conf;

cq.CQUtilPrms-QueryServicePoolName = edgeDescript;
cq.CQUtilPrms-QueryServiceUsingPool = false;

// define the bridge servers
hydra.BridgePrms-names          = bridge;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.RegionPrms-names          = serverRegion;
hydra.RegionPrms-regionName     = testRegion;
hydra.RegionPrms-scope          = ack;
hydra.RegionPrms-poolName       = none;
hydra.RegionPrms-dataPolicy     = replicate;
hydra.RegionPrms-cacheListeners = hct.BridgeEventListener;
hydra.RegionPrms-partitionName  = none;

util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;

// define the edge clients (using ClientCache and ClientRegionFactory apis
hydra.ClientCachePrms-names           = clientCache;

hydra.ClientRegionPrms-names          = clientRegion;
hydra.ClientRegionPrms-regionName     = testRegion;
hydra.ClientRegionPrms-clientRegionShortcut = CACHING_PROXY;
hydra.ClientRegionPrms-poolName       = edgeDescript;
hydra.ClientRegionPrms-cacheListeners = util.SilenceListener;

// define the edge clients
hydra.PoolPrms-names                  = edgeDescript;
hydra.PoolPrms-minConnections         = 2;
hydra.PoolPrms-subscriptionEnabled    = true;
hydra.PoolPrms-threadLocalConnections = true;
hydra.PoolPrms-readTimeout            = 800000;
hydra.PoolPrms-subscriptionRedundancy = ${redundancyLevel};

