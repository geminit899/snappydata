hydra.Prms-testRequirement = "Test CQ in simple tests, much like unit tests";
hydra.Prms-testDescription = "
Execute all tests, save up any errors and report all errors (rather than just the first one).
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_hct.inc;

hydra.VmPrms-extraClassPaths =
   fcn "hydra.TestConfigFcns.duplicate(\"$GEMFIRE/lib/antlr.jar\", ${bridgeHosts})" ncf;

THREADGROUP bridgeThreads
  totalThreads = fcn
                 ${bridgeHosts} * ${bridgeVMsPerHost} * ${bridgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"bridge\", ${bridgeHosts}, true)"
                 ncf;
THREADGROUP edgeThreads
  totalThreads = fcn
                 ${edgeHosts} * ${edgeVMsPerHost} * ${edgeThreadsPerVM}
                 ncf
  clientNames  = fcn "hydra.TestConfigFcns.generateNames
                      (\"edge\", ${edgeHosts}, true)"
                 ncf;         

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_initializeBridgeServer
             threadGroups = bridgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_initializeClient
             threadGroups = edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxIntegers
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxLongs
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxShorts
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxBytes
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxFloats
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxDoubles
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxCharacters
             threadGroups =  edgeThreads;

INITTASK     taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_testMinMaxStrings
             threadGroups =  edgeThreads;

CLOSETASK      taskClass   = cq.CQSimpleTest  taskMethod = HydraTask_checkForErrors
               threadGroups =  edgeThreads;

hydra.GemFirePrms-stopSystemsAfterTest = true;

hydra.Prms-totalTaskTimeSec = 1200;
hydra.Prms-maxResultWaitSec = 600;
//hydra.Prms-haltIfBadResult = false;

INCLUDE $JTESTS/util/randomValues.inc;
util.RandomValuesPrms-objectType = byte[];
util.RandomValuesPrms-elementSize = 1000;
util.ValueHolderPrms-useExtraObject = true;
hydra.GemFirePrms-conserveSockets = ONEOF true false FOENO;

hydra.CachePrms-names           = cache1;
hydra.CachePrms-searchTimeout   = 600;

hydra.Prms-useFixedRandomInMaster= true;
hydra.RegionPrms-names          = clientRegion            serverRegion;
hydra.RegionPrms-regionName     = testRegion              testRegion;
hydra.RegionPrms-scope          = local                   ack;
hydra.RegionPrms-poolName    = edgeDescript            none;
hydra.RegionPrms-dataPolicy     = empty                   replicate;
hydra.RegionPrms-cacheListeners = event.LogListener,      hct.BridgeEventListener;
hydra.RegionPrms-partitionName  = none                    none;

cq.CQUtilPrms-numOpsPerTask = 100;
cq.CQUtilPrms-QueryServicePoolName = qservice;
cq.CQUtilPrms-QueryServiceUsingPool = ONEOF true false FOENO;

util.CachePrms-useDeclarativeXmlFile = ONEOF true false FOENO;

// define the edge clients
hydra.PoolPrms-names                       = edgeDescript qservice;
hydra.PoolPrms-minConnections        = 2;
hydra.PoolPrms-subscriptionEnabled = true;
hydra.PoolPrms-threadLocalConnections         = true;
hydra.PoolPrms-readTimeout                 = 60000;
hydra.PoolPrms-subscriptionRedundancy             = RANGE 0 
                                                   fcn ${bridgeHosts} * ${bridgeVMsPerHost} ncf
                                             EGNAR;

// define the bridge servers
hydra.BridgePrms-names                = bridge;

