<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
 Changes for GemFireXD distributed data platform (some marked by "GemStone changes")

 Portions Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License"); you
 may not use this file except in compliance with the License. You
 may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 implied. See the License for the specific language governing
 permissions and limitations under the License. See accompanying
 LICENSE file.
-->

<project default="toursdb" basedir=".">

<!-- Set Properties -->
  <!-- User settings -->
  <property file="${user.home}/ant.properties"/>
  <!-- Set property lib dir -->
  <property name="properties.dir" value="${ant.home}/properties"/>
  <!-- Significant dirs -->
  <property file="${properties.dir}/dirs.properties"/>
  <!-- Compiler settings -->
  <property file="${properties.dir}/${build.compiler}.properties"/>
  <!-- Compile-time classpath properties files -->
  <property file="${properties.dir}/extrapath.properties"/>
  <property file="${properties.dir}/compilepath.properties"/>


<!-- Targets -->

  <target name="toursdb" depends="compile,buildschema,loadtables,jarup,copyfiles"/>

  <target name="compile">
    <javac
      source="1.4"
      target="1.4"
      bootclasspath="${empty}"
      debug="${debug}"
      depend="${depend}"
      deprecation="${deprecation}"
      optimize="${optimize}"
      proceed="${proceed}"
      verbose="${verbose}"
      srcdir="${derby.demo.src.dir}"
      destdir="${out.dir}">
      <classpath>
        <pathelement path="${compile.classpath}"/>
      </classpath>
      <include name="toursdb/insertMaps.java"/>
    </javac>
  </target>

  <target name="buildschema">
    <echo level="info" message="Begin building toursdb"/>
    <java classname="com.pivotal.gemfirexd.internal.tools.ij"
          output="toursdb.out"
          failonerror="true"
          dir="${derby.demo.src.dir}/toursdb" fork="true">
      <classpath>
        <pathelement path="${out.dir}"/>
        <pathelement path="${compile.classpath}"/>
      </classpath>
      <sysproperty key="ij.driver" value="com.pivotal.gemfirexd.jdbc.EmbeddedDriver"/>
      <!-- GemStone changes BEGIN -->
      <sysproperty key="ij.database" value="jdbc:gemfirexd:;mcast-port=0"/>
      <!-- allow running in background that gets stuck due to jline usage of ij -->
      <sysproperty key="jline.terminal" value="jline.UnsupportedTerminal"/>
      <sysproperty key="gemfire.log-level" value="${logLevel}"/>
      <!-- original code
      <sysproperty key="ij.database" value="jdbc:derby:toursdb;create=true"/>
      -->
      <!-- GemStone changes END -->
      <arg value="ToursDB_schema.sql"/>
    </java>
  </target>

  <target name="loadtables">
    <java classname="com.pivotal.gemfirexd.internal.tools.ij"
          output="toursdb.out" append="true"
          failonerror="true"
          dir="${derby.demo.src.dir}/toursdb" fork="true">
      <classpath>
        <pathelement path="${out.dir}"/>
        <pathelement path="${compile.classpath}"/>
      </classpath>
      <sysproperty key="ij.driver" value="com.pivotal.gemfirexd.jdbc.EmbeddedDriver"/>
      <!-- GemStone changes BEGIN -->
      <sysproperty key="ij.database" value="jdbc:gemfirexd:;mcast-port=0"/>
      <!-- allow running in background that gets stuck due to jline usage of ij -->
      <sysproperty key="jline.terminal" value="jline.UnsupportedTerminal"/>
      <sysproperty key="gemfire.log-level" value="config"/>
      <!-- sysproperty key="gemfire.log-level" value="${logLevel}"/ -->
      <!-- original code
      <sysproperty key="ij.database" value="jdbc:derby:toursdb;create=true"/>
      -->
      <!-- GemStone changes END -->
      <arg value="loadTables.sql"/>
    </java>
    <java classname="toursdb.insertMaps"
          output="toursdb.out" append="true"
          failonerror="true"
          dir="${derby.demo.src.dir}/toursdb" fork="true">
      <classpath>
        <pathelement path="${out.dir}"/>
        <pathelement path="${compile.classpath}"/>
      </classpath>
      <!-- GemStone changes BEGIN -->
      <!-- allow running in background that gets stuck due to jline usage of ij -->
      <sysproperty key="jline.terminal" value="jline.UnsupportedTerminal"/>
      <sysproperty key="gemfire.log-level" value="${logLevel}"/>
      <!-- GemStone changes END -->
    </java>
    <java classname="com.pivotal.gemfirexd.internal.tools.ij"
          output="toursdb.out" append="true"
          failonerror="true"
          dir="${derby.demo.src.dir}/toursdb" fork="true">
      <classpath>
        <pathelement path="${out.dir}"/>
        <pathelement path="${compile.classpath}"/>
      </classpath>
      <!-- GemStone changes BEGIN -->
      <!-- allow running in background that gets stuck due to jline usage of ij -->
      <sysproperty key="jline.terminal" value="jline.UnsupportedTerminal"/>
      <sysproperty key="gemfire.log-level" value="${logLevel}"/>
      <!-- GemStone changes END -->
      <arg value="disconnect.sql"/>
    </java>
  </target>

  <target name="jarup"> 
    <zip destfile="${derby.demo.src.dir}/toursdb/toursdb.jar"
         basedir="${derby.demo.src.dir}/toursdb"
         includes="toursdb/**"/>
    <echo level="info" message="Finished building toursdb"/>
  </target>

  <target name="copyfiles">
    <copy todir="${out.dir}/${derby.testing.functest.dir}/tests/demo">
      <fileset dir="${derby.demo.src.dir}/toursdb"
               includes="*.sql,*.gif"/>
    </copy>
  </target>

</project>
