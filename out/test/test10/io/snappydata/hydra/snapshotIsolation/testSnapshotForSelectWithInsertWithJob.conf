hydra.Prms-testRequirement = "Test to verify snapshot Isolation for DML ops in  Column tables using ct schema";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

TASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.ct.CreateAndLoadCTTablesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "dataFilesLocation=${dataFilesLocation},tableType=${tableType},redundancy=${redundantCopies},persistenceMode=${persistenceMode}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            maxTimesToRun = 1
            threadGroups = snappyThreads
            ;

//task for running select queries
TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.snapshotIsolation.ValidateSnapshotSelectWithInsertJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "tableType=${tableType}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            startInterval = 20
            maxThreads =1
            threadGroups = snappyStoreThreads;

//task for running select queries at the end of test
CLOSETASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.ct.ValidateCTQueriesJob
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${dataFilesLocation} ${tableType} ${fullResultSetValidation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = leadThreads;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;
hydra.Prms-totalTaskTimeSec           = 300;