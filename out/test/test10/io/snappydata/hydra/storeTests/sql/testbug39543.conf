hydra.Prms-testDescription = " this tests derby on gfe";

INCLUDE $JTESTS/io/snappydata/hydra/storeTests/sql/accessorOp.inc;

hydra.Prms-manageDerbyServer = true;
hydra.Prms-totalTaskTimeSec           = 600;
hydra.Prms-maxResultWaitSec           = 300;
hydra.Prms-maxCloseTaskResultWaitSec  = 120;
hydra.Prms-serialExecution            = false;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
	threadGroups = accessorThreads;

sql.SQLPrms-dmlOperations = ONEOF insert update update update query query query FOENO; //delete FOENO;
sql.SQLPrms-dmlTables = "trade.customers" "trade.securities" "trade.portfolio";
sql.SQLPrms-hasNetworth = false;

sql.SQLPrms-createSchemas = "create schema trade" "create schema default1" "create schema emp" ;

//securities has primary key and unique constraints
sql.SQLPrms-createTablesStatements =
	"create table trade.customers (cid int not null, cust_name varchar(100), since date, addr varchar(100), tid int, primary key (cid))"
	"create table trade.securities (sec_id int not null, symbol varchar(10) not null, price decimal (30, 20), exchange varchar(10) not null, tid int, constraint sec_pk primary key (sec_id), constraint sec_uq unique (symbol, exchange), constraint exc_ch check (exchange in ('nasdaq', 'nye', 'amex', 'lse', 'fse', 'hkse', 'tse')))"
	"create table trade.portfolio (cid int not null, sid int not null, qty int not null, availQty int not null, subTotal decimal(30,20), tid int, constraint portf_pk primary key (cid, sid), constraint cust_fk foreign key (cid) references trade.customers (cid), constraint sec_fk foreign key (sid) references trade.securities (sec_id), constraint qty_ck check (qty>=0), constraint avail_ch check (availQty>=0 and availQty<=qty))"
	"create table trade.sellorders (oid int not null constraint orders_pk primary key, cid int, sid int, qty int, price decimal (10, 2), order_time date, status varchar(10), tid int, constraint portf_fk foreign key (cid, sid) references trade.portfolio (cid, sid), constraint status_ch check (status in ('cancelled', 'pending', 'filled')))"
	"create table emp.employees (eid int not null constraint employees_pk primary key, emp_name varchar(100), since date, addr varchar(100), ssn varchar(9))"
	"create table trade.trades (tid int, cid int, eid int, tradedate date, primary Key (tid), foreign key (cid) references trade.customers (cid), constraint emp_fk foreign key (eid) references emp.employees (eid))";

sql.SQLPrms-gfeDDLExtension =
	" " //" replicate"
	" "//" replicate"
	" partition by column (cid, sid) "
	" partition by column (cid, sid) " //" partition by column (cid) " " partition by column (sid) "
	" "
	" " ;
