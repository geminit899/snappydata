hydra.Prms-testDescription = " ";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/systemparams1.inc;
include $JTESTS/hydraconfig/topology_3.inc;

hydra.VmPrms-extraClassPaths        += $GEMFIRE/../product-gfxd/lib/gemfirexd.jar;
hydra.VmPrms-extraClassPaths        += $JTESTS;
hydra.VmPrms-extraVMArgs += "-Dgemfirexd.jdbc.client=false";
hydra.GemFirePrms-roles += "gemfirexd.datastore";
hydra.Prms-manageDerbyServer = true;

hydra.Prms-totalTaskTimeSec           = 600;
hydra.Prms-maxResultWaitSec           = 600;
hydra.Prms-maxCloseTaskResultWaitSec  = 300;
hydra.Prms-serialExecution            = false;

include $JTESTS/io/snappydata/hydra/storeTests/startSnappyCluster.inc;
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createDiscDB
	threadGroups = dataStoreThreads;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createDiscSchemas
	threadGroups = ddlThread;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createDiscTables
	threadGroups = ddlThread;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createGFESchemas
	threadGroups = ddlThread;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createGFETables
	threadGroups = ddlThread;
	
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_populateTables
	;	
		
INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
	threadGroups = ddlThread;	

TASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_doDMLOp
	 threadGroups = ddlThread, dataStoreThreads;
			
CLOSETASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
	 threadGroups = ddlThread;

include $JTESTS/io/snappydata/hydra/storeTests/stopSnappyCluster.inc;

sql.SQLPrms-dmlOperations = ONEOF insert update query query query query delete FOENO;
sql.SQLPrms-dmlTables = "trade.customers" "trade.securities";
sql.SQLPrms-hasNetworth = false;
	
sql.SQLPrms-createSchemas = "create schema trade" "create schema default1" "create schema emp" ;

sql.SQLPrms-createTablesStatements =
	"create table trade.customers (cid int not null, cust_name varchar(100), since date, addr varchar(100), tid int, primary key (cid))"
	"create table trade.securities (sec_id int not null, symbol varchar(10) not null, price decimal (30, 25), exchange varchar(10) not null, tid int, constraint sec_pk primary key (sec_id), constraint sec_uq unique (symbol, exchange), constraint exc_ch check (exchange in ('nasdaq', 'nye', 'amex', 'lse', 'fse', 'hkse', 'tse')))"
	"create table emp.employees (eid int not null constraint employees_pk primary key, emp_name varchar(100), since date, addr varchar(100), ssn varchar(9))"
	"create table trade.trades (tid int, cid int, eid int, tradedate date, primary Key (tid), foreign key (cid) references trade.customers (cid), constraint emp_fk foreign key (eid) references emp.employees (eid))";

sql.SQLPrms-gfeDDLExtension =
	" " //" replicated"
	" "//" replicated"
	" "
	" " ;
  	
