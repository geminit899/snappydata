hydra.Prms-testDescription = " this tests altering column null settings in snappydata with verification";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_3.inc;

hydra.VmPrms-extraClassPaths        += $GEMFIRE/../product-gfxd/lib/gemfirexd.jar;
hydra.VmPrms-extraClassPaths        += $GEMFIRE/../product-gfxd/lib/gemfirexd-tools.jar;
hydra.VmPrms-extraClassPaths        += $GEMFIRE/../product-gfxd/lib/jline-1.0.jar;

hydra.Prms-manageDerbyServer = true;
hydra.Prms-extraDerbyServerVMArgs += "-Xmx256m -Dderby.storage.pageCacheSize=32000";

hydra.Prms-totalTaskTimeSec           = 10;
hydra.Prms-maxResultWaitSec           = 600;
hydra.Prms-maxCloseTaskResultWaitSec  = 300;
hydra.Prms-serialExecution            = false;

hydra.VmPrms-extraVMArgs += "-Xmx1024m";

// THIS TEST USES THE MUSIC SCHEMA

// The music schema must be created before running this script (sql/testDBs/musicDDL_InsertBug.sql)

 sql.alterTable.AlterTablePrms-sqlCmds=
  "insert into music.artist(artist_id, artist_name) values (1,'Pink Floyd')"
  "insert into music.album values (1,'Animals',1,'1976-01-01')"
  "insert into music.copyright_owner values (3,'Waters')"
  "insert into music.song(song_id, artist_id, song_name, version, copyright_owner_id, rating) values (1,1,'Dogs','Studio',3,3)"
  "insert into music.copyright values (1,1,3,100, NULL)"
  "insert into music.genre values ('Rock')"
  "insert into music.tracks(album_id, disk_number, track_number, duration_secs, song_id, genre_name) values (1,1,1,800,1,'Rock')"
 ;

include $JTESTS/io/snappydata/hydra/storeTests/startSnappyCluster.inc;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_initialize
  threadGroups = dataStoreThreads, default;

INITTASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_createDiscDB
  threadGroups = dataStoreThreads;

INITTASK     taskClass   = sql.SQLTest taskMethod = HydraTask_runSQLScript
  threadGroups = ddlThread
  sql.SQLPrms-sqlFilePath = sql/testDBs/musicDDL_InsertBug.sql;

INITTASK     taskClass   = sql.alterTable.AlterTableTest taskMethod = HydraTask_runSQLCommands
  threadGroups = ddlThread;

CLOSETASK     taskClass   = sql.SQLTest taskMethod  = HydraTask_verifyResultSets
   threadGroups = dataStoreThreads;

include $JTESTS/io/snappydata/hydra/storeTests/stopSnappyCluster.inc;
