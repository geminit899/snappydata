hydra.Prms-testRequirement = "Test to verify cluster restart with random order for server start
up config with abruptly killing server members during the query execution and then restarting the
 cluster at the end.";
hydra.Prms-testDescription = "
This test starts the snappy cluster and spark cluster.
Test then runs the sql script for creating and loading data in persistent column tables using northwind schema and data.
It then executes the snappy job, spark app and sql script in parallel along with abruptly killing servers one by one during the ops are in progress and then randomizing the order of server startup config after stopping and before restarting the cluster.
Snappy job executes and validate the northwind queries on the tables created and loaded through split mode.
sql script only executes the northwind queries on the tables created and loaded through split mode.
At the last, test verifies that the cluster is restarted successfully every time.";

INCLUDE $JTESTS/io/snappydata/hydra/startUp/serverMeanKill.inc;
INCLUDE $JTESTS/io/snappydata/hydra/startUp/clusterRestart.inc;
CLOSETASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.northwind.ValidateNWQueriesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer =
            "dataFilesLocation=${dataFilesLocation},tableType=${tableType},fullResultSetValidation=${fullResultSetValidation},isSmokeRun=${isSmokeRun},numRowsValidation=${numRowsValidation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/nwPersistentColumnTablesTest.conf;
INCLUDE $JTESTS/io/snappydata/hydra/northwind/backUpServerConfig.inc;

hydra.Prms-totalTaskTimeSec           = 300;