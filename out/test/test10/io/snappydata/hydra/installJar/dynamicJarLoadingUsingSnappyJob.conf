hydra.Prms-testRequirement = "Test to verify dynamic jar loading feature using snappy job";
hydra.Prms-testDescription = "
This test starts the snappy cluster.
Creates classes with version 1, snappyJob and jar at runtime and executes the snappyjob with the created jar.
Test then modify the jar dynamically by creating classes with version 2 and snappyJob and then executes the snappyjob with the modified jar.
It then again executes the snappy job to verify that we get expected ClassNotFoundException for older class version.
Test verifies that the jars contains the required class versions each time";

INCLUDE $JTESTS/io/snappydata/hydra/cluster/startEmbeddedModeCluster.conf;

INITTASK   taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeInstallJarCommand
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-jarIdentifier = APP.snappyTestsJar
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeSnappyJobWithDynamicJarLoading_installJar
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames= DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=1,numServers=${snappyStoreHosts},expectedException=false"
           io.snappydata.hydra.cluster.SnappyPrms-numTimesToRetry = 0
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = DynamicJarLoadingJobInstallJar
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeSnappyJobWithDynamicJarLoading_modifyJar
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames= DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=2,numServers=${snappyStoreHosts},expectedException=false"
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = DynamicJarLoadingJobModifyJar
           io.snappydata.hydra.cluster.SnappyPrms-numTimesToRetry = 0
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.InstallJarTest
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=1,numServers=${snappyStoreHosts},expectedException=true"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = InstallJarTest
           io.snappydata.hydra.cluster.SnappyPrms-numTimesToRetry = 0
           threadGroups = snappyThreads
           ;

/*TASK       taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.installJar.DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=2,numServers=${snappyStoreHosts}"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-numTimesToRetry = 2
           threadGroups = snappyThreads
           maxTimesToRun = 1;*/

INCLUDE $JTESTS/io/snappydata/hydra/cluster/stopEmbeddedModeCluster.conf;

