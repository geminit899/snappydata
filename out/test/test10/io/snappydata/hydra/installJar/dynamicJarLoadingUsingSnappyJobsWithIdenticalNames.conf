hydra.Prms-testRequirement = "Test to verify dynamic jar loading feature using snappy jobs with identical names but different functionality";
hydra.Prms-testDescription = "
This test starts the snappy cluster.
Creates classes with version 1 and jar packaging these classes at runtime, then executes the gemxd install-jar command to install a local jar file to RowStore.
It then creates two snappy jobs dynamically with identical names but different functionality and jars containing these job classes.
Then executes the snappy jobs in parallel with the created jars.
Test verifies that the classes loaded through install-jar command are accessible to the snappy jobs and both the jobs works fine in parallel in spite of having same class name.";

INCLUDE $JTESTS/io/snappydata/hydra/cluster/startEmbeddedModeCluster.conf;

INITTASK   taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeInstallJarCommand
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-jarIdentifier = APP.snappyTestsJar
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeInstallJarCommand_DynamicJarLoading
           threadGroups = snappyThreads;

INITTASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.InstallJarTest
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=1,numServers=${snappyStoreHosts},expectedException=false"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = InstallJarTest
           threadGroups = snappyThreads
           ;

TASK       taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeSnappyJob_DynamicJarLoading
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames= DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=1,numServers=${snappyStoreHosts},expectedException=false"
           threadGroups = snappyStoreThreads
           maxThreads = 1
           maxTimesToRun = 3
           ;

TASK       taskClass   = io.snappydata.hydra.installJar.DynamicJarLoadingTest taskMethod  = HydraTask_executeSnappyJobWithIdenticalName
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames= DynamicJarLoadingJob
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = DynamicJarLoadingJobWithIdenticalName
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "classVersion=1,numServers=${snappyStoreHosts},expectedException=false"
           threadGroups = leadThreads
           maxThreads = 1
           maxTimesToRun = 3
           ;

INCLUDE $JTESTS/io/snappydata/hydra/cluster/stopEmbeddedModeCluster.conf;

