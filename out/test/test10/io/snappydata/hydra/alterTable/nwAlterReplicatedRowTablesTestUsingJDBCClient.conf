hydra.Prms-testRequirement = "Test to verify Alter tables functionality for row tables using
jdbc client connection.";
hydra.Prms-testDescription = "
This test starts the snappy cluster and spark cluster.
Test then runs the sql script for creating and loading data in persistent replicated row
tables using northwind schema and data.
Test then alters orders and orders details tables by adding new column in them, inserts data
using jdbc client connection, verifies that tables are altered successfully and data is inserted.
Test then deletes the newly added rows and drops the new columns added in both the tables using
jdbc client connection.
It then executes the spark app and snappy job in parallel.
Spark app executes and validate the northwind queries on the tables created and loaded through embedded mode.
sql script only executes the northwind queries on the tables created and loaded through embedded mode.";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_replicatedRowTables_persistent.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyThreads
            ;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyAlterTablesTest taskMethod  = HydraTask_alterTables
            threadGroups = snappyThreads
            ;

TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.northwind.ValidateNWQueriesApp
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${dataFilesLocation} ${tableType} ${fullResultSetValidation} ${isSmokeRun} ${numRowsValidation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = leadThreads;

TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.northwind.ValidateNWQueriesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer =
                        "dataFilesLocation=${dataFilesLocation},tableType=${tableType},fullResultSetValidation=${fullResultSetValidation},isSmokeRun=${isSmokeRun},numRowsValidation=${numRowsValidation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            maxThreads = 1
            threadGroups = snappyStoreThreads;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;