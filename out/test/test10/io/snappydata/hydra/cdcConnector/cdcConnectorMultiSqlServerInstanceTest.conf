hydra.Prms-testRequirement = "Test cdc in smart Connector mode with multiple sqlserver instances";
hydra.Prms-testDescription = "The test does the following:
A cluster is started in smart connector mode,then tables are created and populated.
then a validtion job is executed ,which will record the number of rows in each table at snappy and sql server side in a file.
Then ingestion app will ingest some records in both the sqlservers.
After which two cdc streaming applications are started and it keeps running in the bg.
Now again ingestion app is run in parallel with the app,that does multithreaded pointlookup queries on the snappy cluster.
These three operation will keep running for the time untill the totalTaskTimeSec criteria is met ,upon which the streaming app is shut down.
And at the end validation is done ,to check if the changes in the sqlserver has been reflected in the snappy cluster.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_1.inc;

//threadGroups
INCLUDE $JTESTS/io/snappydata/hydra/cdcConnector/threadGroups.inc

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = initSnappyArtifacts
            runMode = always
            threadGroups = snappyThreads,snappyInitThread,snappyTaskThread1,snappyTaskThread2,snappyTaskThread3,snappyTaskThread4,snappyTaskThread5,snappyHAThread;

io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initStartRange = fcn (${initStartRange}) ncf;

io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initEndRange = fcn (${initEndRange}) ncf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadFewTables.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyInitThread;


INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.app.JavaCdcStreamingApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --total-executor-cores=${coresPerStrmApp} --conf spark.scheduler.mode=FAIR --conf spark.sql.defaultSizeInBytes=1000 --conf spark.driver.memory=10g --conf spark.executor.memory=4g --jars ${connectorJar},${driverJar},${testJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${connectionPropFile1} ${sourceDestFile1}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = "${pocJar}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDCStream = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp1"
            threadGroups = snappyInitThread
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.app.JavaCdcStreamingApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --total-executor-cores=${coresPerStrmApp} --conf spark.scheduler.mode=FAIR --conf spark.sql.defaultSizeInBytes=1000 --conf spark.driver.memory=10g --conf spark.executor.memory=4g --jars ${connectorJar},${driverJar},${testJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${connectionPropFile2} ${sourceDestFile2}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = "${pocJar}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDCStream = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp2"
            threadGroups = snappyInitThread
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCPerfSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " 1 ${deleteQFilePath} false 0 true false false ${initStartRange} sqlServer1 ${dataBaseName}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "BulkDeleteApp"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCPerfSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " 1 ${deleteQFilePath} false 0 true false false ${initStartRange} sqlServer2 ${dataBaseName}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "BulkDeleteApp"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread;


INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath1} 1 false ${dataBaseName} sqlServer1 CDCValidationAppStrm1"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm1"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath2} 1 false ${dataBaseName} sqlServer2 CDCValidationAppStrm2"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm2"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCIngestionApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${initStartRange} ${initEndRange} ${insertQueryPath1} sqlServer1 ${dataBaseName}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCIngestionApp1"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCIngestionApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${initStartRange} ${initEndRange} ${insertQueryPath2} sqlServer2 ${dataBaseName}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCIngestionApp1"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread;

CLOSETASK   taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_closeStreamingJob
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp1"
            threadGroups = snappyInitThread;

CLOSETASK   taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_closeStreamingJob
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp2"
            threadGroups = snappyInitThread;

CLOSETASK   taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar}  "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath1} 2 false ${dataBaseName} sqlServer1 CDCValidationAppStrm1"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm1"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread
            ;

CLOSETASK   taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar}  "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath2} 2 false ${dataBaseName} sqlServer2 CDCValidationAppStrm2"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm2"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyInitThread
            ;


hydra.Prms-maxResultWaitSec = ${maxResultWaitSec};
hydra.Prms-totalTaskTimeSec = ${totalTaskTimeSec};
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;
io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDC = true;
io.snappydata.hydra.cluster.SnappyPrms-isLongRunningTest = true;
