hydra.Prms-testRequirement = "Test to create catlog inconsistency.";
hydra.Prms-testDescription = "
Test starts the cluster with 2 locator, 3 server and 2 lead nodes, create 10 clients that repeatedly create a table,
load data to it and then drop the table.
At the same time while client threads are creating/dropping tables, test will recycle the lead, server and locator node
at a regular interval of 1 min delay between recycling of each of these members one by one at a time.
";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;
INCLUDE $JTESTS/hydraconfig/topology_5.inc;
INCLUDE $JTESTS/io/snappydata/hydra/catalogConsistency/snappyHA.inc;

THREADGROUP clientThreads
            totalThreads = fcn "(${${E}Hosts} * ${${E}VMsPerHost} *  ${${E}ThreadsPerVM}) " ncf
            totalVMs     = fcn "(${${E}Hosts} * ${${E}VMsPerHost})" ncf
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${E}\",
                                ${${E}Hosts}, true)" ncf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_initializeSnappyTest
            runMode = always
            threadGroups = clientThreads;

TASK        taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_airline_table_catalogConsistency.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = airlineParquetData
            threadGroups = clientThreads
            ;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 3600;
hydra.Prms-maxResultWaitSec           = 3600;

hydra.Prms-maxCloseTaskResultWaitSec  = 3600;
hydra.Prms-serialExecution            = false;