hydra.Prms-testRequirement = "Test to create catlog inconsistency.";
hydra.Prms-testDescription = "
Test starts the cluster with 2 locator, 3 server and 2 lead nodes, create 10 clients that repeatedly create a table,
load data to it and then drop the table.
At the same time while client threads are creating/dropping tables, test will recycle the lead, server and locator node
at a regular interval of 1 min delay between recycling of each of these members one by one at a time.";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;
INCLUDE $JTESTS/hydraconfig/topology_5.inc;
INCLUDE $JTESTS/io/snappydata/hydra/catalogConsistency/snappyHA.inc;

THREADGROUP clientThreads
            totalThreads = fcn "(${${E}Hosts} * ${${E}VMsPerHost} *  ${${E}ThreadsPerVM}) " ncf
            totalVMs     = fcn "(${${E}Hosts} * ${${E}VMsPerHost})" ncf
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${E}\",
                                ${${E}Hosts}, true)" ncf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_initializeSnappyTest
            runMode = always
            threadGroups = clientThreads;

/*INITTASK    taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_column_table.sql create_and_load_row_table.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = airlineParquetData airportcodeParquetData
            threadGroups = snappyThreads
            ;*/

TASK    taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_airline_table_catalogConsistency.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = airlineParquetData
            threadGroups = clientThreads
            maxThreads = 1
            ;

/*INITTASK    taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = runQuery
            threadGroups = snappyThreads;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.CatalogConsistencyTest
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

INITTASK   taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = runQuery
           threadGroups = snappyThreads;

TASK       taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
           io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = olap_queries.sql oltp_queries.sql
           threadGroups = snappyThreads
           ;

TASK       taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.AirlineDataQueriesJob
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-numTimesToRetry = 10
           threadGroups = leadThreads
           maxTimesToRun = 3;*/

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 3600;
hydra.Prms-maxResultWaitSec           = 3600;

hydra.Prms-maxCloseTaskResultWaitSec  = 3600;
hydra.Prms-serialExecution            = false;