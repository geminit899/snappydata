hydra.Prms-testRequirement = "Test to verify cluster recovery in missing disk store situation.";
hydra.Prms-testDescription = "he test starts a snappy cluster ,populates data ,and records data count for validation.
The default diskstores from one node is removed ,the cluster is restarted and then data count is validated to verify proper cluster restart.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_1.inc;

//threadGroups
INCLUDE $JTESTS/io/snappydata/hydra/cdcConnector/threadGroups.inc;

//Initial threadGroups
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = initSnappyArtifacts
            runMode = always
            threadGroups = snappyThreads,snappyInitThread,snappyTaskThread1,snappyTaskThread2,snappyTaskThread3,snappyTaskThread4,snappyTaskThread5,snappyHAThread;

//Load data
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadMixedTables.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyInitThread;

// Store data count of all the tables loaded.
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_storeDataCount
            threadGroups = snappyInitThread;

INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_validateDataCount
            threadGroups = snappyInitThread;

//remove default diskstores from one node.
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_removeDiskStore
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-dataLocation = ${dataLocation}
            threadGroups = snappyInitThread;

//Restart the cluster
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_clusterRestart
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${snappyPath}
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-nodeType = allNodes
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isStopStartCluster=true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isbackUpRecovery=true
            threadGroups = snappyInitThread;

//Validate data count after restart.
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_validateDataCount
            threadGroups = snappyInitThread;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-isLongRunningTest = true;



