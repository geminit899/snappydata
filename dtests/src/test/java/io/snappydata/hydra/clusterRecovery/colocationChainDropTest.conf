hydra.Prms-testRequirement = "Test to verify cluster recovery during dropping of colocation chain";
hydra.Prms-testDescription = "The test starts a cluster ,creates colocated tables and populates data .
Then after data is loaded try dropping the tables in wrong order along with mean kill on random servers.
After this cluster is restarted and the tables are dropped in the right order.";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_1.inc;

//threadGroups
INCLUDE $JTESTS/io/snappydata/hydra/cdcConnector/threadGroups.inc;

//Initial threadGroups
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = initSnappyArtifacts
            runMode = always
            threadGroups = snappyThreads,snappyInitThread,snappyTaskThread1,snappyTaskThread2,snappyTaskThread3,snappyTaskThread4,snappyTaskThread5,snappyHAThread;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_recordProcessIDWithHost
            runMode = always
            threadGroups = snappyThreads,snappyInitThread,snappyTaskThread1,snappyTaskThread2,snappyTaskThread3,snappyTaskThread4,snappyTaskThread5,snappyHAThread;

/*
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadColocatedTables_temp.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyInitThread;*/

//Do Validation take data count of all the tables .
INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_storeDataCount
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isBeforeRestart = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-dataLocation = ${queryPath}
            threadGroups = snappyInitThread;

TASK       taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_executeSQLScripts
           io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = dropColocatedTablesInWrongOrder.sql
           io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
           maxTimesToRun = 1
           maxThreads = 1
           threadGroups = snappyTaskThread1;

//While tables are being dropped ,issue mean kill.
TASK       taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_meanKillProcesses
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-nodeType = servers
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${snappyPath}
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-numNodesToStop=1
           startInterval = 78 //after 1.30 mins
           endInterval   = 78
           maxTimesToRun = 2
           maxThreads = 1
           threadGroups = snappyTaskThread2;

//After 3 mins drop tables in the right order
TASK       taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_executeSQLScripts
           io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = dropColocatedTablesInRightOrder.sql
           io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
           startInterval = 300  //after 3 mins
           endInterval   = 300
           maxTimesToRun = 2
           maxThreads = 1
           threadGroups = snappyTaskThread3;

//restart the cluster.
CLOSETASK  taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_clusterRestart
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${snappyPath}
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-nodeType = allNodes
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isStopStartCluster=true
           threadGroups = snappyInitThread;

CLOSETASK   taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_validateDataCount
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-dataLocation = ${queryPath}
            threadGroups = snappyInitThread;

CLOSETASK  taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_executeSQLScripts
           io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = dropColocatedTablesInRightOrder.sql
           io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
           threadGroups = snappyInitThread;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;

io.snappydata.hydra.cluster.SnappyPrms-isLongRunningTest = true;
hydra.Prms-maxResultWaitSec = 10800; // 3 hours
hydra.Prms-totalTaskTimeSec = 18000; // 5 hours

