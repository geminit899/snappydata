hydra.Prms-testRequirement = "Test to verify putInto functionality in embedded Mode using ct(wide)
schema";
hydra.Prms-testDescription = "This test starts the snappy cluster and spark cluster.
    Creates column tables with key columns using snappy job. After initialization, tasks are
    performed in snappy job and sql scripts which validate queries with column tables using ct schema.
    In closeTask, test executes putInto using snappy job  and then execute and validate the query
    results";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;
//create and load tables using snappyJob
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.ct.CreateAndLoadCTColumnTablesWithKeyColumnsJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "dataFilesLocation=${dataFilesLocation},tableType=${tableType},redundancy=${redundantCopies},persistenceMode=${persistenceMode}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

// putInto tables using snappyJob
TASK        taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.ct.AddDataUsingPutIntoCTTablesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "dataFilesLocation=${dataFilesLocation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads,snappyStoreThreads
            ;

TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = ct_queries.sql
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = leadThreads
            ;

// Perform validation after putInto tables using snappyJob
CLOSETASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.ct.ValidateCTQueriesWithPutIntoJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer =
            "dataFilesLocation=${dataFilesLocation},tableType=${tableType},fullResultSetValidation=${fullResultSetValidation},insertUniqueRecords=${insertUniqueRecords},skipNumRowsValidation=${skipNumRowsValidation}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 120;
hydra.Prms-maxResultWaitSec           = 1200;

