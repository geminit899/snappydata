hydra.Prms-testRequirement = "Test basic cdc in smart Connector mode for column tables ";
hydra.Prms-testDescription = "The test does the following:
A cluster is started in smart connector mode,then tables are created and populated.
then a validation job is executed ,which will record the number of rows in each table at snappy and sql server side in a file.
Then ingestion app will ingest some records in the sqlserver.
After which cdc streaming application is started and it keeps running in the bg.
Now again ingestion app is run in parallel node HA.
These three operation will keep running for the time untill the totalTaskTimeSec criteria is met ,upon which the streaming app is shut down.
And at the end validation is done ,to check if the changes in the sqlserver has been reflected in the snappy cluster.";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initStartRange = fcn (${initStartRange}) ncf;

io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initEndRange = fcn (${initEndRange}) ncf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadFewTables.sql
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
            threadGroups = snappyThreads;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.app.JavaCdcStreamingApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --total-executor-cores=${coresPerStrmApp} --jars ${connectorJar},${driverJar},${testJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${connectionPropFile1} ${sourceDestFile} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = "${pocJar}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDCStream = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp"
            threadGroups = snappyThreads
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCPerfSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " 1 ${deleteQFilePath} false 0 true false false ${initStartRange} ${sqlServerInstance} ${dataBaseName}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "BulkDeleteApp"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads;


INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath} 1 false ${dataBaseName} sqlServer1 CDCValidationAppStrm ${initStartRange} "
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

INITTASK    taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_InitializeBB
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initStartRange = ${initStartRange}
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-initEndRange = ${initEndRange}
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

TASK        taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCIngestionApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar}  "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${threadCnt} ${insertQueryPath} ${sqlServerInstance} ${hostPort} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCIngestionApp2"
            threadGroups = snappyStoreThreads
            startInterval = 300  //  after every 5 mins
            endInterval = 300
            maxThreads = 1
            ;

CLOSETASK   taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.app.JavaCdcStreamingApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --total-executor-cores=${coresPerStrmApp} --jars ${connectorJar},${driverJar},${testJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${connectionPropFile1} ${sourceDestFile} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = "${pocJar}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDCStream = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp"
            threadGroups = snappyThreads
            ;

CLOSETASK   taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_closeStreamingJob
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp"
            threadGroups = snappyThreads;

CLOSETASK   taskClass  = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.cdcConnector.CDCValidationApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --jars ${driverJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = " ${tableListPath} 2 false ${dataBaseName} sqlServer1 CDCValidationAppStrm ${initStartRange} "
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "CDCValidationAppStrm"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

 INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-maxResultWaitSec = 500;
hydra.Prms-totalTaskTimeSec = 600;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;
io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDC = true;

