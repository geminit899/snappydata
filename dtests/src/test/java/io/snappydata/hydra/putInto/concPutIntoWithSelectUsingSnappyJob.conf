hydra.Prms-testRequirement = "Test to verify concurrent putInto functionality along with concurrent select ops to identify the memory leak.";
hydra.Prms-testDescription = "
This test starts the snappy cluster.
Creates column table using sql script.
Runs the concurrent putInto and select queries using 1 thread for each op in snappy job.
In this test, 4 snappy jobs are being run concurrently with different ranges for update and inserts.
blockSize=100000L,stepSize=10000L : job doing 90k updates and 10k inserts
blockSize=1010000L,stepSize=10000L : job doing 1 million updates and 10k inserts
blockSize=500000L,stepSize=40000L : job doing 460k updates and 40k inserts
blockSize=100000L,stepSize=50000L : job doing 50k updates and 50k inserts
";

INCLUDE $JTESTS/io/snappydata/hydra/cluster/startEmbeddedModeCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_testLTable.sql
            threadGroups = snappyThreads
            ;

TASK      taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.ConcurrentPutInto
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            //io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "numThreadsForConcExecution=15"
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "blockSize=100000,stepSize=10000"
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = snappyStoreThreads;

TASK      taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.ConcurrentPutInto
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "blockSize=500000,stepSize=40000"
            threadGroups = snappyThreads;

TASK      taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.ConcurrentPutInto
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "blockSize=1010000,stepSize=10000"
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = leadThreads;

TASK      taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.ConcurrentPutInto
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "blockSize=100000,stepSize=50000"
            maxThreads = 1
            maxTimesToRun = 1
            threadGroups = locatorThreads;

INCLUDE $JTESTS/io/snappydata/hydra/cluster/stopEmbeddedModeCluster.conf;

io.snappydata.hydra.cluster.SnappyPrms-useJDBCConnInSnappyJob = true;
hydra.Prms-maxResultWaitSec           = 18000;
hydra.Prms-maxCloseTaskResultWaitSec  = 18000;

io.snappydata.hydra.cluster.SnappyPrms-enableFlightRecorder = true;
io.snappydata.hydra.cluster.SnappyPrms-numThreadsForConcExecution =15;